%-12345X@PJL JOB NAME="PowerPoint プレゼンテーション"
@PJL SET STRINGCODESET=UTF8
@PJL COMMENT "EPS (0.3.7071.0); Windows 10 Pro 10.0.17134.1; PScript 0.3.17134.191"
@PJL COMMENT "Username: SUGIURA; App Filename: PowerPoint プレゼンテーション; 5-13-2019"
@PJL DMINFO ASCIIHEX="0400040101020D101001153230313930353133303930383336"
@PJL SET USERNAME="SUGIURA"
@PJL SET JOBNAME="PowerPoint プレゼンテーション"
%!PS-Adobe-3.0 EPSF-3.0
%%Title: <506F776572506F696E74208376838C835B83938365815B835683878393>
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 5/13/2019 18:8:36
%%For: SUGIURA
%%BoundingBox: 12 176 408 418
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: (atend)
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (HP LaserJet 2300L) (3010.107) 0
%%LanguageLevel: 3
%%HiResBoundingBox: 12 176.0062 407.0401 417.9940
%%CropBox: 12 176.0062 407.0401 417.9940
%ADO_BeginApplicationHeaderComments
%%Creator: Adobe Acrobat 19.10.0
%%LanguageLevel: 3
%ADO_EndApplicationHeaderComments
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments

%%BeginDefaults
%ADO_BeginApplicationDefaultsComments
%%ViewingOrientation: 1 0 0 1
%ADO_EndApplicationDefaultsComments

%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/GothicBBB-Medium-RKSJ-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<82B182CC83578387837582CD8CBB8DDD82B182CC8376838A8393835E82C59798977082C582AB82
E988C88FE382CC83818382838A82F0954B977682C682B582DC82B7814288C889BA82CC8A6590DD9
2E8>90 500<82CC88EA82C2814182DC82BD82CD82BB82CC916782DD8D8782ED82B982F08E7792
E882B582BD8CE381418376838A8393836782B592BC82B582C482DD82C482AD82BE82B382A28142>
90 485<A5506F73745363726970748376838D8370836583428356815B836782A982E7814183478
389815B82AA8C798CB882B782E982E682A482C98DC5934B89BB2082F0914991F082B782E98142>
90 455<A58366836F83438358834983768356838783938376838D8370836583428356815B83678
2CC209798977082C582AB82E98376838A8393835E83818382838A2082CC926C82AA90B382B582A2
82B182C682F08A6D944682B782E98142>90 440<A58368834C8385838183938367928682C58E6
7977082B382EA82C482A282E9837483488393836782CC909482F08CB882E782B78142>90 425
<A58368834C838583818393836782F095AA8A8482B582C48376838A8393836782B782E98142>90
410 10 0/GothicBBB-Medium-RKSJ-H}{cleartomark}ifelse}ifelse showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 11.99905 582.00091 ] def 
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1046 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® PowerPoint® for Office 365"
   xmp:CreatorTool="Microsoft® PowerPoint® for Office 365"
   xmp:CreateDate="2019-05-13T18:07:41+09:00"
   xmp:ModifyDate="2019-05-13T18:07:41+09:00"
   xmpMM:DocumentID="uuid:CFD57322-DCEA-4E74-B713-0B4C729B0B09"
   xmpMM:InstanceID="uuid:CFD57322-DCEA-4E74-B713-0B4C729B0B09">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint プレゼンテーション</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>杉浦陽介</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup

%%Page: 10 1

%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
Adobe_AGM_Utils begin
[
[/Label (10)]
[/TrimBox [12 176.00610351563 407.04000854492 417.99395751953]]
[/BleedBox [12 176.00610351563 407.04000854492 417.99395751953]]
[/ArtBox [0 134.911 420 445.837 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
abTos!!!!!~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
m,6pJ!!!!!~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
^L[?I!!!!!~>
>>
/CSD add_res
/3 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
`;o3(!!!!!~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
gsave
8.33333 8.33333 scale
-12 -12.96 translate
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 176.966 mo
12 418.954 li
407.04 418.954 li
407.04 176.966 li
cp
clp
gsave
-85.8982 445.837 mo
466.86 445.837 li
466.86 134.911 li
-85.8982 134.911 li
-85.8982 445.837 li
clp
-85.8982 445.837 mo
466.86 445.837 li
466.86 134.911 li
-85.8982 134.911 li
-85.8982 445.837 li
false sop
/4 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /4 /CSD get_res sepcs
0 sep
ef
23.5133 261.971 mo
23.5133 257.22 27.3596 253.374 32.1098 253.374 cv
194.287 253.374 li
199.037 253.374 202.883 257.22 202.883 261.971 cv
202.883 390.568 li
202.883 395.315 199.037 399.164 194.287 399.164 cv
32.1098 399.164 li
27.3596 399.164 23.5133 395.315 23.5133 390.568 cv
23.5133 261.971 li
ef
23.2587 260.095 mo
23.3241 259.785 23.4055 259.48 23.5018 259.182 cv
24.3564 259.458 li
24.2698 259.726 24.1966 260.001 24.1376 260.28 cv
23.2587 260.095 li
23.8396 258.299 mo
23.968 258.01 24.1111 257.729 24.2679 257.457 cv
25.0461 257.906 li
24.9048 258.151 24.776 258.404 24.6604 258.664 cv
23.8396 258.299 li
24.7817 256.664 mo
24.9668 256.409 25.165 256.164 25.3752 255.93 cv
26.0437 256.53 li
25.8542 256.741 25.6757 256.962 25.509 257.192 cv
24.7817 256.665 li
24.7817 256.664 li
26.0414 255.261 mo
26.2747 255.05 26.5191 254.851 26.7736 254.664 cv
27.3039 255.389 li
27.0746 255.557 26.8544 255.736 26.6441 255.927 cv
26.0414 255.261 li
27.5639 254.147 mo
27.8352 253.99 28.1156 253.845 28.404 253.716 cv
28.772 254.535 li
28.5124 254.652 28.26 254.782 28.0157 254.924 cv
27.5639 254.147 li
29.285 253.374 mo
29.5824 253.277 29.8867 253.194 30.1969 253.128 cv
30.3858 254.006 li
30.1066 254.066 29.8327 254.14 29.5649 254.228 cv
29.285 253.374 li
31.1293 252.977 mo
31.4391 252.944 31.7535 252.926 32.0716 252.925 cv
32.0754 253.823 li
31.7881 253.824 31.5047 253.84 31.2255 253.871 cv
31.1293 252.977 li
32.9718 252.925 mo
33.87 252.925 li
33.87 253.823 li
32.9718 253.823 li
32.9718 252.925 li
34.7682 252.925 mo
35.6664 252.925 li
35.6664 253.823 li
34.7682 253.823 li
34.7682 252.925 li
36.5646 252.925 mo
37.4628 252.925 li
37.4628 253.823 li
36.5646 253.823 li
36.5646 252.925 li
38.3612 252.925 mo
39.2594 252.925 li
39.2594 253.823 li
38.3612 253.823 li
38.3612 252.925 li
40.1576 252.925 mo
41.0558 252.925 li
41.0558 253.823 li
40.1576 253.823 li
40.1576 252.925 li
41.954 252.925 mo
42.8523 252.925 li
42.8523 253.823 li
41.954 253.823 li
41.954 252.925 li
43.7505 252.925 mo
44.6487 252.925 li
44.6487 253.823 li
43.7505 253.823 li
43.7505 252.925 li
45.5469 252.925 mo
46.4452 252.925 li
46.4452 253.823 li
45.5469 253.823 li
45.5469 252.925 li
47.3435 252.925 mo
48.2417 252.925 li
48.2417 253.823 li
47.3435 253.823 li
47.3435 252.925 li
49.1399 252.925 mo
50.0381 252.925 li
50.0381 253.823 li
49.1399 253.823 li
49.1399 252.925 li
50.9363 252.925 mo
51.8345 252.925 li
51.8345 253.823 li
50.9363 253.823 li
50.9363 252.925 li
52.7329 252.925 mo
53.6311 252.925 li
53.6311 253.823 li
52.7329 253.823 li
52.7329 252.925 li
54.5293 252.925 mo
55.4275 252.925 li
55.4275 253.823 li
54.5293 253.823 li
54.5293 252.925 li
56.3257 252.925 mo
57.2239 252.925 li
57.2239 253.823 li
56.3257 253.823 li
56.3257 252.925 li
58.1222 252.925 mo
59.0205 252.925 li
59.0205 253.823 li
58.1222 253.823 li
58.1222 252.925 li
59.9187 252.925 mo
60.8169 252.925 li
60.8169 253.823 li
59.9187 253.823 li
59.9187 252.925 li
61.7151 252.925 mo
62.6134 252.925 li
62.6134 253.823 li
61.7151 253.823 li
61.7151 252.925 li
63.5116 252.925 mo
64.4098 252.925 li
64.4098 253.823 li
63.5116 253.823 li
63.5116 252.925 li
65.308 252.925 mo
66.2062 252.925 li
66.2062 253.823 li
65.308 253.823 li
65.308 252.925 li
67.1046 252.925 mo
68.0028 252.925 li
68.0028 253.823 li
67.1046 253.823 li
67.1046 252.925 li
68.901 252.925 mo
69.7992 252.925 li
69.7992 253.823 li
68.901 253.823 li
68.901 252.925 li
70.6974 252.925 mo
71.5958 252.925 li
71.5958 253.823 li
70.6974 253.823 li
70.6974 252.925 li
72.494 252.925 mo
73.3922 252.925 li
73.3922 253.823 li
72.494 253.823 li
72.494 252.925 li
74.2904 252.925 mo
75.1886 252.925 li
75.1886 253.823 li
74.2904 253.823 li
74.2904 252.925 li
76.0868 252.925 mo
76.9851 252.925 li
76.9851 253.823 li
76.0868 253.823 li
76.0868 252.925 li
77.8833 252.925 mo
78.7815 252.925 li
78.7815 253.823 li
77.8833 253.823 li
77.8833 252.925 li
79.6797 252.925 mo
80.578 252.925 li
80.578 253.823 li
79.6797 253.823 li
79.6797 252.925 li
81.4762 252.925 mo
82.3745 252.925 li
82.3745 253.823 li
81.4762 253.823 li
81.4762 252.925 li
83.2727 252.925 mo
84.1709 252.925 li
84.1709 253.823 li
83.2727 253.823 li
83.2727 252.925 li
85.0691 252.925 mo
85.9673 252.925 li
85.9673 253.823 li
85.0691 253.823 li
85.0691 252.925 li
86.8655 252.925 mo
87.7639 252.925 li
87.7639 253.823 li
86.8655 253.823 li
86.8655 252.925 li
88.6621 252.925 mo
89.5603 252.925 li
89.5603 253.823 li
88.6621 253.823 li
88.6621 252.925 li
90.4585 252.925 mo
91.3567 252.925 li
91.3567 253.823 li
90.4585 253.823 li
90.4585 252.925 li
92.2551 252.925 mo
93.1533 252.925 li
93.1533 253.823 li
92.2551 253.823 li
92.2551 252.925 li
94.0515 252.925 mo
94.9497 252.925 li
94.9497 253.823 li
94.0515 253.823 li
94.0515 252.925 li
95.8479 252.925 mo
96.7461 252.925 li
96.7461 253.823 li
95.8479 253.823 li
95.8479 252.925 li
97.6444 252.925 mo
98.5426 252.925 li
98.5426 253.823 li
97.6444 253.823 li
97.6444 252.925 li
99.4408 252.925 mo
100.339 252.925 li
100.339 253.823 li
99.4408 253.823 li
99.4408 252.925 li
101.237 252.925 mo
102.135 252.925 li
102.135 253.823 li
101.237 253.823 li
101.237 252.925 li
103.034 252.925 mo
103.932 252.925 li
103.932 253.823 li
103.034 253.823 li
103.034 252.925 li
104.83 252.925 mo
105.728 252.925 li
105.728 253.823 li
104.83 253.823 li
104.83 252.925 li
106.627 252.925 mo
107.525 252.925 li
107.525 253.823 li
106.627 253.823 li
106.627 252.925 li
108.423 252.925 mo
109.321 252.925 li
109.321 253.823 li
108.423 253.823 li
108.423 252.925 li
110.22 252.925 mo
111.118 252.925 li
111.118 253.823 li
110.22 253.823 li
110.22 252.925 li
112.016 252.925 mo
112.914 252.925 li
112.914 253.823 li
112.016 253.823 li
112.016 252.925 li
113.813 252.925 mo
114.711 252.925 li
114.711 253.823 li
113.813 253.823 li
113.813 252.925 li
115.609 252.925 mo
116.507 252.925 li
116.507 253.823 li
115.609 253.823 li
115.609 252.925 li
117.405 252.925 mo
118.304 252.925 li
118.304 253.823 li
117.405 253.823 li
117.405 252.925 li
119.202 252.925 mo
120.1 252.925 li
120.1 253.823 li
119.202 253.823 li
119.202 252.925 li
120.998 252.925 mo
121.897 252.925 li
121.897 253.823 li
120.998 253.823 li
120.998 252.925 li
122.795 252.925 mo
123.693 252.925 li
123.693 253.823 li
122.795 253.823 li
122.795 252.925 li
124.591 252.925 mo
125.49 252.925 li
125.49 253.823 li
124.591 253.823 li
124.591 252.925 li
126.388 252.925 mo
127.286 252.925 li
127.286 253.823 li
126.388 253.823 li
126.388 252.925 li
128.184 252.925 mo
129.082 252.925 li
129.082 253.823 li
128.184 253.823 li
128.184 252.925 li
129.981 252.925 mo
130.879 252.925 li
130.879 253.823 li
129.981 253.823 li
129.981 252.925 li
131.777 252.925 mo
132.675 252.925 li
132.675 253.823 li
131.777 253.823 li
131.777 252.925 li
133.574 252.925 mo
134.472 252.925 li
134.472 253.823 li
133.574 253.823 li
133.574 252.925 li
135.37 252.925 mo
136.268 252.925 li
136.268 253.823 li
135.37 253.823 li
135.37 252.925 li
137.166 252.925 mo
138.065 252.925 li
138.065 253.823 li
137.166 253.823 li
137.166 252.925 li
138.963 252.925 mo
139.861 252.925 li
139.861 253.823 li
138.963 253.823 li
138.963 252.925 li
140.759 252.925 mo
141.658 252.925 li
141.658 253.823 li
140.759 253.823 li
140.759 252.925 li
142.556 252.925 mo
143.454 252.925 li
143.454 253.823 li
142.556 253.823 li
142.556 252.925 li
144.352 252.925 mo
145.251 252.925 li
145.251 253.823 li
144.352 253.823 li
144.352 252.925 li
146.149 252.925 mo
147.047 252.925 li
147.047 253.823 li
146.149 253.823 li
146.149 252.925 li
147.945 252.925 mo
148.843 252.925 li
148.843 253.823 li
147.945 253.823 li
147.945 252.925 li
149.742 252.925 mo
150.64 252.925 li
150.64 253.823 li
149.742 253.823 li
149.742 252.925 li
151.538 252.925 mo
152.436 252.925 li
152.436 253.823 li
151.538 253.823 li
151.538 252.925 li
153.335 252.925 mo
154.233 252.925 li
154.233 253.823 li
153.335 253.823 li
153.335 252.925 li
155.131 252.925 mo
156.029 252.925 li
156.029 253.823 li
155.131 253.823 li
155.131 252.925 li
156.928 252.925 mo
157.826 252.925 li
157.826 253.823 li
156.928 253.823 li
156.928 252.925 li
158.724 252.925 mo
159.622 252.925 li
159.622 253.823 li
158.724 253.823 li
158.724 252.925 li
160.521 252.925 mo
161.419 252.925 li
161.419 253.823 li
160.521 253.823 li
160.521 252.925 li
162.317 252.925 mo
163.215 252.925 li
163.215 253.823 li
162.317 253.823 li
162.317 252.925 li
164.113 252.925 mo
165.012 252.925 li
165.012 253.823 li
164.113 253.823 li
164.113 252.925 li
165.91 252.925 mo
166.808 252.925 li
166.808 253.823 li
165.91 253.823 li
165.91 252.925 li
167.706 252.925 mo
168.605 252.925 li
168.605 253.823 li
167.706 253.823 li
167.706 252.925 li
169.503 252.925 mo
170.401 252.925 li
170.401 253.823 li
169.503 253.823 li
169.503 252.925 li
171.299 252.925 mo
172.197 252.925 li
172.197 253.823 li
171.299 253.823 li
171.299 252.925 li
173.096 252.925 mo
173.994 252.925 li
173.994 253.823 li
173.096 253.823 li
173.096 252.925 li
174.892 252.925 mo
175.79 252.925 li
175.79 253.823 li
174.892 253.823 li
174.892 252.925 li
176.689 252.925 mo
177.587 252.925 li
177.587 253.823 li
176.689 253.823 li
176.689 252.925 li
178.485 252.925 mo
179.383 252.925 li
179.383 253.823 li
178.485 253.823 li
178.485 252.925 li
180.281 252.925 mo
181.18 252.925 li
181.18 253.823 li
180.281 253.823 li
180.281 252.925 li
182.078 252.925 mo
182.976 252.925 li
182.976 253.823 li
182.078 253.823 li
182.078 252.925 li
183.874 252.925 mo
184.773 252.925 li
184.773 253.823 li
183.874 253.823 li
183.874 252.925 li
185.671 252.925 mo
186.569 252.925 li
186.569 253.823 li
185.671 253.823 li
185.671 252.925 li
187.467 252.925 mo
188.366 252.925 li
188.366 253.823 li
187.467 253.823 li
187.467 252.925 li
189.264 252.925 mo
190.162 252.925 li
190.162 253.823 li
189.264 253.823 li
189.264 252.925 li
191.06 252.925 mo
191.959 252.925 li
191.959 253.823 li
191.06 253.823 li
191.06 252.925 li
192.857 252.925 mo
193.755 252.925 li
193.755 253.823 li
192.857 253.823 li
192.857 252.925 li
194.672 252.933 mo
194.989 252.946 195.303 252.976 195.612 253.021 cv
195.481 253.91 li
195.203 253.869 194.921 253.842 194.634 253.83 cv
194.672 252.933 li
196.538 253.207 mo
196.845 253.286 197.146 253.38 197.44 253.489 cv
197.127 254.331 li
196.863 254.233 196.592 254.148 196.315 254.077 cv
196.538 253.207 li
196.538 253.207 li
198.307 253.864 mo
198.59 254.005 198.865 254.16 199.13 254.328 cv
198.649 255.087 li
198.41 254.935 198.162 254.796 197.908 254.669 cv
198.307 253.864 li
199.9 254.875 mo
200.147 255.071 200.384 255.279 200.609 255.499 cv
199.981 256.142 li
199.778 255.944 199.565 255.756 199.342 255.58 cv
199.9 254.875 li
201.249 256.193 mo
201.45 256.435 201.639 256.688 201.814 256.95 cv
201.067 257.449 li
200.909 257.213 200.739 256.985 200.558 256.767 cv
201.249 256.194 li
201.249 256.193 li
202.297 257.762 mo
202.443 258.04 202.575 258.326 202.692 258.62 cv
201.858 258.953 li
201.752 258.688 201.633 258.43 201.502 258.18 cv
202.297 257.762 li
202.995 259.515 mo
203.08 259.816 203.15 260.123 203.203 260.436 cv
202.317 260.588 li
202.269 260.306 202.207 260.029 202.131 259.758 cv
202.995 259.515 li
203.313 261.374 mo
203.326 261.571 203.332 261.77 203.332 261.971 cv
203.332 262.301 li
202.434 262.301 li
202.434 261.971 li
202.434 261.79 202.428 261.61 202.417 261.432 cv
203.313 261.374 li
203.332 263.199 mo
203.332 264.097 li
202.434 264.097 li
202.434 263.199 li
203.332 263.199 li
203.332 264.996 mo
203.332 265.894 li
202.434 265.894 li
202.434 264.996 li
203.332 264.996 li
203.332 266.792 mo
203.332 267.69 li
202.434 267.69 li
202.434 266.792 li
203.332 266.792 li
203.332 268.589 mo
203.332 269.487 li
202.434 269.487 li
202.434 268.589 li
203.332 268.589 li
203.332 270.385 mo
203.332 271.283 li
202.434 271.283 li
202.434 270.385 li
203.332 270.385 li
203.332 272.182 mo
203.332 273.08 li
202.434 273.08 li
202.434 272.182 li
203.332 272.182 li
203.332 273.978 mo
203.332 274.876 li
202.434 274.876 li
202.434 273.978 li
203.332 273.978 li
203.332 275.775 mo
203.332 276.673 li
202.434 276.673 li
202.434 275.775 li
203.332 275.775 li
203.332 277.571 mo
203.332 278.469 li
202.434 278.469 li
202.434 277.571 li
203.332 277.571 li
203.332 279.367 mo
203.332 280.266 li
202.434 280.266 li
202.434 279.367 li
203.332 279.367 li
203.332 281.164 mo
203.332 282.062 li
202.434 282.062 li
202.434 281.164 li
203.332 281.164 li
203.332 282.96 mo
203.332 283.859 li
202.434 283.859 li
202.434 282.96 li
203.332 282.96 li
203.332 284.757 mo
203.332 285.655 li
202.434 285.655 li
202.434 284.757 li
203.332 284.757 li
203.332 286.553 mo
203.332 287.452 li
202.434 287.452 li
202.434 286.553 li
203.332 286.553 li
203.332 288.35 mo
203.332 289.248 li
202.434 289.248 li
202.434 288.35 li
203.332 288.35 li
203.332 290.146 mo
203.332 291.044 li
202.434 291.044 li
202.434 290.146 li
203.332 290.146 li
203.332 291.943 mo
203.332 292.841 li
202.434 292.841 li
202.434 291.943 li
203.332 291.943 li
203.332 293.739 mo
203.332 294.637 li
202.434 294.637 li
202.434 293.739 li
203.332 293.739 li
203.332 295.536 mo
203.332 296.434 li
202.434 296.434 li
202.434 295.536 li
203.332 295.536 li
203.332 297.332 mo
203.332 298.23 li
202.434 298.23 li
202.434 297.332 li
203.332 297.332 li
203.332 299.128 mo
203.332 300.027 li
202.434 300.027 li
202.434 299.128 li
203.332 299.128 li
203.332 300.925 mo
203.332 301.823 li
202.434 301.823 li
202.434 300.925 li
203.332 300.925 li
203.332 302.721 mo
203.332 303.62 li
202.434 303.62 li
202.434 302.721 li
203.332 302.721 li
203.332 304.518 mo
203.332 305.416 li
202.434 305.416 li
202.434 304.518 li
203.332 304.518 li
203.332 306.314 mo
203.332 307.213 li
202.434 307.213 li
202.434 306.314 li
203.332 306.314 li
203.332 308.111 mo
203.332 309.009 li
202.434 309.009 li
202.434 308.111 li
203.332 308.111 li
203.332 309.907 mo
203.332 310.806 li
202.434 310.806 li
202.434 309.907 li
203.332 309.907 li
203.332 311.704 mo
203.332 312.602 li
202.434 312.602 li
202.434 311.704 li
203.332 311.704 li
203.332 313.5 mo
203.332 314.398 li
202.434 314.398 li
202.434 313.5 li
203.332 313.5 li
203.332 315.297 mo
203.332 316.195 li
202.434 316.195 li
202.434 315.297 li
203.332 315.297 li
203.332 317.093 mo
203.332 317.991 li
202.434 317.991 li
202.434 317.093 li
203.332 317.093 li
203.332 318.89 mo
203.332 319.788 li
202.434 319.788 li
202.434 318.89 li
203.332 318.89 li
203.332 320.686 mo
203.332 321.584 li
202.434 321.584 li
202.434 320.686 li
203.332 320.686 li
203.332 322.483 mo
203.332 323.381 li
202.434 323.381 li
202.434 322.483 li
203.332 322.483 li
203.332 324.279 mo
203.332 325.177 li
202.434 325.177 li
202.434 324.279 li
203.332 324.279 li
203.332 326.076 mo
203.332 326.974 li
202.434 326.974 li
202.434 326.076 li
203.332 326.076 li
203.332 327.872 mo
203.332 328.77 li
202.434 328.77 li
202.434 327.872 li
203.332 327.872 li
203.332 329.668 mo
203.332 330.567 li
202.434 330.567 li
202.434 329.668 li
203.332 329.668 li
203.332 331.465 mo
203.332 332.363 li
202.434 332.363 li
202.434 331.465 li
203.332 331.465 li
203.332 333.261 mo
203.332 334.159 li
202.434 334.159 li
202.434 333.261 li
203.332 333.261 li
203.332 335.058 mo
203.332 335.956 li
202.434 335.956 li
202.434 335.058 li
203.332 335.058 li
203.332 336.854 mo
203.332 337.752 li
202.434 337.752 li
202.434 336.854 li
203.332 336.854 li
203.332 338.651 mo
203.332 339.549 li
202.434 339.549 li
202.434 338.651 li
203.332 338.651 li
203.332 340.447 mo
203.332 341.345 li
202.434 341.345 li
202.434 340.447 li
203.332 340.447 li
203.332 342.244 mo
203.332 343.142 li
202.434 343.142 li
202.434 342.244 li
203.332 342.244 li
203.332 344.04 mo
203.332 344.938 li
202.434 344.938 li
202.434 344.04 li
203.332 344.04 li
203.332 345.837 mo
203.332 346.735 li
202.434 346.735 li
202.434 345.837 li
203.332 345.837 li
203.332 347.633 mo
203.332 348.531 li
202.434 348.531 li
202.434 347.633 li
203.332 347.633 li
203.332 349.429 mo
203.332 350.328 li
202.434 350.328 li
202.434 349.429 li
203.332 349.429 li
203.332 351.226 mo
203.332 352.124 li
202.434 352.124 li
202.434 351.226 li
203.332 351.226 li
203.332 353.022 mo
203.332 353.921 li
202.434 353.921 li
202.434 353.022 li
203.332 353.022 li
203.332 354.819 mo
203.332 355.717 li
202.434 355.717 li
202.434 354.819 li
203.332 354.819 li
203.332 356.615 mo
203.332 357.514 li
202.434 357.514 li
202.434 356.615 li
203.332 356.615 li
203.332 358.412 mo
203.332 359.31 li
202.434 359.31 li
202.434 358.412 li
203.332 358.412 li
203.332 360.208 mo
203.332 361.107 li
202.434 361.107 li
202.434 360.208 li
203.332 360.208 li
203.332 362.005 mo
203.332 362.903 li
202.434 362.903 li
202.434 362.005 li
203.332 362.005 li
203.332 363.801 mo
203.332 364.699 li
202.434 364.699 li
202.434 363.801 li
203.332 363.801 li
203.332 365.598 mo
203.332 366.496 li
202.434 366.496 li
202.434 365.598 li
203.332 365.598 li
203.332 367.394 mo
203.332 368.292 li
202.434 368.292 li
202.434 367.394 li
203.332 367.394 li
203.332 369.19 mo
203.332 370.089 li
202.434 370.089 li
202.434 369.19 li
203.332 369.19 li
203.332 370.987 mo
203.332 371.885 li
202.434 371.885 li
202.434 370.987 li
203.332 370.987 li
203.332 372.783 mo
203.332 373.682 li
202.434 373.682 li
202.434 372.783 li
203.332 372.783 li
203.332 374.58 mo
203.332 375.478 li
202.434 375.478 li
202.434 374.58 li
203.332 374.58 li
203.332 376.376 mo
203.332 377.275 li
202.434 377.275 li
202.434 376.376 li
203.332 376.376 li
203.332 378.173 mo
203.332 379.071 li
202.434 379.071 li
202.434 378.173 li
203.332 378.173 li
203.332 379.969 mo
203.332 380.867 li
202.434 380.867 li
202.434 379.969 li
203.332 379.969 li
203.332 381.766 mo
203.332 382.664 li
202.434 382.664 li
202.434 381.766 li
203.332 381.766 li
203.332 383.562 mo
203.332 384.46 li
202.434 384.46 li
202.434 383.562 li
203.332 383.562 li
203.332 385.359 mo
203.332 386.257 li
202.434 386.257 li
202.434 385.359 li
203.332 385.359 li
203.332 387.155 mo
203.332 388.053 li
202.434 388.053 li
202.434 387.155 li
203.332 387.155 li
203.332 388.952 mo
203.332 389.85 li
202.434 389.85 li
202.434 388.952 li
203.332 388.952 li
203.33 390.757 mo
203.324 391.075 203.301 391.389 203.262 391.699 cv
202.371 391.588 li
202.406 391.309 202.427 391.026 202.432 390.739 cv
203.33 390.757 li
203.097 392.629 mo
203.025 392.938 202.937 393.24 202.834 393.536 cv
201.985 393.242 li
202.078 392.976 202.157 392.703 202.222 392.425 cv
203.097 392.629 li
203.097 392.629 li
202.478 394.412 mo
202.343 394.698 202.194 394.976 202.032 395.245 cv
201.263 394.78 li
201.409 394.537 201.544 394.287 201.665 394.03 cv
202.478 394.412 li
201.501 396.026 mo
201.311 396.277 201.108 396.518 200.893 396.748 cv
200.237 396.134 li
200.431 395.927 200.614 395.71 200.785 395.484 cv
201.501 396.026 li
200.212 397.403 mo
199.975 397.609 199.726 397.803 199.468 397.984 cv
198.953 397.248 li
199.186 397.085 199.41 396.91 199.624 396.725 cv
200.212 397.403 li
198.667 398.484 mo
198.392 398.636 198.109 398.775 197.818 398.898 cv
197.467 398.071 li
197.729 397.96 197.984 397.836 198.231 397.699 cv
198.667 398.484 li
196.93 399.221 mo
196.631 399.312 196.325 399.388 196.013 399.449 cv
195.843 398.567 li
196.123 398.512 196.399 398.444 196.668 398.362 cv
196.93 399.221 li
195.078 399.579 mo
194.817 399.602 194.553 399.613 194.287 399.613 cv
194.142 399.613 li
194.142 398.715 li
194.287 398.715 li
194.527 398.715 194.765 398.705 195 398.684 cv
195.078 399.579 li
193.244 399.613 mo
192.346 399.613 li
192.346 398.715 li
193.244 398.715 li
193.244 399.613 li
191.447 399.613 mo
190.549 399.613 li
190.549 398.715 li
191.447 398.715 li
191.447 399.613 li
189.651 399.613 mo
188.753 399.613 li
188.753 398.715 li
189.651 398.715 li
189.651 399.613 li
187.854 399.613 mo
186.956 399.613 li
186.956 398.715 li
187.854 398.715 li
187.854 399.613 li
186.058 399.613 mo
185.16 399.613 li
185.16 398.715 li
186.058 398.715 li
186.058 399.613 li
184.261 399.613 mo
183.363 399.613 li
183.363 398.715 li
184.261 398.715 li
184.261 399.613 li
182.465 399.613 mo
181.567 399.613 li
181.567 398.715 li
182.465 398.715 li
182.465 399.613 li
180.669 399.613 mo
179.77 399.613 li
179.77 398.715 li
180.669 398.715 li
180.669 399.613 li
178.872 399.613 mo
177.974 399.613 li
177.974 398.715 li
178.872 398.715 li
178.872 399.613 li
177.076 399.613 mo
176.177 399.613 li
176.177 398.715 li
177.076 398.715 li
177.076 399.613 li
175.279 399.613 mo
174.381 399.613 li
174.381 398.715 li
175.279 398.715 li
175.279 399.613 li
173.483 399.613 mo
172.585 399.613 li
172.585 398.715 li
173.483 398.715 li
173.483 399.613 li
171.686 399.613 mo
170.788 399.613 li
170.788 398.715 li
171.686 398.715 li
171.686 399.613 li
169.89 399.613 mo
168.992 399.613 li
168.992 398.715 li
169.89 398.715 li
169.89 399.613 li
168.093 399.613 mo
167.195 399.613 li
167.195 398.715 li
168.093 398.715 li
168.093 399.613 li
166.297 399.613 mo
165.399 399.613 li
165.399 398.715 li
166.297 398.715 li
166.297 399.613 li
164.5 399.613 mo
163.602 399.613 li
163.602 398.715 li
164.5 398.715 li
164.5 399.613 li
162.704 399.613 mo
161.806 399.613 li
161.806 398.715 li
162.704 398.715 li
162.704 399.613 li
160.907 399.613 mo
160.009 399.613 li
160.009 398.715 li
160.907 398.715 li
160.907 399.613 li
159.111 399.613 mo
158.213 399.613 li
158.213 398.715 li
159.111 398.715 li
159.111 399.613 li
157.314 399.613 mo
156.416 399.613 li
156.416 398.715 li
157.314 398.715 li
157.314 399.613 li
155.518 399.613 mo
154.62 399.613 li
154.62 398.715 li
155.518 398.715 li
155.518 399.613 li
153.722 399.613 mo
152.823 399.613 li
152.823 398.715 li
153.722 398.715 li
153.722 399.613 li
151.925 399.613 mo
151.027 399.613 li
151.027 398.715 li
151.925 398.715 li
151.925 399.613 li
150.129 399.613 mo
149.23 399.613 li
149.23 398.715 li
150.129 398.715 li
150.129 399.613 li
148.332 399.613 mo
147.434 399.613 li
147.434 398.715 li
148.332 398.715 li
148.332 399.613 li
146.536 399.613 mo
145.638 399.613 li
145.638 398.715 li
146.536 398.715 li
146.536 399.613 li
144.739 399.613 mo
143.841 399.613 li
143.841 398.715 li
144.739 398.715 li
144.739 399.613 li
142.943 399.613 mo
142.045 399.613 li
142.045 398.715 li
142.943 398.715 li
142.943 399.613 li
141.146 399.613 mo
140.248 399.613 li
140.248 398.715 li
141.146 398.715 li
141.146 399.613 li
139.35 399.613 mo
138.452 399.613 li
138.452 398.715 li
139.35 398.715 li
139.35 399.613 li
137.553 399.613 mo
136.655 399.613 li
136.655 398.715 li
137.553 398.715 li
137.553 399.613 li
135.757 399.613 mo
134.859 399.613 li
134.859 398.715 li
135.757 398.715 li
135.757 399.613 li
133.961 399.613 mo
133.062 399.613 li
133.062 398.715 li
133.961 398.715 li
133.961 399.613 li
132.164 399.613 mo
131.266 399.613 li
131.266 398.715 li
132.164 398.715 li
132.164 399.613 li
130.368 399.613 mo
129.469 399.613 li
129.469 398.715 li
130.368 398.715 li
130.368 399.613 li
128.571 399.613 mo
127.673 399.613 li
127.673 398.715 li
128.571 398.715 li
128.571 399.613 li
126.775 399.613 mo
125.876 399.613 li
125.876 398.715 li
126.775 398.715 li
126.775 399.613 li
124.978 399.613 mo
124.08 399.613 li
124.08 398.715 li
124.978 398.715 li
124.978 399.613 li
123.182 399.613 mo
122.284 399.613 li
122.284 398.715 li
123.182 398.715 li
123.182 399.613 li
121.385 399.613 mo
120.487 399.613 li
120.487 398.715 li
121.385 398.715 li
121.385 399.613 li
119.589 399.613 mo
118.691 399.613 li
118.691 398.715 li
119.589 398.715 li
119.589 399.613 li
117.792 399.613 mo
116.894 399.613 li
116.894 398.715 li
117.792 398.715 li
117.792 399.613 li
115.996 399.613 mo
115.098 399.613 li
115.098 398.715 li
115.996 398.715 li
115.996 399.613 li
114.199 399.613 mo
113.301 399.613 li
113.301 398.715 li
114.199 398.715 li
114.199 399.613 li
112.403 399.613 mo
111.505 399.613 li
111.505 398.715 li
112.403 398.715 li
112.403 399.613 li
110.606 399.613 mo
109.708 399.613 li
109.708 398.715 li
110.606 398.715 li
110.606 399.613 li
108.81 399.613 mo
107.912 399.613 li
107.912 398.715 li
108.81 398.715 li
108.81 399.613 li
107.014 399.613 mo
106.115 399.613 li
106.115 398.715 li
107.014 398.715 li
107.014 399.613 li
105.217 399.613 mo
104.319 399.613 li
104.319 398.715 li
105.217 398.715 li
105.217 399.613 li
103.421 399.613 mo
102.522 399.613 li
102.522 398.715 li
103.421 398.715 li
103.421 399.613 li
101.624 399.613 mo
100.726 399.613 li
100.726 398.715 li
101.624 398.715 li
101.624 399.613 li
99.8277 399.613 mo
98.9295 399.613 li
98.9295 398.715 li
99.8277 398.715 li
99.8277 399.613 li
98.0313 399.613 mo
97.1331 399.613 li
97.1331 398.715 li
98.0313 398.715 li
98.0313 399.613 li
96.2349 399.613 mo
95.3366 399.613 li
95.3366 398.715 li
96.2349 398.715 li
96.2349 399.613 li
94.4384 399.613 mo
93.5402 399.613 li
93.5402 398.715 li
94.4384 398.715 li
94.4384 399.613 li
92.6419 399.613 mo
91.7437 399.613 li
91.7437 398.715 li
92.6419 398.715 li
92.6419 399.613 li
90.8454 399.613 mo
89.9472 399.613 li
89.9472 398.715 li
90.8454 398.715 li
90.8454 399.613 li
89.049 399.613 mo
88.1508 399.613 li
88.1508 398.715 li
89.049 398.715 li
89.049 399.613 li
87.2526 399.613 mo
86.3544 399.613 li
86.3544 398.715 li
87.2526 398.715 li
87.2526 399.613 li
85.4562 399.613 mo
84.5578 399.613 li
84.5578 398.715 li
85.4562 398.715 li
85.4562 399.613 li
83.6596 399.613 mo
82.7614 399.613 li
82.7614 398.715 li
83.6596 398.715 li
83.6596 399.613 li
81.8632 399.613 mo
80.965 399.613 li
80.965 398.715 li
81.8632 398.715 li
81.8632 399.613 li
80.0668 399.613 mo
79.1684 399.613 li
79.1684 398.715 li
80.0668 398.715 li
80.0668 399.613 li
78.2702 399.613 mo
77.372 399.613 li
77.372 398.715 li
78.2702 398.715 li
78.2702 399.613 li
76.4738 399.613 mo
75.5756 399.613 li
75.5756 398.715 li
76.4738 398.715 li
76.4738 399.613 li
74.6773 399.613 mo
73.7791 399.613 li
73.7791 398.715 li
74.6773 398.715 li
74.6773 399.613 li
72.8809 399.613 mo
71.9827 399.613 li
71.9827 398.715 li
72.8809 398.715 li
72.8809 399.613 li
71.0845 399.613 mo
70.1862 399.613 li
70.1862 398.715 li
71.0845 398.715 li
71.0845 399.613 li
69.2879 399.613 mo
68.3897 399.613 li
68.3897 398.715 li
69.2879 398.715 li
69.2879 399.613 li
67.4915 399.613 mo
66.5933 399.613 li
66.5933 398.715 li
67.4915 398.715 li
67.4915 399.613 li
65.6951 399.613 mo
64.7969 399.613 li
64.7969 398.715 li
65.6951 398.715 li
65.6951 399.613 li
63.8985 399.613 mo
63.0003 399.613 li
63.0003 398.715 li
63.8985 398.715 li
63.8985 399.613 li
62.1021 399.613 mo
61.2039 399.613 li
61.2039 398.715 li
62.1021 398.715 li
62.1021 399.613 li
60.3057 399.613 mo
59.4075 399.613 li
59.4075 398.715 li
60.3057 398.715 li
60.3057 399.613 li
58.5091 399.613 mo
57.6109 399.613 li
57.6109 398.715 li
58.5091 398.715 li
58.5091 399.613 li
56.7127 399.613 mo
55.8145 399.613 li
55.8145 398.715 li
56.7127 398.715 li
56.7127 399.613 li
54.9163 399.613 mo
54.0181 399.613 li
54.0181 398.715 li
54.9163 398.715 li
54.9163 399.613 li
53.1198 399.613 mo
52.2216 399.613 li
52.2216 398.715 li
53.1198 398.715 li
53.1198 399.613 li
51.3234 399.613 mo
50.4252 399.613 li
50.4252 398.715 li
51.3234 398.715 li
51.3234 399.613 li
49.5269 399.613 mo
48.6288 399.613 li
48.6288 398.715 li
49.5269 398.715 li
49.5269 399.613 li
47.7304 399.613 mo
46.8322 399.613 li
46.8322 398.715 li
47.7304 398.715 li
47.7304 399.613 li
45.934 399.613 mo
45.0358 399.613 li
45.0358 398.715 li
45.934 398.715 li
45.934 399.613 li
44.1376 399.613 mo
43.2394 399.613 li
43.2394 398.715 li
44.1376 398.715 li
44.1376 399.613 li
42.341 399.613 mo
41.4428 399.613 li
41.4428 398.715 li
42.341 398.715 li
42.341 399.613 li
40.5446 399.613 mo
39.6464 399.613 li
39.6464 398.715 li
40.5446 398.715 li
40.5446 399.613 li
38.7482 399.613 mo
37.8499 399.613 li
37.8499 398.715 li
38.7482 398.715 li
38.7482 399.613 li
36.9517 399.613 mo
36.0534 399.613 li
36.0534 398.715 li
36.9517 398.715 li
36.9517 399.613 li
35.1552 399.613 mo
34.257 399.613 li
34.257 398.715 li
35.1552 398.715 li
35.1552 399.613 li
33.3588 399.613 mo
32.4605 399.613 li
32.4605 398.715 li
33.3588 398.715 li
33.3588 399.613 li
31.5347 399.595 mo
31.2174 399.575 30.9046 399.539 30.5968 399.487 cv
30.7458 398.601 li
31.023 398.648 31.3049 398.681 31.5911 398.699 cv
31.5347 399.595 li
29.6747 399.282 mo
29.3693 399.197 29.0704 399.096 28.779 398.98 cv
29.1097 398.145 li
29.372 398.249 29.6409 398.34 29.9159 398.416 cv
29.6747 399.282 li
27.9199 398.587 mo
27.64 398.44 27.3686 398.28 27.1069 398.106 cv
27.6043 397.358 li
27.8399 397.514 28.0843 397.659 28.3364 397.791 cv
27.9199 398.587 li
26.3486 397.542 mo
26.1058 397.342 25.8737 397.128 25.6532 396.904 cv
26.2943 396.275 li
26.493 396.477 26.7022 396.669 26.9211 396.85 cv
26.3488 397.542 li
26.3486 397.542 li
25.0275 396.196 mo
24.8319 395.95 24.6487 395.694 24.4789 395.428 cv
25.2361 394.945 li
25.389 395.184 25.5541 395.415 25.7305 395.637 cv
25.0275 396.196 li
24.0132 394.606 mo
23.8729 394.326 23.7469 394.037 23.6359 393.74 cv
24.4771 393.425 li
24.577 393.692 24.6905 393.952 24.8168 394.205 cv
24.0132 394.606 li
23.3517 392.839 mo
23.2733 392.536 23.2104 392.228 23.1636 391.913 cv
24.052 391.781 li
24.0942 392.064 24.1508 392.342 24.2212 392.614 cv
23.3517 392.839 li
23.0731 390.974 mo
23.0672 390.839 23.0643 390.704 23.0643 390.568 cv
23.0643 390.056 li
23.9625 390.056 li
23.9625 390.568 li
23.9625 390.691 23.9651 390.813 23.9705 390.934 cv
23.0731 390.974 li
23.0643 389.158 mo
23.0643 388.259 li
23.9625 388.259 li
23.9625 389.158 li
23.0643 389.158 li
23.0643 387.361 mo
23.0643 386.463 li
23.9625 386.463 li
23.9625 387.361 li
23.0643 387.361 li
23.0643 385.565 mo
23.0643 384.666 li
23.9625 384.666 li
23.9625 385.565 li
23.0643 385.565 li
23.0643 383.768 mo
23.0643 382.87 li
23.9625 382.87 li
23.9625 383.768 li
23.0643 383.768 li
23.0643 381.972 mo
23.0643 381.073 li
23.9625 381.073 li
23.9625 381.972 li
23.0643 381.972 li
23.0643 380.175 mo
23.0643 379.277 li
23.9625 379.277 li
23.9625 380.175 li
23.0643 380.175 li
23.0643 378.379 mo
23.0643 377.481 li
23.9625 377.481 li
23.9625 378.379 li
23.0643 378.379 li
23.0643 376.582 mo
23.0643 375.684 li
23.9625 375.684 li
23.9625 376.582 li
23.0643 376.582 li
23.0643 374.786 mo
23.0643 373.888 li
23.9625 373.888 li
23.9625 374.786 li
23.0643 374.786 li
23.0643 372.989 mo
23.0643 372.091 li
23.9625 372.091 li
23.9625 372.989 li
23.0643 372.989 li
23.0643 371.193 mo
23.0643 370.295 li
23.9625 370.295 li
23.9625 371.193 li
23.0643 371.193 li
23.0643 369.396 mo
23.0643 368.498 li
23.9625 368.498 li
23.9625 369.396 li
23.0643 369.396 li
23.0643 367.6 mo
23.0643 366.702 li
23.9625 366.702 li
23.9625 367.6 li
23.0643 367.6 li
23.0643 365.803 mo
23.0643 364.905 li
23.9625 364.905 li
23.9625 365.803 li
23.0643 365.803 li
23.0643 364.007 mo
23.0643 363.109 li
23.9625 363.109 li
23.9625 364.007 li
23.0643 364.007 li
23.0643 362.211 mo
23.0643 361.312 li
23.9625 361.312 li
23.9625 362.211 li
23.0643 362.211 li
23.0643 360.414 mo
23.0643 359.516 li
23.9625 359.516 li
23.9625 360.414 li
23.0643 360.414 li
23.0643 358.618 mo
23.0643 357.719 li
23.9625 357.719 li
23.9625 358.618 li
23.0643 358.618 li
23.0643 356.821 mo
23.0643 355.923 li
23.9625 355.923 li
23.9625 356.821 li
23.0643 356.821 li
23.0643 355.025 mo
23.0643 354.126 li
23.9625 354.126 li
23.9625 355.025 li
23.0643 355.025 li
23.0643 353.228 mo
23.0643 352.33 li
23.9625 352.33 li
23.9625 353.228 li
23.0643 353.228 li
23.0643 351.432 mo
23.0643 350.534 li
23.9625 350.534 li
23.9625 351.432 li
23.0643 351.432 li
23.0643 349.635 mo
23.0643 348.737 li
23.9625 348.737 li
23.9625 349.635 li
23.0643 349.635 li
23.0643 347.839 mo
23.0643 346.941 li
23.9625 346.941 li
23.9625 347.839 li
23.0643 347.839 li
23.0643 346.042 mo
23.0643 345.144 li
23.9625 345.144 li
23.9625 346.042 li
23.0643 346.042 li
23.0643 344.246 mo
23.0643 343.348 li
23.9625 343.348 li
23.9625 344.246 li
23.0643 344.246 li
23.0643 342.45 mo
23.0643 341.551 li
23.9625 341.551 li
23.9625 342.45 li
23.0643 342.45 li
23.0643 340.653 mo
23.0643 339.755 li
23.9625 339.755 li
23.9625 340.653 li
23.0643 340.653 li
23.0643 338.857 mo
23.0643 337.958 li
23.9625 337.958 li
23.9625 338.857 li
23.0643 338.857 li
23.0643 337.06 mo
23.0643 336.162 li
23.9625 336.162 li
23.9625 337.06 li
23.0643 337.06 li
23.0643 335.264 mo
23.0643 334.365 li
23.9625 334.365 li
23.9625 335.264 li
23.0643 335.264 li
23.0643 333.467 mo
23.0643 332.569 li
23.9625 332.569 li
23.9625 333.467 li
23.0643 333.467 li
23.0643 331.671 mo
23.0643 330.772 li
23.9625 330.772 li
23.9625 331.671 li
23.0643 331.671 li
23.0643 329.874 mo
23.0643 328.976 li
23.9625 328.976 li
23.9625 329.874 li
23.0643 329.874 li
23.0643 328.078 mo
23.0643 327.18 li
23.9625 327.18 li
23.9625 328.078 li
23.0643 328.078 li
23.0643 326.281 mo
23.0643 325.383 li
23.9625 325.383 li
23.9625 326.281 li
23.0643 326.281 li
23.0643 324.485 mo
23.0643 323.587 li
23.9625 323.587 li
23.9625 324.485 li
23.0643 324.485 li
23.0643 322.688 mo
23.0643 321.79 li
23.9625 321.79 li
23.9625 322.688 li
23.0643 322.688 li
23.0643 320.892 mo
23.0643 319.994 li
23.9625 319.994 li
23.9625 320.892 li
23.0643 320.892 li
23.0643 319.095 mo
23.0643 318.197 li
23.9625 318.197 li
23.9625 319.095 li
23.0643 319.095 li
23.0643 317.299 mo
23.0643 316.401 li
23.9625 316.401 li
23.9625 317.299 li
23.0643 317.299 li
23.0643 315.503 mo
23.0643 314.604 li
23.9625 314.604 li
23.9625 315.503 li
23.0643 315.503 li
23.0643 313.706 mo
23.0643 312.808 li
23.9625 312.808 li
23.9625 313.706 li
23.0643 313.706 li
23.0643 311.91 mo
23.0643 311.011 li
23.9625 311.011 li
23.9625 311.91 li
23.0643 311.91 li
23.0643 310.113 mo
23.0643 309.215 li
23.9625 309.215 li
23.9625 310.113 li
23.0643 310.113 li
23.0643 308.317 mo
23.0643 307.419 li
23.9625 307.419 li
23.9625 308.317 li
23.0643 308.317 li
23.0643 306.52 mo
23.0643 305.622 li
23.9625 305.622 li
23.9625 306.52 li
23.0643 306.52 li
23.0643 304.724 mo
23.0643 303.826 li
23.9625 303.826 li
23.9625 304.724 li
23.0643 304.724 li
23.0643 302.927 mo
23.0643 302.029 li
23.9625 302.029 li
23.9625 302.927 li
23.0643 302.927 li
23.0643 301.131 mo
23.0643 300.233 li
23.9625 300.233 li
23.9625 301.131 li
23.0643 301.131 li
23.0643 299.334 mo
23.0643 298.436 li
23.9625 298.436 li
23.9625 299.334 li
23.0643 299.334 li
23.0643 297.538 mo
23.0643 296.64 li
23.9625 296.64 li
23.9625 297.538 li
23.0643 297.538 li
23.0643 295.741 mo
23.0643 294.843 li
23.9625 294.843 li
23.9625 295.741 li
23.0643 295.741 li
23.0643 293.945 mo
23.0643 293.047 li
23.9625 293.047 li
23.9625 293.945 li
23.0643 293.945 li
23.0643 292.149 mo
23.0643 291.25 li
23.9625 291.25 li
23.9625 292.149 li
23.0643 292.149 li
23.0643 290.352 mo
23.0643 289.454 li
23.9625 289.454 li
23.9625 290.352 li
23.0643 290.352 li
23.0643 288.556 mo
23.0643 287.657 li
23.9625 287.657 li
23.9625 288.556 li
23.0643 288.556 li
23.0643 286.759 mo
23.0643 285.861 li
23.9625 285.861 li
23.9625 286.759 li
23.0643 286.759 li
23.0643 284.963 mo
23.0643 284.064 li
23.9625 284.064 li
23.9625 284.963 li
23.0643 284.963 li
23.0643 283.166 mo
23.0643 282.268 li
23.9625 282.268 li
23.9625 283.166 li
23.0643 283.166 li
23.0643 281.37 mo
23.0643 280.471 li
23.9625 280.471 li
23.9625 281.37 li
23.0643 281.37 li
23.0643 279.573 mo
23.0643 278.675 li
23.9625 278.675 li
23.9625 279.573 li
23.0643 279.573 li
23.0643 277.777 mo
23.0643 276.879 li
23.9625 276.879 li
23.9625 277.777 li
23.0643 277.777 li
23.0643 275.98 mo
23.0643 275.082 li
23.9625 275.082 li
23.9625 275.98 li
23.0643 275.98 li
23.0643 274.184 mo
23.0643 273.286 li
23.9625 273.286 li
23.9625 274.184 li
23.0643 274.184 li
23.0643 272.388 mo
23.0643 271.489 li
23.9625 271.489 li
23.9625 272.388 li
23.0643 272.388 li
23.0643 270.591 mo
23.0643 269.693 li
23.9625 269.693 li
23.9625 270.591 li
23.0643 270.591 li
23.0643 268.795 mo
23.0643 267.896 li
23.9625 267.896 li
23.9625 268.795 li
23.0643 268.795 li
23.0643 266.998 mo
23.0643 266.1 li
23.9625 266.1 li
23.9625 266.998 li
23.0643 266.998 li
23.0643 265.202 mo
23.0643 264.303 li
23.9625 264.303 li
23.9625 265.202 li
23.0643 265.202 li
23.0643 263.405 mo
23.0643 262.507 li
23.9625 262.507 li
23.9625 263.405 li
23.0643 263.405 li
23.0643 261.971 mo
23.0643 261.652 23.0806 261.338 23.1127 261.028 cv
24.0062 261.121 li
23.9773 261.4 23.9625 261.683 23.9625 261.971 cv
23.0643 261.971 li
.624506 .119478 .941131 0 cmyk
f
2.6256 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
73.6415 381.787 mo
239.256 381.787 li
1 /4 /CSD get_res sepcs
.651 sep
@
74.678 288.025 mo
74.678 381.81 li
74.678 382.535 74.0901 383.122 73.3652 383.122 cv
72.6401 383.122 72.0524 382.535 72.0524 381.81 cv
72.0524 288.025 li
72.0524 287.3 72.6401 286.712 73.3652 286.712 cv
74.0901 286.712 74.678 287.3 74.678 288.025 cv
f
141.706 291.624 mo
165.359 260.733 li
165.802 260.157 165.693 259.334 165.117 258.89 cv
164.541 258.453 163.718 258.562 163.275 259.138 cv
139.621 290.023 li
139.178 290.599 139.287 291.428 139.863 291.866 cv
140.439 292.309 141.262 292.2 141.706 291.624 cv
166.649 263.37 mo
168.307 254.721 li
160.39 258.579 li
166.649 263.37 li
f
140.663 381.09 mo
140.663 297.698 li
140.663 296.973 141.251 296.386 141.976 296.386 cv
142.701 296.386 143.289 296.973 143.289 297.698 cv
143.289 381.09 li
143.289 381.815 142.701 382.403 141.976 382.403 cv
141.251 382.403 140.663 381.815 140.663 381.09 cv
f
367.709 381.792 mo
367.709 213.679 li
367.709 212.954 368.296 212.366 369.022 212.366 cv
369.747 212.366 370.334 212.954 370.334 213.679 cv
370.334 381.792 li
370.334 382.517 369.747 383.105 369.022 383.105 cv
368.296 383.105 367.709 382.517 367.709 381.792 cv
f
0 lc
0 lj
8 ml
168.301 288.094 mo
275.83 288.094 li
@
73.6415 286.712 mo
114.407 286.712 li
115.133 286.712 115.72 287.3 115.72 288.025 cv
115.72 288.751 115.133 289.338 114.407 289.338 cv
73.6415 289.338 li
72.916 289.338 72.3288 288.751 72.3288 288.025 cv
72.3288 287.3 72.916 286.712 73.6415 286.712 cv
113.095 284.087 mo
120.971 288.025 li
113.095 291.964 li
113.095 284.087 li
f
gsave
203.471 219.898 mo
249.209 219.898 li
249.209 190.187 li
203.471 190.187 li
203.471 219.898 li
clp
gsave
203.471 219.911 mo
249.172 219.911 li
249.172 190.187 li
203.471 190.187 li
203.471 219.911 li
eclp
204.283 205.049 mo
205.199 212.113 206.12 219.172 207.957 219.172 cv
211.631 219.172 211.631 190.925 215.305 190.925 cv
218.979 190.925 218.979 219.172 222.648 219.172 cv
226.321 219.172 226.321 190.925 229.995 190.925 cv
233.669 190.925 233.669 219.172 237.343 219.172 cv
241.017 219.172 241.017 190.925 244.691 190.925 cv
246.528 190.925 247.449 197.989 248.365 205.049 cv
.899138 .527092 0 0 cmyk
.38245 lw
1 lc
1 lj
gsave
[4.53391 0 0 -3.81079 203.471 219.898 ]ct
@
grestore newpath
grestore
grestore
257.215 239.025 mo
205.394 239.025 li
205.394 223.673 li
257.215 223.673 li
257.215 239.025 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[29.9176 0 0 8.91965 32.3255 322.381 ]ct
snap_to_device
<<
/T 1
/W 752 
/H 224 
/M[752 0 0 -224 0 224 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0R>HT!W%040p5?l=6!lGj7N]lEL\gd/L"n;7-P%%(ks7J#Fzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzz!!!#5q9Qgj*WQ3<R6?Fkm-aoSZ0YP^AA7?VCB3ScPPrY9c_nuf/c#nV^"M4%c$\'8mf:_,rLME]
<t5!:!&N9b3R)s%i#D`)#5^K[RBM"1IcnuY!,D(jF+Y@RolPCBFY4:%#i?<2<o*mq0OoAXmXj+RmA9mA
mrc;k]`m2!`q!*a$+"j09``&uFhTB>"l*M*nl=BQZZk+t!Pkm"hjN=%DD>dH<7h_fGM5al^sBULS)+0`
0k^/imYKOXmA9mALC&1&GG)D2G@/9Y72bc0T>RN+i4B;>k_'kObC91SHrP7#`p@d!'EH@f7m#nJ7J=>H
ihO(hF_78`V?#7ddXBh(kA@N^I1[PAgo*+-*&[u9B%-1tDY\17rU,U=ki?9f?$eL.bQ4T0n<S:?F1^dE
;oD0bVeYVQZOLOW0NIj+]m>-TQb@0lpuj3=cE9=bEo$e[Fa_jlkJe%c];CCFc6@&jg9XN:%5:qo\%Q6G
r*K*".H4ihL`3o!Cu]dC9\/<RYEf]K072:bnM/#;qE"=dlWF<`fAV^mPRFlm5Bl]>lV0#ohEgR)J@R00
?X<Bo;p2W@2tuj6p8m:;jSf:LXm-DbrV<eAF`0JD$K'`?p@m9d"7V^n4+-,(.lP=6>C5<+C[$'R*HMGC
R4>gZp+G,\-J;T"p2dF7gGtWAJ:/p6OkDhcKU?4Qh4)a%WbuHXIK4Q6g`a#uhFTH<[[O[sF(O1QU0G>3
`6$^VZZk8?0u90E\"7M\h9Md"^&Z*`]gHE#]@15@/N%H0hs*7nL\Uu/0=Q,Fls4g=9JX<TmH7\VV_dS%
.febgfIsQ)h.\Uco\-dHDe7=/P'nu_#QX9QGs>rV-PL!Yan8H4Xh3e<ahAQ@"9<Y:\sp%`PA)c!e/gU,
g7ln>qei>D!8JB=05&$G'4\&!4`Ij;7A!<Jh,#6pa:W\FBAWSmhAl"EGLQCrpSfhBCpJ9J$3<D`M#01/
mdKZ-GT2."er+889GDn=ft2<Z!$KnJ]/]]Un*oIa)h0cB+&hHl0)CO4GNT;65]>?MIYTj0]1:CFl,T#L
VMdX5m+o3=!74f$Hb]EHPMMjg-M1h8%?W-l)1>95]5rZ+TW\]HIeN5#k-sS\m+`9OcHiNB)gtJFceCPa
bZ8;1ao;7[r&26HSbphqpCjRYDL_[I1CZ$>Q/2Df>]-UjUPcYVVUFg4d%L^<pTNn%ScClOBnr[L6UYhH
hScRFEMbs"\d+u#N;@m,<B`nQSu_Qs=374ADA>k/`RZhnEXu^R`r>s[(!dD@pStpW<UtBu=/?sp*Dp7B
DMcZ<;Jjg]SK._!<ICPljmk73e%'&YMP=EVR]"W/F/`!b.94Y%J2eM)k1_mrl]Kg3'kccqkSu?n3A(-0
!/OY>4arjO/_0]^]dntd;0B$:M#R@S3c<#$-NIUUHAg\AG"]65Z?J`70<3?"<dmnqYH*WR!T8q'pGXS2
CACiR8^*5*F-_qieDKRAF+++FPPt2Ek-m(;:NI.1U=6d2bU;]EF]Dk!!-kF$DX]!n9"EaD;td@Bl:&1M
]9Q%=hs7;bquH4ke_T.tNg4Xqfr+1B;:LMaZZdXLgGO*_!,Ce>Y?/iJEhBYpH;Q>5bKN'Emq87uK`Id;
:A9("goC)T.`f,(U44D7GHMJWeC*_ZYEE7X4J9:?GDlFUrXLVf\,3g)Na6r7Q/)4Bm-jXlJB9k/k7r$=
O99T8J+"9%:%gLjC.DoBld!e^;m2jge)*gjpR2!*<!_\7qjS2*@u=#=BBP`^q_6!gmj7fLc$j:T"E]k+
c%t(.:%as]cY33'5dV3^9Ct/(q-/'00idpr-u-e%<U7ml,I7D`7"6l;hs'4jh0m:Bg&%JA*KsL)[DEfL
%B(lT)kHo?]?cioHTr4P@tRC]<][#CErf90h[Pe,K'[gu:<D?'7IB$9MJ$HPTU+fRTu&s68sO`;U1NeK
U3:KOoeS?:ORL-D;!FR.<p^r^.,"KkW#a[RS:EgaEA(#"A)*bOQ+\8sg<j3()E+3d("qL!VVmjU4e@%-
k)lXKmr2,c3pThaeoRi:qg7'34EI7;PL%E710+#g/o!mXh<NX=:=Wm)Dju>k:@rf%H'q0Q*]i0&p7WD1
GM5d-1FIK2q7Oor5^cr,BDYL7ffSSui0b6ASpXl,&YQSXGI2dsL?tIS;t/"f*`"sQo*A/ok<%B]<(HXW
].&!e7$"ZeTgA`u=8.(<X#YC*XdeYt@T2d?M&p<U6A5EtSdBW6=7bf[=%Cq*`2;I\'E-1IKaIjr4l,Sl
:\*mP='+':`2;I6VtulG$P`_n4!rb5TB+b/[Z3Do:_d9N_-8*u51SQWh75iPE8H7pqU9i(e^m[=3NAh>
GBcbKh5C+=]fT:$!7%$R7mG,+A"B04SYZZSIuC3neUOU6ft2<Z!8sA=p[aT]]@P\)kBY5$rHgXUWX#Hu
S%Umb#QW/;F>lG/]5,)cFIoIJh7q'1,5Z>Z^Y-5?K`E7P[!VUCm[`[HY5;I8RdaUS&D<-4rU$1@!+33X
GIP?Ef6t(_:&$VBM!E*8hG1!MJ3TO3]79E1rs:ie8oL>knpNubm)aq;:8e2DJ$sWHO*]"Fb_-kW1?BI7
'\SNR]q%t%!.SqHmf&3T]Jb1dDUN_I+hAa/H97f)!.Jk`m_7d7Y=N#mS+NgPM!i68hG1!MJ7%!cGJ31i
kim/P^=TiAn%UfT"os,GAp:G-hk-iW8oH3,e)r'+YAZl(@S0u`lKHS2J?J8,cYAlrUFPp-\Ok]F>L@l?
g3]UNXCK_l!G%S1]74n-Q:ZM)5X1m1p>%oTU(=a1H>BF=Y%-eA!Sh:2^ULt%kZ9[UI*O9lGG5=Bp@k'N
<JA0q^p!+m1%e6+>Gekc.<a%rW?0j]lcJ&,m`jhG"1VdWgOH9$M7q)q[EEHHM,)QM];I$+n'p5QHN<5G
GkZ..1pMfRZ?P"s1!Q]oDtinbDk3t@qtpJb[,K9UWbGoqDp.!O2oRVOlG)$$e%^%rn!cUn1H)o?R<;6j
kA;)`m+.QbAF2=&HMVh\f<TZ+!D_;<en<U"rVPD^n$JQnP#JdGm,sAcWqIC\jq&Z`Q?U&0?'G/46e3m%
0r?p5pW\0DpmiAsCn=(G-sPR'9!q[AV43E,G&'ckZL1rqh#'6tAeEt':%*G:g8a8`amC*lF%gSRk*u=>
p,eoGetdQoG[nqO?F@5AGu^bLcY]2]P;R:9WGhdeP^*CVbO1s/?fg(Cd];Ohc<Bu@rUuZ8Sr\je$1QO,
rNZ4ehBg3Wo]`o'F*>.OCAW@2b.flH/cd.i]Jhq>`LV%O5`_Mk2Ie-#S[c:Uprs+d#nU[rS_8!)m[/&2
rHW;0I%@FjrZ:g'TDia&f`[*fiN@R>#A;Z@2=Cs"oA$4rlFt#WfV>d%\,0tC7-]4sG2Ik_kC8E(4L\n)
.dcX=s*iI98)#ek!7AC7O&L5Z.<V/V-dQXtWCm'\l27<!q<cK!$#i5/]CF.[>IDIbogI8ik;LO_V;8iE
hiI^6'=-p/kc2gs3,s0BbLF*Ikf%T^AuYBN?/^/lrI3?9"k[S\mf(JcqE!.$PTDqGI>2We-WU.hL&Lh3
$@MmscDJ9u;lu\E?N1tnkGQbrror=DE]2`okW#I?Rr$km2qImSRqmLho'G0,2Q#s2TB9#tO)D92YX-2;
g\H<U?N:&[=EB_K1K/"3s5`WMqj'>+d;;nbVR*m`V[l".X#JJVH+EGsSG;sr^Yu?+FIH9]WM9+:8U%b;
I(,rt';j'3h*"N0Hn+gpJ7$u,s&il^](RP`#GUs?go)b"moM]6cM;RM=b%qZmN#)?n("Pr<Fh`of:9#.
`8@bG(=dH*PR@IUCtq&-g:F>5PHi/GNTtE2FRnm%4GSgc;'?/Ep?il^[e;CrTA:9Jh5KL+^T*hl`VJ^S
QN.\9gbV^[f$iuVG#M@`\t7[TWcA:YkG,pW!_ftDa1,\ZJ$X@Q9i9H#=u(D(U&Peg"+^-Sm1rj5oJ_,p
h%Wk[XsL\]:]?s]!$I_Sj.>KucJE7o77B0#kh7EU!C/L1`BBF^SA!BhMX!sddCE%b"+V&t(\^VjF7rA@
.69Fc6e<BI%00/n:>@_/hihfcD;$Q=Y7id8m#V)cJ.oR+3MuH(Nq(nZ*UQ8oSbci?#N-;76]MJ$[q@h4
BhsZ4^IrM3mJrd<?-(L*pNDPZltZ!3k_m+pJ5a)gq)Y*uS`;^lgCACLzzzzzzzzzzzzzzzzzzzzzzzzz
zz!!!":q_-nJBU/~>

%%EndBinary
grestore
np
259.368 208.083 mo
344.539 208.083 li
345.264 208.083 345.852 208.67 345.852 209.395 cv
345.852 210.121 345.264 210.708 344.539 210.708 cv
259.368 210.708 li
258.643 210.708 258.055 210.121 258.055 209.395 cv
258.055 208.67 258.643 208.083 259.368 208.083 cv
cp
343.226 205.457 mo
351.103 209.395 li
343.226 213.334 li
cp
.62005 .360967 0 0 cmyk
f
387.084 190.737 mo
359.515 190.737 li
359.515 179.685 li
387.084 179.685 li
387.084 190.737 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[15.9534 0 0 6.44501 121.067 350.183 ]ct
snap_to_device
<<
/T 1
/W 401 
/H 162 
/M[401 0 0 -162 0 162 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Td;I`!$jG#Ws%dhnkS?^4l[$R:F\1g;J?OeXMjH`W+$T`*zzzzzzzzzzzzzzzz!!!#oioe&[^pAL
h=>+`Frh0</B@WON;dZU!$@MU9r)]hW<pf4R*PNcr=#pkmbYu+Q:3ZB1Q$`CFokt++dWnr+VUGEe\uR@
Rf=O7,P0UrpF-Z1.dp67aEdp/u5<+hO_^]_mm_@4V?+"F.X7c_c8EXEHfh2"rl)sGVXj>PoJPW-6Yf_?
iqsSW.GHBB]9"i"Tkrc%&?g7POh:5f3oX[X:E(;r"X3=\Ws%[bq_@$7EciYskPml:kO1OLmp[\Js<QTf
_19#%!G<InSh8oDoOp/JZ;TC?VG\5n6m#_4XrCu2:]YH6`A.>(b\^O]4^U$;Yd,f3C%VGq$B8>QoU@JI
m1NKq(b\<ot88"]toc@Ku,A4("S6!dkF>g.&mf?HFEji!lBr0$EB;;L"*nX]nSNehJ,A4("S6!dko_2F
ph?/*t^[igbA)qH+RF=crOoG?[epCeCl$*-FClFmd.W\cB1Xb/feTqbm/cEteR#R67<FnoUAOcOnX'4t
C]qsW^'=0E6[]7PcV9DJ[IoYetYda6dIpt<*c;p2jPo4)Q?Pk<,&+#B4kE(&ZYsVp#oKKKH`gfEa]uLT
`cIa9[YsX$tFpLV)&E&Kf_@\j43+I__`!ugnbhOA,MKA1u3+I__`*EFWlk#2e9AkaL_@^tuS?YF:df&W
:^j%*e/tETFng*&kNWg/okMkp"N;RtchE0gj])NcY.SA%+h)QAKo?t<rb*-rI3u1e[Sr:4%1@jV)Hgd1
Hl2GlXW$jeFGNZp"AYe5*NWg/okMkp"R(J=L45$m3U@_^GSJ-(2Oa\Z>(0$NiMn=%>mP<5ZAB0:ZdW9D
P:<X_KA2A0o5&eFM!RAakNn>Mj)>V&[3s7Mf+#m_b!,(?p8*gfFbio'C<jh^m]*6KUZeZ+jbM<54db/M
neE(S!1[/_b6gA^$^mT;QgEC^M>BjI8)t2'nqRfhsj\tFC<51?o0Bm\0pYDan>P2;dQ0qH@HSb/SIckq
4IJUTVn)[L4r`$Wk"#&n_IeVZrcWg'K5*bP3om8LaP()S<hgP5ZWfdVOn#jYHb`I;:GMdiC3NA5Il0kd
p(X.tikBGg3pGo7:#O1][`YZj\Ickq4IJ5b%OpC7?Y/V8sY592=ab+]lWUU.^lTRhNjadgC(h^<?[6jr
6fe$!DlPJJN]4L8Fr;o)qVbHdP=9)juPc6b;$8B@m\[k_C!&Nu)X8X+I@(]cceII-fI59P5C,`c[b:\4
[DULUVpC,a6?ESbWoNSD!:ec6_hO0MuRCZBU=3mJPa,1&NUhA\X)+gI">?,b;h!'0e=AV_<-Jk/QoU39
j-$RY*^;l*7eYHj;SJb"kWEWACkM5<KXB8:nH7%L:On>'Q<@,BV]&+90dPE%>f$,)iIGJfL^Wh56Z=KS
t\U3K24]X,4B(h^Z-%"^sM"@M4Z!p!VZet,7hj9qhDH4NQk68TcYX@WNg\uH^G$_,a%Uh1U"SQ8Z0N,s
in^?sO:r0:r6lnJ.%Y;=[]L,T-Y\G5-Z9PA^hsnoe_2^T&ot+;OUosUTV<bZ8D7:OKaGG#b1N_Iq0:gE
!8\=*KbcL-%X.SV4CZi#kdS;mbPFT73Ssd>DD1s%CT-$sSfcc2GhdMSIdU2b?6com#,ambpmu^WH>+l0
l=FGs(aRBOLGf!'9Xj@.q<6NbD^Md.BXL:W"lK)TB5%(g6R6L4dc-D,[kIG>m5/(3s&"%4a*E"cXWh/M
ih9Z*K/+is"Xgg`ukB-CgrCtmbT389<Qt<ZGdNtNtSF`eAB7AHIrP0s7m>u3'fBKr=c?dHe4i%Q-m#\@
ffAXqZn+IEqp'"7(Oq1@>X<&jjI.iuc0ko1Pi+_GHEHalRag[-jm'8i^<pgEgPhm9ZB6;+?X45=Mp\Qn
MpBOJcmu/bQ\oPMbkio)D9u!eN$>)rGq,o`-7CoschbL<Jc<3[6c$qJN]?F9T^SeCgrO-ktQnA:!hjo>
SAnlL]1NG#E[WX'd/cFhXAmjeIRaLTJbY#XP*=?DZr$KZdm7`#@(U`_DViRirdN&3@U\@o8SBf_,$>-@
:-I'mjeai[=FM@0>0O*WtBnh))E<e;f31[67'\r6i=eIl1~>

%%EndBinary
grestore
np
405.48 204.363 mo
341.136 204.363 li
341.136 190.737 li
359.515 190.737 li
359.515 193.296 li
387.084 193.296 li
387.084 190.737 li
405.48 190.737 li
405.48 204.363 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[37.1285 0 0 7.92506 110.485 342.339 ]ct
snap_to_device
<<
/T 1
/W 933 
/H 199 
/M[933 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Qfkr&s%L'ZIs.@"-_p`ROX">W;MZEBSdUA7erV6Nqzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzz!$(LcrtbY8!1`c?%gr@;!-\8(4mIG&!!)MV\'Z7X]Lfe4JU]gE2p;a3TEBD-4kqW?B:0\=^b
kI<Ham,YY:qm8J4\O;p@0I5?=e!S!#)m.m,L59>[_dU!8Y3Sm,^qK>[_dU!1eBgm3Q,t.e<`Bkj"H-P.
T%]A-uRQL?'Ok!*I-cF?d;;/!qK*a;Y-1n/a_[Y.tD,8.IB[J2Ou0c]B`_ME);FmJsJGpZOWC"]d?N@`
]\lf'j_D8%uc2Ak=!6*+m[[H)O#WhP4`*2kR-6@$r$tA0/X<+,KoV>39W+l@#7_F,HQY;\s5jr&d+B]S
ZWJ>39XDC4)V3o89-+;\s5jr&fB-]SZWJ>39X4C)`p```;d3YNT+LFg6\Fj6-Z6/c%PDRBonmB8l%<eG
H^DB/Oh:L<O/l$(*7>4)11ieYloXkl0'*[mfI:Fg6\FF3k^W:\8k\11r+7]3*I/QXOGAS^5g))D]W+Dn
mpOhbhREX[;Da7JC)rPuVoY;\s5j4;[qsF$tLJ/T\<$[>PjWHPomSd@![6X<I1_oEi_Qr>i;ie'-;nLZ
lIq\?_";Aa7D^gO>_o1%Rn8h=k:4H3O'pqE&G[UKOR!%af]kF_);YbLDeGF:M?Bs2lj&!.F+ZZcpbnI.
Qob^:Rr^R<:M["r4J'mL?5BJ)s[N!4^&8bg3aNQfu%ces0C)F(A*%bNRfelMO_dO9NF8bfnjin+2CM[q
/m6FZDqr'sike%BId(AHeJ%4NEu9b;V#F8N#^T`_L0'<\_drGEu7t^Tr`%!$5W>k2fg5ca4U44(kIt7&
u\d`#Hn"q-R8r2U@e5<oAV`R#g]_:=Et)nZ8;,'!5W/-f7s*cPc:'q)iQC=b1d/@P5C\\P9+la0TqN:S
`kNSpk$L4m0neA9?^nErmH-_d%T<F.69iNb@a&Sk'U&4Ro;SY,r#koXcR8"Q#Q!H2*]g2mFE0ceIhLOX
atRq`SLr?W5&2]*W*Q4u<5uq2X&\[2rW"g[Rs7Wb%T0+'2FbSD/Gg5FZU]i.JQVb?M?6aYi=/k)O)3,0
TRghN*$!]C+ha5+=b-U3VgN0tAX%ce\+b;.OsDb^5e-&"%B4i5=WD(WfmgQK`PVI."0#MBL+6ADWYkcC
FLCFOT^3&QZY8eRUmel$`!&kDCD*o46_4`;34k1JHr&IFbR1W1*(L-N29Ioir)>H(N7WRo\:hh](K0pZ
usE^I?[a+8'm1rTp*$G+'u.PPGVcl8nlj$e)Uumrdn9W]'aQ`OcH>msMRmA9jcjBB`[M$/Z][K7!;U&T
:P>=\g&%9K7Oro:7/Mo41$\f6[;U_Ar!sHUPS:eS#s\phiD&h9U;./C0OU4<85%RgX;ICTeKO#$%G+jT
"&#*4hd2,[$]dF/k`#XT@4b=$$/k<2VOb7t3ECLC%TU7@*,YSB?5'@1IMK2,:kS?hmE&j$!7F8Qe_Hj!
h8r:ZbV7l!"8=\SJtJ`&mTlf'9ZhcFS-P.>oY<4@,:radfAYG@:u*mH:$dLH^m-RdK&sHJ>ehVO[5\=e
7!^.e;t\3S_(cGN/Ss9"o&KhT>Uo2(ak\BAH:JkK06/I!]93p[.iQ]g&]2X)@5ke?>U'\P,'MDR+Y6np
D<2mp9A(RJ<>(=&eVhGOFAUG\?Hg<UHrIY$j1$F.%4.SRd$FSCoZi:h*hp)[qe,h?WK(hlV3g6tE<Hf4
:jj'iVH,G2Ad#H2bHZ17qT[T'%%$O/^tHmbI83]gFPc3OOTCAZ]Tg;mVm:k$=is)0,*.bbs$\kP,8!A#
f:Bj?*+YpIDY3UOU%aX>S7;E]t/_]Z]pu,L.Brq:']+o6c>P^(1)r\_"%!3EE44kMs1529flV7T7XH_r
NADH78Z/G-*]aaa1^R9KMf;LGN1X-%kR[A_U!\EkF!is8S=_kMBW^QBD,EiHIB7SGTVLYonZKDj"<Sms
V#I[EP(Dk.Ob>_k0rmKA@lHIC6%W7eTYhk2lo`WH?aDBGKDQIoY>!/h:\)0rlf$X?q*f<U5J^-D,^oM-
3=B:NYaHk9lnEpF_8"n_I)WY:$HPAYtutmC*G5]rTj'X%bhY8e\Oim\(&W7qY(.*U[5FWQH0W_B,IOWS
oW_mle;IR<@_S<Fi>ZZn+$*;"X3@]8'/SkIXK50Sknj9p9j@=`hi`b;mYA>H_9TK68MPRAGBgm,?WGFS
QI:R6)n"F7n@uX04;H.ALd+W%gB$+eQkbSOlsrl(JN4G\&NKrWBfS7tj+/p=AO.b-[KB3p!$[XCdK?-\
liAA=9EHZL$W)]la#ki/S-l>j\j4]b^SD<HU=:>-jYXnsq>_R?2!g*m1dL=8#Sk^G)3?.\(Rfhd5]\W8
Am;ok#LkjCe$cB0qp;H776K?J/9=s2&=7W,UVXpYkAo,;1oe'sltFnlVf:Q5TQIgO>aM;s"%s<:6[rkL
;RjTCX_DB*Inf2OUYq3QnKeP\iXgm&TE$@NtPGLj-6;n+ED=k:?4<"nUe5\ZF7?bH*jkEDNe)Xl=h>Rb
d^Gi&Rk8;31;frrK8X;sojm3aK)9gcns9p$CNbr\(-NEDKS=fOIp"l>^_35Mul)jY=&DVdl%GHRS3o?J
/\^s2>[&m]#IYH`cR34jJ!D(O245ni6HHdk/`M4d:51Iq?rfT=M!h*@Ka:H@-e6#@:i94@_m,FNUm]%q
XYUT*P(TBs50j:PF*i^-hSh/H-;Fb?T=aN7R6XAX37oYfAsmlm;70-Z`(;g:Tl-_1.)MQn>M(dlLd?XO
KTPpA!g+]k$$h7..)%KD-dpq1%l^ZfQ>8>,O`ReU"1:52T>_Fp`FnkfJ19<W#@3K\:C*][j'RA]5^j[+
@7eo'O_.'me?hXPeTF4_Dl[10^YsQ<!g\dU(g1bdaF5pJa#%h"3O,q7gm,q6Gb1eu>0NeNU"Ah_u9km_
i<Dk0`L"iP36Jba*D4[SG@(/,)m74_NMrALlZ4C'+(lH!]T^_GAC?[:HaA`@S(ad"Hg[gj^WNhkFidFm
4<\iBP1\B$#Ai>GkYj*Vu`"^>Do8]aF4*i%$U6BDI&HQ[?Y710g_TQ<j?#b20Ir+Y.J.i"kp7BD?E7`a
*%,3Nc:,b>*IBC&_>^ONENlW8+'oF+HjW?f3QAT.JU9Sn5r+Wd][t[><lq$G=67i">r%F1G):,L:M4AD
*rC3h2t_)5?JDMolt#0IsZRs'[8KM6ga(:8KKlmIcbTkGZ&f.,L]69'->epb0kO:2uk1f;Y'IQ$qLe/b
@k!h",5AhkBTFbR]0_IkZZT7%=qb4=g/U[DEu7;`40MWpTPVC&J=U0h_:us1f'2'X=CiAlDbhg%Y61b*
d`ZAY1>DmR87aRDN%jhjZ\r%af4$W@P$nHi$Bibk[n:JIKa=rh]<O\Q@i)rAL.V=@;6Dkrg..F,#1DI6
[-8q*`!BVCpG]Gs-H`W5-X906Qa$h'0&d\(T9M)D\K^^B#(;4hOY`qV3[nMnU]:?*#4@S>,mRc%/m=+k
4+VpPV),mu10]CWJVnk^HEF?mdaE2RT^.rM#nI]AqD[FYZ07\o6(8LgiQmV9Us.A(29BLRbrc:?H1WpP
RZ+=dW2FWGuhD(d4h>3jQD8<@2>#H-pP*o`VQS]B2uJSD5oH;4D]=H(R#h?'2Nn7j&IdC_jG'_d0#joi
XeNpNas3V02h\bdBI\24"-Z%-k3[/FW25WD1V;hO/;'W9\`s)tU#[3jQEeoSf30pM+FHnA2c,5u#[G5F
b=$erf'B-g-H$pJ;r^%q]-tC3uP!iB6D7N\'Yj-LF)n!'Zcu]r>oipVAl>E?/3=k<7OO3WOP>%eesf(X
H@u=Nu3"&(q&4Ag[63mZE-K+L%%'BJ6Xqpu#B+O8DEgC&mV]*=>%J^.GPi4!4M'guj+pqfn##!!!SP>8
.&;zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!#Y$O76rpe~>

%%EndBinary
grestore
np
387.084 193.296 mo
359.515 193.296 li
359.515 190.737 li
387.084 190.737 li
387.084 193.296 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[15.9534 0 0 1.55158 121.067 348.711 ]ct
snap_to_device
<<
/T 1
/W 401 
/H 39 
/M[401 0 0 -39 0 39 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0O@1%N=#R8Z3s3a>XJ?`LZo0)S]\8UNL=E[F(:UAo`ot*jb"q_`&\PHf9aY!B`qKH6X3Fqp!nqKt6
Q'n`#j%ba2e2_/L9pIZuOhJNc,1#.(A)M1ZpKHWqn!l1QVXAf5qtU6mzzzzzzzzzzzz!!#p,!EjM+df
~>

%%EndBinary
grestore
np
291.469 278.271 mo
353.101 230.884 li
353.671 230.44 353.78 229.617 353.337 229.041 cv
352.899 228.465 352.07 228.356 351.5 228.799 cv
289.868 276.193 li
289.292 276.636 289.182 277.459 289.626 278.029 cv
290.069 278.605 290.893 278.715 291.469 278.271 cv
353.659 233.763 mo
357.5 225.84 li
348.857 227.521 li
353.659 233.763 li
.62005 .360967 0 0 cmyk
f
97.0992 304.228 mo
180.842 304.228 li
180.842 270.164 li
97.0992 270.164 li
97.0992 304.228 li
1 /4 /CSD get_res sepcs
0 sep
ef
97.0992 304.228 mo
97.0992 303.364 li
179.978 303.364 li
179.978 271.028 li
97.9628 271.028 li
97.9628 304.228 li
97.0992 304.228 li
97.0992 303.364 li
97.0992 304.228 li
96.2355 304.228 li
96.2355 269.3 li
181.706 269.3 li
181.706 305.092 li
96.2355 305.092 li
96.2355 304.228 li
97.0992 304.228 li
.770748 0 .91931 0 cmyk
f
184.942 284.737 mo
181.706 284.737 li
181.706 271.112 li
184.942 271.112 li
184.942 284.737 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[1.94982 0 0 7.92506 18.6792 296.06 ]ct
snap_to_device
<<
/T 1
/W 49 
/H 199 
/M[49 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0;0`_7S!5bE%:Mg;cTE"rlzzzzzzzz!!%Pi!17!k!<~>

%%EndBinary
grestore
np
179.978 284.737 mo
102.218 284.737 li
102.218 271.112 li
179.978 271.112 li
179.978 284.737 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[44.846 0 0 7.92506 -27.082 296.06 ]ct
snap_to_device
<<
/T 1
/W 1127 
/H 199 
/M[1127 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0W?*5/+Z7aLqs1Ic5mN`8F_f4@J8X5PL`Y[]>!8k5K_>%GNl,E\u%fcS0zzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzz!-"t<pRhKcd/s$AS38Y<!!&+u^WjuuDU2#"=*8o>nc8^jE&,2UAl?
*N-KT#5XHW2U!6jW\!oV].7b_Qe0%K?W8br3>eo0T>PR@J!52R:JF&0OKV_#P,^\deSh.K?oG2.@AEWH
01_7'Y"FoT(kl@6#$NiV3ar,;/;ccSANgG;e![H"EZOp_9J%"?[1;YRpbXT!F$m^P=(cJQb,4tH6+DU2
"tf<5!f67r7g1\`!2C>Jp8Ykm6)]&W'<4+AWMH`YMt\il7KY?c?VH6*':ZhPQ]C>Jp8Ykm6)]&W':2ub
5&H`YMt\il7KY?g[pk5bQBMr/NUf)9LrX8e0R40G`-o5AZ\a6FYFgG?tIg3L.Rk5bQBMr/MRkl/&Gec/
+d*EU:Lq;:7UO4F&+[qAV1[JOi7beY[><rcVLmoq8`Ii#9eT'VK\2foOTX]LWlFaGGi?b>d7`#O0IHNd
fZUq8<0(=l>aWcW_,Y5Y$ZNiV3ae[j(DAbO*@]i"=DmW1TiI?qg!mI&lM*.7&6qZEKXdTr4Q#A^:h<P#
pQ]=oXkAnJnRGLtQ;h&@*Tlot.WeRqIs=%D^+Sc>[YmgjpUC%l"5/A.>#?_!seT2L"m0s1h(h>Q*ERbJ
brcV-=m'@g_eb#_*jG0f(#1FL0F0O<*iQkTqsH-]BfU7]k[1j*t>j8(Z/X(NaQ7FcGmk2K=iB1^3H=3l
'9hqN3"`WRu$dQNs3$h&>\;QZ[k')OM&L*k/fpMU9eZTkI!90`/LeRqIp=(fj&cemJu-cQ9C?.(m''FX
ASa&9%6V\8k`D2scgq46s2%T[2&<5k,Om\d)2d[dSeIdN`?'k^=$WQN0TSNoBthidEDUfdCuo)"\n<:j
1*YGTNA8fXJgrp=+Togr_"aliXmoiX?Ie_R:^Za\rlM(r#p53iXcpd<Kb,fRWEgrJbZd9"H'g-&4FB=d
tEe&q!?mP@Y]DtP/WIF?rLh0lQ.Qb*'4VsaK?Z@K%FmA*kZNdI.!.XEVU?T[Fcl:cDOB3KSodXC7Lq5r
MKX&$<R[(@tlohp#6mF7^,gD8QqBi^C+iOMnUhl1UfY+iDRqmC4J:7LLu:-&49p$D[kZ$YlZf8b0YP]2
t3pVj.=lL)EX](:F3Jm0PG8Q%*%f6r^,Dqq1`4qh\F]1:,ahjp3g)f"1,cC"<cWnq60cgB$8MAT7B2eT
,8eP=rr^NmY4P3*u<(7sd)]=g/k;c/kf[GKT/k26b/jPbi?YPVT[mG4"I^[*r#Y5Vb@GNYK>f57GR=h]
0tD3F$+.2G,!I;^Jap8b.6PWJ9s:]:<;Vrttnc<EAN[\G02p=RdM(&N4#C3T^Fe32!a0"=d,N$QBZkIU
-MUr>OR[I3I@aqtc:QfuqHgedJ-4(.'];nY]o3BD2h,+b(GXOQ'U4*Am?XUB$21a>Ssn<r]k4)qMqGF]
CnU*>V^ZR%Xi0;kE-:YkV,p"l\)U[fDTq>07B/'cj/YMK/d;thj#]&6%L1QiF[^XmmH-SG,WY'!?DXGe
Ii>cCKBc07+ST)Yea:A#[YkGZVTe,Oku*'<>k]Dm'>T&gn-ga[#5P%*DE]'o%)`BN+c:?m`PnYD^)eS.
$)m6(EUo5(>dZ2-"5nl>A\-dShUB4nDJn!u:*:Z%5aqZXH$RZjOLppKNO4*@f(GHK?ji_<+'k=KhpSkc
KdcEj(-a6L"tb1Gok5Fn4bF*@7\BAFoZ&V';@!M;rPPGD=U\Yo2f/W7<Rl^cTG-_2R>.JZ$d*5AfNCo?
C#qCF`"[IUk(iiYITB<P>(IEEQ"#N$HhRA;i7MM;)tl.p[7@^#3GVtS+Zk=Be`c;(SAm^&IMbNcG#bh&
k-VVSAF]iMi@.<EELHuIe79g=t$-V:T4DnEbE3o+bpl)MI[PJ4YmEl6d/ceT''hgMZVE`mgVh>,bFo8`
Ebp0..GVp#`s]PmR&p&/.DX<bd%^HK87-eIUKF&#b5PEY;0c+KWemTl^QDgM>rdrDhFnl^C,h>,b>n':
g<Ze)5O5%TcD9mo)\IO8c0P%*D=G(4FP]BQCq<Rg*:3d:UA38N((hGF64o:;2rlEa1-f8BHIp";BIGOj
EhbBM"?eG6YN=\4L)^N=mFFLgM'doFoZ`*.BaDE-J%>Y^:U;dF#t/Z7-3R?XmnAnK*:3cfN9fiZG,a.:
`V4%ZcA'FTD8HCpd*T:=+e=[cUkX7`sn48I)^:!DY9R%NY)he@A<50KaL]ns/f>b/F+hKqRrn<k6P48b
Y<IkN6p8[36t^WZOogNf]sW66WtrcWH\3;[UBnooE)43r(R?E;C--!r1^X?'Eqm]-"VmgD>>>N7o]1#G
RF>>d#]qe!!+W69&@SZJPDe*Hu"h!4_(:!2:f=Pr='heBX'50JV,Xe(s2BBm]Hp"mf=_<62Ugr9$LHV$
4jMWK#jcI@hdSuSMC;sXDE?0E=*cD6t)MKOX/B0.]SeRt;3YOiYnj/Urt2<R*^gYs9g/([>7=]-e0]6U
8k4S)Me[@("_\*q+tlZNs4FE9ThSaWr`<hC[$?g7*/''&&dPOm)_DLV?8`-:9'8U3sdj]4=de;\+4XJ.
llCB!r*pWrH4Ibp&2j@:6j;gu1(nlpO.oR*LUpIU=-pJ0!qTCEA152VCd-06a.Q5eXD;n&?FWf$YKepP
HKmoS[SrVYF4@p0@;Y$4=JT=.e_E_!5m,ffU(cH1F2kFUS3\spdFlWnV%U`:`#EZ9)]*AU>XI?J@Ep7:
qPr"XQZkH-4GX*<f`rnLQ*kt/"#gX2q2@\(/UHLCUB8[H>k]A>n69$1XA/2o:br`s-1MAgWhrU%477I6
9o<918E?E7`'L]6(0f',c.G$>hcGHEBBVRgYZIDI^>pCdFJ]n:3fPfok)DIK^IE;TGYlMagieM!J?-fk
$(mb1iIIF0)0KXES%DcHHt6;64CY3_SA\g@"QcW/doo\''>\QMf_eTNTeonV;J5?7HelF/q*Z0.?6VoN
F]pO[irS(l(H4fQsa>reFZ^,]D?4igZH0@=:m]B=?/q,H7"bgg(]@&E@1eSfeHk?^r*es5].qS9-"M=.
l$XHg>DUUh8Ai`Vhi$1"(e<S)k.<Hf'=G.r0<Q^6+-GYVhQrZVkoFapI+l'WQ=I$:ms]YE!&>H;B#L]6
(0f',c.G3I0/K_<UCWbXr(Wd/'Wh<u?Sr[fBIT$s(/J!5Mq]"_8&p.`U)DWUI>F41_VQ*p6OIr6e&oV>
O<\oTi>I<2j^\r`t-T%I]=]8"(rjYnc_PF/P'PD@i&^K'1b9ueec4hL;ll)q-gZh-V7DCb&FUfN`nE]@
KUF11AfOJuu\fOsAoL;-C)EEYK&kaJ^I>.J9XlhjL`eN:D?04Bplo@.&MX(G(Jg=`LPP)um4rp65Ob'C
(kgF72cRiCel;cVZjHmUGkC%7^dF2!fQk,t+jkBCY%*:<+'h*#YI\B/IRP25"$]CWGjgSk#*;u$p(Y1k
CHFIT:5U/pA]_<96eSJKO^h6WAQ4*Sqs'fG=@K:RGAg#qLSe"-1rWBNsf^:M(A<_9jNGCN+0eUYD.SYM
[f]aNA2XgFUr`A:NgI&5HASTBOCR[r:?Vk4J\Sb>7H5"etkhL6[qeZ^jTmVb\f9V%q_XgebhENQU\Vo:
GhpO#]&k6Wm6HPLZb]baF.+*9R2SPjm%NdSP=7S9^iB:Rf8P@U(B6T81k&$"Z9Bt7#tB9IrDRP<L<Z11
LVh+mEme'A8i:4&m<T;<c>/&%:3C=jD:pGXC$VU!O_<o&8j=!t*SC%4lZ0On$n4Y7_h=&HTYqr.2=6)W
2g/(J:cSZc&N.7lD`N3iDnOrTZukS>Q&Ij[jh6WuV:;J'b,]N<ZC,nAM)W86_:E;KC'dqS99lEfj$f7\
(,Dfj"PrG>,dWUk1`'CWVuV:?eBSn*\![ee`kAUN=E@D.QpS_b$XT+<uRp26inbH?5@oBr5K_p16RlUD
*9f9s@PMjj<3X%?JWWKLn1oj+dOes-*::.5URqk@PC&f7)'Zl,f+bDpsuHUgf0@IcK1rV<PR)^(2[[^j
iOU0!pXT!O^V_V;S!F2U-T2=0[fMO@%@E2qB!T_^4]n,=an9R^WN5G'f\"6Asb2HsX-&n=P#5%gqbM5P
!*(S.V$Nh*j\0e8(g:3G8!<1g!B?Z5D1WcP@mDXok>rV=+h)^'e%ZniuY-o%S*ddsmCc?O@NGLF#OlIa
c/'m#PJP',sMKQXWME`@IQWdLr4gT#>`5&7"[]hb&k;gCV"o,^+h@Z;"1RNt$t]C-:)dFg!ag"@HIn(>
"4X?/?gXAn#$R95N'kC:+agDj4aHhDGAkHT@%cEm%f]C.!DP5O1pH\jUPN+n^eH.mD%\<"p9rGL?f^?^
e2+U?i7F*#2jeX`%`ogj?,Rm#Uj].9cHk9]NOGrC+gpKb_oG8NIUCQo[b;[K_*kNG^,GDWrqHop4a45P
>?0m0'N7<`WE=K/n'19hl,c[W:AS*)-<Znp!\]fXQ[YO0&^DDpmq_=nRXPShkJl1(V7\8s"i'0k+)1TU
DT4!q:W:CV3CDg,M7eg'/LQ$^0#XWj?TT%c8deU(**CJMA9*kKnOpBKMJXANG#:J?R!<TbBu<\nmmbj'
Z3dA*W+;5LlX:0=L,o.mQl$-uu+;r9^D.]1bBmHgO,\ug?DcZS#12sGcuW)oV@qP;.(M$Yo6EsM5'pUb
3`cgBrF;td0<h%qH?<8Dhf=HA-uYNVs(SlZZUlK<?ad-eKIIQl*F^4U=.@trMb>AARaj8,;qEDEe!>=3
i$gY!r9qJJg,T!CkOm_1YhV<Z@L`-N[kIoT9-I9'?AX.S/"6e->6d2.25isn-'mb(UHCoR)!NU(d8`B$
TR2[B/%oZ,7kgX3("lqsUk02>WK](7\^*XU/"ePf89;\ddHkB?PqFkq65"eY%hInnL=n#K[$eG>u\odc
58SZ(RqK,JjGj&4a'4*!5jO"0RXT:;FAm[6k^CKBS67nl$D`O,KPSNTqX\&?"jeaC'4,UrK$g1<pZ:MO
-!1G.J*G2H`t`](T?UL-gMUPc\DkGIDhU%^'X<4Q*'=d"-3.]1bBIIdp?2ZM<M9C.QUXmVYtm$Pto\Q6
=Iag76Nf@sD+@\0ag5(fcIl+7tLHHI:/g`&I:4Z<\\?]h,+]rKDAgf%3-Xa]]-n"7)bYHD)=?ef79c^\
gl/AB64qW1>P9lb(-`gIJ28\4@Lpml@"D+BYYZ:>Z(`Qq9)9g\;MjJ[+&lE_c1<)lVmTDRc_kAC4!l^$
0>2d+riVqEeO.s%eH\WU`l*8<D,-H(82V#(Z$l'jlkd@7'#;8k]gF452od/+P<WnaZO/BL%T(";I2^A6
W2S,_cb-2,;0.f/6046EY\So1N9Re6DJNpUP.h6EP&rVhFfH>H)YT!Cj$GJqg%cV6ap=6-<#YNiG>pJb
-dX.S.7]B['Cqr.gPcK1$CH'=`cS>p(roGK_:2Z6ooidJmN53\&FH>?#8T!Cj$GJha$cV6ap=6-<#YNi
G>pJb-dX.S.7]B['Cqr2^icK*7CGa"oJI&^bToX^j<QSMXOgN=U<+of`LhY<tOG4acCHW4u<r7pr",kQ
OSN[je'5"fol<Q2?A\Xg:3hE.tq:A3p7hHl8PGtOXZ)f++YWBXG%Ql&ag%Sp)M(TJ^pnkEJ=do/@)n<?
)9\.a=/H>X@A^EQ15HW?[a\YlH:>5d7%gf<g6fGCI^F;EEd%r_'iOh\8Jn8C,5nKd2a<3,IQ24^qN/jF
^Fe"6?3QZi#Y.=5$6(]<(\ga)N@jdfDV=7o^ZH`AQme^*X,?1m'2I;tuWk>32uDHbn[A%PTa^O-]-;Cj
9m442eD]Y-DW2:K\dII`o+qgHp`.sj.!,s1&o<Mnqk8),+FWnaZO/BL%T(";I2G35rRn&2q"c,oGGC=D
`2--f^gl(+%Uh,>1le`#o-7pY_6>,PAMo460SrU$e7BgnXh=NO;t6^?oHfb&EuN[je'5"fol<Q2?A\Xg
:3hE.tq:3,p;I$[EM;VNa$jt.`GpJcm)3iM@)5-<A5p"](]<W+pp,s1&o<Mnqk8),+FWnaZO/BL%T(";
I2G35rRn&2q"`Q@T=SL3GgI</)N\*c63;].(NTXJM.Zq`^^m[o"+D*P`4<gp=WST'<5drVi?mZ&8]XiC
so4]N6GlK<?QY'TQT^,WsNn*gfcntO,a-I#dsSF3?r4)1Ito6jfC*Imh0^\tU=hY-r5Q)m&+-`g9/ipO
n8e9_%Sgf%3-XaY/#m]-"Vm#1+'^>o#H29mmmhE#+g7qLn/?`<?sT@W>Wg-4bPhu2rOIC3Mg-ELb6\N+
)pg(AO!Ni(CfLZG&,MJ;a)4*+K:G@FoQG4PUWn#:BCM)2V&<d.MtcM*%HcLdoETDn5I^\dK7rO,d/be\
stX?/?gXAh:@m`<f*HMil[;cPQSIVrfdWqT9TMht3Dg\He3pR=-d]4,nQj[cA)qTeW<%mKsH\'P!Dn%\
8A<SpU:.p7(6:0=K=`8-QNWV-$0\YlH:>5d7%gf<g6fGE#,I]r?'p$O\[mWQP7NlmJb$h^(LBeOl1[ni
UmX1qBC5E]MLYj+=Dk*9[Og`8DD>)sbgH`AQme^*X,?1m'2I5/\MG<4'KH*=3R<uJ2'.Yg(S`m^O3rO9
n^RiGXaQ/ApWY#ILBm`<f*HMil[;cPQSIVrfdWqT9TM[=:2cZr:Aqb3TpWgMU<3RiYiT(^.K^J41SjOb
*Hr2./MV:lN*7ujItj+l]eWetN`F$"I;FRNH%RP&X(YGcr3kqfh1Ap72i[:"]d]s70IdsJS[[dLK(Yj.
d!o1HD8mZ&8]XiCso4]N6GlK<?Qm[Ln.\8+.H/&.haH;'sIQ#XF2Ei9-l4me<>J,@LJVtTZGf[A(>eq=
rbR@]lgEHgJWC-@#:m]!4RG20pGEqdi8hn1b/qBF2,I*1^,oYGu(bi"B2h,.>)K%6Ida,9?*VpA-*j]/
R^T'rcf2=*(]2`p$eaO/L`r/f]4<ACV)DJ/COh><]9AjT9==cl'3]o-4Ll]aDW'>$=UMcrs9RiY`&h>$
6lrbB3$IXW6jkqd\_q;.L1RiQKmjCi9kIRrn+WgHgO[ki6cmepkUds<4SMVQ>:Sb0f`-dCU/n[kF!W!A
U%l&uk>NPG>E:\RNGknUIo4M)u5mB,W`fb&EuNi(CfLZG&,MJ;a).s(HskC'u:Vfbf#LMh$O-C<qS4\h
KeWk2na:*rgGWdW>L/%us(`0ep+X("/5N__gi$Ia(&,OUR39s)GHaZWW=e*?,1IGUkZpg;?oZhMps]DJ
;FRlne;s%RFuES<NUhEb(]14`W5bI9Y+jM,upQc]3>.^i:=q8>(k1-IQXipOn8e9_%Sgf%3-Xa][cc[0
\>5DejR=l/RpZBb*o4dZ(8J(-Q"*d?C0POai24kT/V^3T;,]]m]5ra$K"M)0S>R9#`IRiQKmjCi9kIRr
n+WgHgOpRCWQ2f$rHP&&sKUOLueT@>oE-9L*>Hql9Wn>:\9HoJd!0qlopa*66bT6?fkVWVP]g`8DD>)s
bgH`AQm2p_HbgT"^_kNF65FlQ5CV9[2(l$gdP*cu_W5>V<kQ2;j"H:<3/c1sqD=`&J&G/X>+7lS.hPL!
&?;cTB4Y3I!tY,bma:!_<KI5]nYRFHfkDu/\^J+mf@VY>I<I&G3#]BeXWk@R6>Df^$THT([.STeZAWm9
"+&o%UHB"]-qe,>M"4\5+OQZi%0HJ_fCGKS^5EfLLUF0d+Z[lM%e?(64r2_e=^0kmc2dHOPD"FnialeF
=hm\gQN(Sl?2;nI?1^&KVC45gZ/i=&_`k@R6>.roa\q_n6iho<%/IS"<dNc'tW-hotLX`<*S\tf+HB9;
Is:[RGfoGLaChoYW.$"p1l4Z>I^?BM"PhRUbkpbo"7p$5^AEcdM`\oB+ro\OGklCQ_U4+di?o[^1:9V7
#E1S:7oT:$aMV<PPD&bh/&SN^Q`/bpq(2,(c;'C1r4]oLl6?bLO@]Xk$7R.fs'.6Z6:'0GCQLARZ+-RY
up45sS3UJkst:W_dF'3"W6m`Jc.rf^$V/a(MgCYUhSm\r5pI1L:X8U\$^/p>NTk=X6pP7pus*HA:*d>@
]!?]rb--Dk!Z/iBe2PAAEjqJ;_Wk4Z7TmW@ag!G@kPDboELrV`=tdWF[4KQXV$3P$BckrlGTL<2INSV]
(F3iVhsUZ^4?.@2uaFgooY$Yhu8#sJ%MS5d_m[$@FK(FQ;RSXcJ0HKo?@PKs$,PKpJWWP(P\]iX6k4Pk
22h'RV)EMrHcqfZ:,J+'27,i-!j@GU;B*8T+?DrXGPdqYki9.+@oQuMLhG#Jlh3G4+]hb'!_IrFJHj1!
=Zhb_eiPjTN_Y\nW1Nc+-[[rG-Fo;>K%2h=)rgOsot\sm_adoglNX72J3^FqWslg4V!2!JoBcLVA.AuF
hUVLD-s.u>7^*#%aGi"'E6ril:o7JH97*V5g7a!\H6EPf<?%6;"rQ]biO+\+6,Pe.b,K=QY"m/2i_no(
#t2C6qF^H54s2nL5'\+ER=CanENk*U2`!e2qcYlF`O3q7F;2^Y'ZeD.5M2nsQ(Nc+W9R8;+b*5NnamU#
the*c*0\%EM)Hjf^eq)Q"]]j#N!o"W<EBhFndj9Xn8GRjnlBtlBcUut9cInjm1n!4rar,4??RMKfH3J'
7<ho>`PmA/VV8^_[U`]kh0^NW>2glMB+ehD`g)??/E2[]Tczzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzz!9Er?BPXC8~>

%%EndBinary
grestore
np
181.706 284.737 mo
179.978 284.737 li
179.978 271.112 li
181.706 271.112 li
181.706 284.737 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[1.07439 0 0 7.92506 17.6844 296.06 ]ct
snap_to_device
<<
/T 1
/W 27 
/H 199 
/M[27 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=0b"*_$j31!pJj(,;%l#7Tt+-&<E3%!<E3%!<E3%!<E3%!<E3%I4/6J*rV~>

%%EndBinary
grestore
np
279.884 266.232 mo
287.858 277.068 li
289.494 279.29 li
297.468 290.127 li
284.185 290.213 li
284.173 290.202 li
283.995 290.472 li
276.665 295.867 li
276.296 296.132 275.807 296.092 275.571 295.77 cv
268.068 285.572 li
267.827 285.25 267.93 284.766 268.299 284.496 cv
275.628 279.1 li
275.939 279.014 li
275.853 278.887 li
279.884 266.232 li
0 .0626535 .248814 0 cmyk
ef
279.884 266.232 mo
280.579 265.72 li
288.554 276.556 li
290.189 278.779 li
299.168 290.979 li
283.83 291.079 li
283.563 290.813 li
284.173 290.202 li
284.894 290.677 li
284.716 290.948 li
284.631 291.076 li
277.174 296.565 li
277.169 296.569 li
276.861 296.79 276.502 296.905 276.138 296.905 cv
275.909 296.905 275.674 296.859 275.454 296.755 cv
275.234 296.653 275.028 296.491 274.874 296.28 cv
267.373 286.084 li
267.377 286.09 li
267.17 285.816 267.073 285.484 267.074 285.172 cv
267.076 284.629 267.343 284.128 267.787 283.799 cv
275.244 278.311 li
275.708 278.182 li
275.939 279.014 li
275.226 279.501 li
275.139 279.374 li
274.902 279.026 li
279.575 264.355 li
280.579 265.72 li
279.884 266.232 li
280.706 266.494 li
276.676 279.149 li
275.853 278.887 li
276.567 278.401 li
276.653 278.528 li
277.332 279.523 li
276.013 279.89 li
268.811 285.191 li
268.796 285.205 li
268.732 285.172 li
268.801 285.172 li
268.796 285.205 li
268.732 285.172 li
268.801 285.172 li
268.602 285.172 li
268.759 285.054 li
268.801 285.172 li
268.602 285.172 li
268.759 285.054 li
268.762 285.058 li
276.272 295.265 li
276.268 295.259 li
276.094 295.386 li
276.186 295.191 li
276.268 295.259 li
276.094 295.386 li
276.186 295.191 li
276.138 295.292 li
276.138 295.178 li
276.186 295.191 li
276.138 295.292 li
276.138 295.178 li
276.138 295.194 li
276.136 295.178 li
276.138 295.178 li
276.138 295.194 li
276.136 295.178 li
276.161 295.166 li
276.665 295.867 li
276.153 295.172 li
283.359 289.868 li
283.452 289.726 li
284.035 288.843 li
284.54 289.347 li
295.768 289.274 li
288.798 279.802 li
287.163 277.58 li
279.188 266.743 li
279.884 266.232 li
280.706 266.494 li
279.884 266.232 li
1 /4 /CSD get_res sepcs
.502 sep
f
359.694 217.514 mo
359.694 212.384 363.868 208.221 369.022 208.221 cv
374.175 208.221 378.349 212.384 378.349 217.514 cv
378.349 222.644 374.175 226.807 369.022 226.807 cv
363.868 226.807 359.694 222.644 359.694 217.514 cv
cp
0 .0626535 .248814 0 cmyk
ef
359.694 217.514 mo
359.694 212.384 363.868 208.221 369.022 208.221 cv
374.175 208.221 378.349 212.384 378.349 217.514 cv
378.349 222.644 374.175 226.807 369.022 226.807 cv
363.868 226.807 359.694 222.644 359.694 217.514 cv
cp
1 /4 /CSD get_res sepcs
.502 sep
@
357.483 208.221 mo
380.474 208.221 li
@
97.5828 355.842 mo
181.326 355.842 li
181.326 324.956 li
97.5828 324.956 li
97.5828 355.842 li
1 /4 /CSD get_res sepcs
0 sep
ef
97.5828 355.842 mo
97.5828 354.978 li
180.462 354.978 li
180.462 325.82 li
98.4465 325.82 li
98.4466 355.842 li
97.5828 355.842 li
97.5828 354.978 li
97.5828 355.842 li
96.7192 355.842 li
96.7192 324.093 li
182.189 324.093 li
182.189 356.705 li
96.7192 356.705 li
96.7192 355.842 li
97.5828 355.842 li
.770748 0 .91931 0 cmyk
f
179.846 347.93 mo
110.596 347.93 li
110.596 330.864 li
179.846 330.864 li
179.846 347.93 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[39.9531 0 0 9.90622 -22.2582 259.674 ]ct
snap_to_device
<<
/T 1
/W 1004 
/H 249 
/M[1004 0 0 -249 0 249 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0W>E18DNWmcks*=9NH4l3j@GK=T4Ye6-EKdXCTMM1&[jW]kbQ%AKzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzz!!'7Xs8;&05?^uZl3..f\B`t9UjD=`lRu&u'3OSBpEk<U;h4VQ'1
qlHp\`LS-hRu)j6ju9GB4,\/pAS_T),&UHQBW=h2tA(s(+q+hW)=\[?Yf23M2Qmn*bDW.X+B(q>ZpE"a
H*C$SkDsGXq^4ZWTHcc6[Fp]-E(opmsJLpmo/+l:f<GGPt*_YFjShB+qeth,3L\rVaZ_O:T.q]I2l9Hb
WA,?BJ=+r_/^ni&pbSGurnu-gub*!.O+6ggemHSXB<=g=-(.hm#]%hZnIKJ"3e?Xaf&Ra9CL7hN0U<^"
:BZT<,^MVs:t[4s)/C3e,`923A=@0ph4IU^,R?*Uh&3r20D8akBPRPd!(Q20;]@-ES/$+rRIn2YWT18+
k\M*hbOUoR#-_@@',:<Vsms;YDB4NXi)8Ut'rh,_LHDBC[MK1HgNY\M9#hRkrdm*_gXSmZ[IBlpXMe*E
8Y$X8eVZ#+qrf_^FlooLu8taF$<]:H=clGM*YtaV/fhasL[A;X3J?qCGhKf0hCh?1m"+MtqEt4\KB%qO
2LQX7%P4jSo2Rfr84So'\[K'roTReUL:M-%hKU<R4ggr-+X%;tXC`?g+Q6=ff>edT3C(I@SA-BeLgX`X
12Ydd"RoRZbLX>-$hdF7,r"c`;B+bVJgTEX&T5Pn'jYSUI'M/ST.#ccU"QkLAe3-CU+6-ZrM:;>7.B9[
Bkff$$#D[.=],h\D\`G<>]XSRpM]V:Cd4qWqDaf0iOmW1FIi[Fb%%X(Tb;6U**I@.i@&Gtk[sK:Vh8m@
AP!>kNBNqCf1CRsfF-BeqWkoN\H[d(D_1/'hVrh9]^raf]H'AtHH'B'aThBADdeb[tbdeb)qgcq`,ZF^
HnQ56p+043h7,*Kd`(bDseim7$"URm$0p5<5b$V%0PIL>>kmf6td9r>^@^lo9XJGD(;lc]1,3m8;lWRn
<$'5<5b$Wt)1'L(dR"g3q*<r>^@F\Vo6-V^0Jge\?Br3Fr@MPb\'ql`a8CI"LXsn%NsU>ff!W>!(&<om
M,NcK0K=mp54+QsE`H6TM1([LOf6_^DJ@qsJ5i``8NJW3uL2<o95kmTVl]H4MM*]p$Yn/"!"MeaH^t<K
SGSWS[O?CIcBES0OtTiXAlFP<85:Y$&:G/,(oH50P]2R%YK7De$8a4%$_`^%^@7Nf:"u>>XM4qf_i8>P
2k,8Ug+@kJR5'ME/hannjo.<bKMNWqX7)g6$B/?+g@/3HYNVch,M0QKqR`^M@bOk/.V6ME/halL0>HCN
YBEYBoZLY8nK^f[W(Q]:J[lMC8&KfrEhOmr-'jQt'/O8*j,.0BRPP'n<PRH0r]J[%4l4^RK]OgbJV*AU
\BT/*Ff$Z\gc3-#'P4k/TUQF6@IAla_MK")I89HVuu"8,b8lO3KC0RAJc'pT%c#bVPfdc`c4J:hTY#o=
+Q6=*(f6S%%ZDe+;NSp7\*2qc,@Tk*aMXkL[<TFf,1^ma,==4F_DBDmtQrc>3"01\RN?oKB7D/+^tjQ#
i'M^YWh+1\prkpq*27[U7_dpY,6ck;E)))>hcZqOU^3Q$MMpauN%a?Z.jPRJsfY]sj4e<a"rOfoqb]n)
q#]FU$F`q>+'2DcPIT@Ga04OFQBIUsAF-mSl_6q>@)hAkT5iY*HbmT=AEZ5G-c31U(K;f;DODX3CPLqq
acn4YXX!l@S7Is/,&->C(^!>g;)NIt+M79[@@\l3scIoC]*4r[P7(_S16@Gn8-f]p]T.'KV]^HR?G8WP
9nNoO\!8\(1.OY6<An=L72VMT#KDF+;?HVsCo!eTXOCr)RG3:GqtB9R:'0Io"qcc1:W*h0_trcG5l3?W
X&r=Ijg3p\D"QqbTF?e_e,G:XWQ9B9RhkV"Z]+qj0DC=oMaBS'MDk)-F6.l\`%jX6Y&R^3@qD+0+M%qY
PL&8_Qi$D!LJW%R"s5nW#];Ac99fe[6^)"P"AlZfgYSU`QQmJ'u'/la@<1pI=iMe*DQ48Gt\mpYSd4B4
[(j^Ybm5oh'FTS?NW*B4/uUYH(Rt9ZT>i#6([P?6m`i64I"38_?Do0(nt_MXRA5ZEcZ<hg8DJFbcJgp"
=U:W6W2I4^V9eoU/OrPP2\B:4&*W3sdbiecJX0pj6Vl[hAO>?(\atI4OG@4nDF^FK+l3eamD7XR6_t9Z
[*Fqjst6?DPe>f/fr+%jjjF4gX.;eNNgW-0qO2c#n@+?2Eb]j'<>qS(Q35e@rXqh.u]XYLG:8h`L&++"
;9+%X=jHceOBK\Dl8.p$_1n^%]7+F.KrSSa,Z?j'<>qS(Q35e@rXqh.u]XYLG:8h`L&++";9+%X=jHce
Rs[\DmCNp$_=4hlWF5oKDG<GD@+*Rb6N9SmJ;foptASX1s.\NX>U>62H$UbtLGU#rTM^I!XpuT?5XVUu
!J)lKm^@o<YIS%^gI9Z+l,Y]hIhZ4-dK+jnuK6mim$QP%H&7Q@p17.6]n5-dLe5RaUVe/p2>:2*W*oWC
sq\9^H\,:G5ZDqFO\j8NB"Th`FBcPGFVGY2ouY3$c%Tk"_Gg*He46,@0U$kk*XUlrBreYL_IQ`;V+WoJ
3hXT2bHPQLPX_]n=ft8Xl(3HE+^j:\*aqX#QHXC@$!(]C4U#@TF-9X[A(lC@,\DNtZkdRG-7g.f)l_pk
en)60b&;btDV2:O0u(_3OUmFY5c+\uQ?j[W=p$B.^[&<V:MlZ,_\a]hIhZ-`?i9bkHtkhF6.i,edKJoq
Z."P?k_KWm>:D3`jqYcZ[V)5PH=<k.7+;jP!Y'f]0oA?DdGhPH$g1npTN3GEK<eM6g)_;dpe%d?WV5.;
,t[SZ?MfB6SC0ZPNqSfBM)IWO\d\4\kA.ASPSe8a*;IqbQ&B%at%sEE9)S9$@>`](12.nU*No<do3Nf=
UoW4aTsb[iJ30EFM]s;u?F9UgC3KlFqJ(ZnJD";H6e5*\b^Yht@B>ZU;uOoh;V7f+iX121&WTD.64$9^
Hh0:G8:8g2ZPYY>n_G<m&.Pc:LH1WEI"neaI!o:FW^AZW4Q=gm?KrfC@WCf!NW=4t$'rd]'DjkC38jjh
71aUsu!)@ms\&=hl<3n,9WI'5EnHFf)56jja3N4h$8*m4trmM*8Ool>,#)T=e][0;g9+[3oU3]!gZN@#
Cl;q^M2^bV%_39R#jJM>?I`G15a0Bk!\JH[=r+f?U]eFij2\:/qpA:X8HOD95qr"=rp0:?T"\rL3@bVV
%0uY5R$6Ik0^ZoF.VIZdZiV-hd2\WNY.@J)ZXQ]pu*%f:JSkanjGlJ-f93h]:$X`>^`"X\>sGmrn0INY
u*pDcY(j;D#LTlucc50:hsnIJtTH=l.?$;J#7[q44T?4U^Ike_T'SXIag[VS/2D')/K=O&bdV0oJW2S8
_r@XI<_'H7`:VbGeB+Xf:!Egu%O@"Na^$h4=$5'5q$j)k!)l'dnKTSD(#DIB8n!MY!<8a!mq[au[;]<N
d^lHT>(uX=Ya1;u8XbNZcm;H[EVTh=[@>^Q2[kJ&gg2*2iPscM-bfO`5cMc:=-7ZYX2*F4G'Jnm5)hX=
Ch\qeLpoNu`H<P^@oQRo]>CG27eS<;k[PR-Ug1\s#_&q5lV$Puc/:Q++t;Y9hA=3K`RErgG"_A(R87l-
-<QW9RZYZ4AV=^GW%RqU=ogc(t46Sj"A*<mJ.=[EMXS--LWqRENf;3O->sjp.JgkM:+:?8sD,rnUFmU9
9oeo^4Y=j\e)p;s*ceQ$81pG<OcH]W1-CD94POXj$^]ScV.BIP4Yk]6ebQS0BQ6l5\^W`i<i)HgNr%=&
n$/esZ2Q;t?r[UU2>j]X9Nd;gSk!DtcCXq7J'0]-ll<Od'KNL>Vt,/+]b,[I_%;Fm<;<cEF.8P#l*7M)
DuAqFjXi.l0E#YJBmUh$I0^m;=EBglqE.8BEY6^[M0hPo3TqRZd86]C-H7DEZg?]Ft*4XQ^bUB6*9@RJ
H*\"hqG:9Kh@)<nt/![3eGD5<6=r)--<4]uO,rh'Z8%HFbPN-2*I'dlXSUjOCRmo8<JM^:*>Y4lqWo]P
FQ_9p&8!p%MP<Q2&)Nl",I'4\tG/ASPSa9Z\fiO2RLDETbTPY3g/HXK:gjSncjpHIDUOER.\;R\ICM`8
&#o3V.O:`1A@MoJ3hX?)H\JfLKCFn$r74=eG/$eZ>k?".j8Jfm2<)gj-r;e=*,;cG[qMcJ@`644!"o'D
nBRe'$7TG+"Lp@NUFa^#RDMAR4'JW`e$&$Tuu)F7[=kg$)8s<9lc>WpQj:1G,f$Du8('SF1$IM1&1dl"
+U:]1g<sZ&chlhJr;WZ9I1'b$!EF%m88)oCB7Eg$p][=S(EFeF_9Md^%U"Y2B&pl$fLsf_<=U?DdG(bE
TXPqadgQ*I$?mle;>=ccV9>i/(L+P:)pAc?E+Z\kd]`f@sG6kH9=7A1s-?m!W>=02qc%AP-9cI3dB3VM
&+*q-+#o_XHp=?+G<FqX%Vh0&8;9=mN%<\n/V0`82m8oJ3hX?)H\JfLKCFA4i8TVn_o/_Q's4KX5pbc:
RAF8foR+c!shG-aMs)q'm&)T@hW9e@p*oP#l*7M)CDEBi^i)hSWX"cG]?rGic)"mW2PrGBD/?8"D$5ka
_GU'76A(e'$7TG+"Lp@NUFaOXY-JdcuB2RX>UKr*@^Da/OK8C-i-*leJ&OKZrnRf`/m]?DdG(bETXPqa
dfF9PLimh1p;Tcet)cAU8jT9^.%LSNCmIGB;p7:D8)$RG-7F;t<QI,I&RN--hCW+)4M3Iol'&0"q5J#s
J8u>44!-gmQ?mgom*ts2:L8VY7F@Pe7Y+8?@YAWO%ak(HfO0o69;7M<_hCeD.1XPpZ4;Wm4o'4E]6SBj
q8[H[=r+=2eCjH*,:GEIW8:e6,q&:4`.63IB;k*P/AuT%<?F47\O2?RBA=Z)<p`I9"#gh:B_"'DIjV8t
M=/g0h3lB<V.`\)uP@:[7VQ*>q"WcFu(hK8Db)FR#q':$B#dAsp0D4BMB\Ut5hbm5T=?n$k7L%XgsAGH
K.]mf,.!LP\1-FR#q'4m9=TAU-nG=eo*pXJFGQ'C@c'eaL"*pE#m^h^Y[>i<cj`Y),/4m-1?F?e''\\$
[^+eG\L>3m:3O)I\dLB<M(O[q=Kje,*?d<E;n_X\Vog=_lnM=+/Z"*)lTukNX`O*GU7!G+H2/\(j#oO&
l!0AQA0=c@9JalM7[X/T]HTXi`A@IsJ1LZdP[FQseNkX+&6ooClp@%o_%/X1hlm6_`lAYkBYieRu#,0m
.t-Wh,'3FZRPm?0[(LG+H,-qpINTO&l!/AZ^(KgXYsEWh'`:h_J8]euB]gpU?p_R7LJYF0*lj<p4AO=f
]7iXj>V`=gIbf_qdIYq;4tI4Wi7hAZkm2<B6rEDb&>6Og7aF=K,6$d+PS.<de=Yf@J&HZI\K\MLE%IT@
6fdLUD&gX$1<!NiDp1;>!VYXOB11l;T9U[d1"phj;gCM7pTLQW@`UAZ^-`L4n7o<R6H.D`uLT]Ma)IX_
Xcuo:*$\k?+ibXjGVDH_L;]luYJ\E4VD$4d`NUlWee2lM7[.mj]"B9'me0Y*H$5Dot,3A$p4I6:X,`=n
S>2k?aNrs!25hSXZIYFXO2\&'GBb1,5u^*`D<-WVZOiXOB11lW,Z\[.Bf15,V?IT9J_<oc#o&mEi9/7+
Lm;RGel-k*92$Ec%jVTAPlU3lc!kl@k7gZ`d*Gjj\WUrC0Ob4*7QlrTs,s9g&<p[3sS79(gr,Z;0RbX]
rKcO`U6(Bt73U3Kn2PX65B$h^;3^Pa-ZGY,USK\aJP4<n[;gFBYS`9[KnJkbdCRE5Jte3qZGA5-D%;;=
a1>kn<Tncd+HD%S3`_\[GL]^+l20ko:@YX;O'=`kF>cQO\FC]T&t-8s]8,A?,:Wm.3%#\-#W@,e;dmg/
aWqj6=9=k1HqNkenA9g;I5We=ZLT0s.$/Y2n?Jh[1C0Zd6t)j8::L8ogKE[B23la4#HZbct[&d"sRP[A
g\^f:DcM0X7K:Y2nBGf988Wf;Vg%=F'<Jk9[g]jP!Y&g>hG33p,)"B'@/NqqBP)P3Yie4LM>mY5GHig?
V>$1@.mdl`<5CM)1?#>DN&UR+gTb^,kE/Z"E4<)>fk-c:\$eQrqgC=0h8JlY.BF9WsNM<h9'Ifh&<H97
8<amI>:**HURL1N_W8I8)>,V<4=Pf3P$Be[a;\ddp/8NV->Boa^^b>!:^,>@D9-Vu,bHA&k%3PAY%"<"
2F0,iud.ibuT4[<6I8o8\6"8Bs*#0(uf%c<%3F?;F4tDhY/RT'iXhNZDni:-+rNP;OZIP.1`Y,\5`1Y#
R[QYA9aF;R9*!M*8#ei9llWCP<6UhDM^]dsZA_Z")&*8Z+@fZG+Idde@1HPi$g<C?sqQmN)2+P*g/k4m
[<&TC:!@j\/[(InG]E:$qIm?QF4S=>P'Ijc#c09i-sFLOE8VFoG.^gIYImle6-N[!Yg;@)&ahIH&#p0j
bs`\jMI$:$qIm?eobp[_R>tcIhCY+Sf6lHa-1`c`)&hE-:$Kp0/slj+J=1j3Bi\qX7J2=GOHT:ubh[HT
^+c[iE(5Y[</A<cJqOIrE2pQeLcdICM=NSU7M?ST4>s3TofOTDWV/bupCDmSMqL;gUX_=190]S3cA?_\
oMb$S$1rpoRKVC9K"2:9/#m]:!m14$cldp@^LIm.'??I`8sBRHlJJhD)FYdsZA^Z!4og;>N:7q<m/9mO
G,alVtCJj,(J`C=ls+k1t>Z:mJB#I?#%h]OF?*cWlgImS`3g;gUX_=/R%O/T=2M3BR'!hu37@Q$o9D[D
*Bg:X+;Xk+2?EE&qc]qAcR0Gh&=SRe':\h5/CYVY58GY>.*$3ePd^ni<b`#HDjurB$q"e\4dh0JW$_jN
O7Y<7^d73EGS:auN%ao."&2]OP];Vu,bBU\=r;8Ng_:pHWjRec"rW[BJChaST5n:U`E(HheY^pNZA4m%
20kZe_V3X/>T8\uuT(H=,U3`3YbK%j^5!OMa[lqmj=^eWqgBBE#1eF*m[%48(YqDLL[eh<)=JX]J6anT
8-;3SlpBSb=&O,bDDs4.uHI=6iDk'3Eu^45Pfc)?29?A,^=fk4\7(G4"b$H.ap=h<)=JX]J6anT8,"^:
3*M=L!Bld`u%=*Dl_541-?jMq)aaGM,[2p7Dt<jZV/W^u"ajF+8DZbj)dOc$-XCYF+&(l+ReUp5T;]QZ
V)ImXTs/maRGD2cd[,:O..boenOo<7S<kchc;-a1LMHe\C!]`k0cJ`RGr)pU0=6Vr*cBq[JCFc<J`m:T
<Ah4\>D.S[tlZQde^DZEgs=)5T+7r8tp=T9u/as*i!KmoJll;gUX_=3C>F\U]$)c<T'DOAa,iRM,)2X7
]N-1T=OVBh*)?ZV"f+q9Gu<4Z,<Frp?jEhQc3=:$qIm?V+nc3s-?5c<TB):TEMO?)`&0eQT$1Ra`<aG4
mgKY@Qd`Ilb-T-g0[R)j$_&c(CHYj6=:$IdcnJdqPEt=i.^B4TB-ggo2n(cKt,i,Wa?-`8$M=H(Oj3:@
IZ9)*2mV-0SJ&Vl'0TE%Y1>n'q6_D3#iGp"<!O"4HJF;qpqko;QZRWSSt6f>5quRK';@j,,kNI2AaD>5
'DAp3=0PS_r2tY&rK,kb.ME-/S`[2;P8#$2<VHhO`1Z:!0Vsh=GGi10*aXebm)Omrb8mY'#5'C6,:igA
O2'$M79q5,[6>WHI$rnL8\HoXCd!O7'Q$Z?q>n9r@3hXI>W&riPU0h7<6':$qIm?b=)9*J&Yhc=;Y,+L
SAaF[#%bh=W*pk#bc5f??;/4gXi1=2NgjcH:fCmTfY$VY3":*-sE6T8I^CiD)qHm7s5&oq&Da/P=)=V<
7(3:N^\im8K=HrCWWC$1lobrc_''nT8-M^K5j0!1up!LT9cuo_S"*RS`T.GM]%C2_;)VPWHCVRT4^#,A
h?3B;.GN<P$f^Ni>15mV?Qt^i_$nKhh)SLDoX2Ro&]K=(c=A9("43Y,A:k;1"WUBeL+^TK89:-M6esl?
askS^%h7n'o$IFmkm$[p$7g=/gY8G@d4Fe#jU]TR%qHbl![$jBhf`]CdGqj+JJ&;gf1QXOB02o:<B-.d
t'O]%$PRDAh>/r>tFO25Q=sF\Yq"KAC/>aV$@(W8VJCl*E=FO.TD/4"9K;Nkg%SmtJnGmuC/Nri',IT;
m?qG@k(Xr@9qZH:mk#<R:RVp3;qh*0^);g5Jbjj!WCO9?K;d,;A$#H_L#E];o/LJ*WQt:JSX)<UY.N2c
o6Go1D+-o1ioJF\Ucf>q30QfscfZ1oZi1<8SoLlZA0&I(Sg#b.DPFN]$j=CZbXrq50b[?:AcoFKb^C]4
Z1r7b)WF@3/IMart2#VU!;Z?G9?d:Sb)@3<Jg>\/-L)[pA>!>M&5*hU7tP:Zu`).=HU*`*AnTV7QBmHr
<r:<LrgDI@o*:=/sSqauZ(<0]2/BU&(?bV/+n:l]QaQGI756:Yri"=\\-*.>R1pdT;$X=usu?\nV+jV>
AuEXOB02oBj%(-G6gYC]@UJ%o7I8]CiX2a8W+5:[^*jNkIHPZJVJ5GF7%35?4>jP]]#W@(r3+6Ke5X_L
7hKJ+^Fa]!ps2-I1K4?E<fNH!dV!m^smFlM1as:[RIDeRpRIS^%h7Dtgrlora^'?_4@2qMdVF-e3WfR(
J]lSu_UcgR_I/ctQ3OdJ$SFTA%nhWm>+r3h7KLhl1srgH@@S^-#\>ofIG>0:pPN?"n^gcXtf-XNi2A:!
r>jFu$V;^J4)MrEK?oS\,b"h(b,]bL:V%pcY.9s-%cB.]r/s4e&[:J#^dHBh`WRpS[+:]t]o54eD(WC6
$)P<VK>$8b_?2qG-rX:<WUFqPNq478i"jB6;QCI]"sIl8?]JhOg%C*rGYuIP-0Hg^@JQb<8Z!NVm"?e,
$a%V>&g;3Hb?cEB<-;2,-O>:WZn'I="*4f@1dkleDkTPKSAMr,)@1XcrY]6qZpKkB$L6Xg1%_PA?Verh
#;J'4u#pO/MlDRNldBHf8a\\^0a'IsZ5)InJsT`Jcuh^J7qB+",VrQ2OM)q['Sd[E$aE:!F9[cFr^)\Z
FaKn@q-"s$'NHE+M5*\lT4+maoT=;0<),o<-C4KW.,+mV?Qt^if(!YK:>bg&7BkrkI_<SF_"i]t^bPM%
VS2RWUs*]1q\_FC.sf"Klf!Hqc5/aQmX4pp\BsbU@sfnsuEDmS1nc-/4ufp?:sfTUL5dCN<QF2IA7!?`
X*O*Q[25p>^?1zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzI..(8Ll<.<~>

%%EndBinary
grestore
np
291.117 246.211 mo
291.117 243.148 293.605 240.661 296.668 240.661 cv
334.071 240.661 li
337.134 240.661 339.622 243.148 339.622 246.211 cv
339.622 268.414 li
339.622 271.477 337.134 273.964 334.071 273.964 cv
296.668 273.964 li
293.605 273.964 291.117 271.477 291.117 268.414 cv
291.117 246.211 li
1 /4 /CSD get_res sepcs
0 sep
ef
291.117 246.211 mo
290.254 246.211 li
290.255 242.67 293.127 239.798 296.668 239.797 cv
334.071 239.797 li
337.612 239.798 340.484 242.67 340.485 246.211 cv
340.485 268.414 li
340.484 271.955 337.612 274.827 334.071 274.828 cv
296.668 274.828 li
293.127 274.827 290.255 271.955 290.254 268.414 cv
290.254 246.211 li
291.117 246.211 li
291.981 246.211 li
291.981 268.414 li
291.981 269.709 292.505 270.876 293.355 271.727 cv
294.206 272.577 295.372 273.1 296.668 273.101 cv
334.071 273.101 li
335.367 273.1 336.533 272.577 337.384 271.727 cv
338.234 270.876 338.758 269.709 338.758 268.414 cv
338.758 246.211 li
338.758 244.916 338.234 243.749 337.384 242.898 cv
336.533 242.048 335.367 241.525 334.071 241.524 cv
296.668 241.524 li
295.372 241.525 294.206 242.048 293.355 242.898 cv
292.505 243.749 291.981 244.916 291.981 246.211 cv
291.117 246.211 li
.62005 .360967 0 0 cmyk
f
342.172 254.307 mo
340.485 254.307 li
340.485 246.211 li
340.485 244.542 339.846 243.021 338.8 241.879 cv
340.34 240.695 li
342.172 240.695 li
342.172 254.307 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[2.02899 0 0 7.91702 109.132 313.582 ]ct
snap_to_device
<<
/T 1
/W 51 
/H 199 
/M[51 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0;0`_7S!5bE%:MgG'TE"rlzzzzzzzzzGT!*;!!*~>

%%EndBinary
grestore
np
338.8 241.879 mo
338.376 241.417 337.886 241.018 337.344 240.695 cv
340.34 240.695 li
338.8 241.879 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[1.79028 0 0 .755896 108.296 320.743 ]ct
snap_to_device
<<
/T 1
/W 45 
/H 19 
/M[45 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=0b"*_$j3.0S[N:8LqSns9<,"llK\H<=[OG~>

%%EndBinary
grestore
np
338.758 254.307 mo
296.224 254.307 li
296.224 241.545 li
296.37 241.531 296.518 241.524 296.668 241.524 cv
334.071 241.524 li
335.367 241.525 336.533 242.048 337.384 242.898 cv
338.234 243.749 338.758 244.916 338.758 246.211 cv
338.758 254.307 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[24.5865 0 0 7.43961 84.6249 313.582 ]ct
snap_to_device
<<
/T 1
/W 618 
/H 187 
/M[618 0 0 -187 0 187 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Q;3'JDNWmcgr17*<WY#BMI@Zj"*SZgg.B`p=1M(<bdS^#8*rl9@zzzzzzzzzzzzzzzzzzderS6FB
8J.R<*o)r4"D0?hD_RhS?f,n<lMsQX;>qP<Ggbk5]nTI@3GUGQW!sn/;80c(Y`]JNF+p1Yuh+oRSqTk5
_.G:<T=9mr7C4Fft02"5qHu1?#_6`3ihDI_0[cr]\+Cm`Z*q4m7>.,ck:_pXts)=tbF#RW-l#hq@q&]*
I/1Ju#eXp\m3p8Eg0EDH#tnmQ6o1'(YL?'-o/4YK7re#Jb[\\p)qt)%q8Br?b'<4*9qr.uU2E5dKgaHE
p+fRXkkrq00R[;O4E9AWbIE82B0%SmY`Ne*9(r9)dXbJs7SI2-D3d&)AS)jf'Th2Pn]_-0=%_-:h7E?C
+1V?;c*q]:&73;fbU8mgZ;gJ'tOgq]fP:P#03E4M(EY3!6fdpKYI]c6m4i>h`Jaa?JRl5"Y%0-e,FXPO
@>($$S.;lCML,rr5^8/%)N==crZCr_8iLe2^='AQL57^I&\&A'WOd^LmF[;_h"Gjc*;O^S@EbjsKK>?)
]ELL8m;GItNpQ@F!@c]4V%hl$9,TnRa;Whpp1)Z]dN7$2#Rg9%nkY]'%Z2?^I3_64IkA,57Z,S1m#RBC
0Sb#rP]3dJ]PuG5$$[m[5s4pEesu=1qXF^UpE.1XpimT%96)_p^ZXIqt58>gCn`LX*\V8\+*9*a`Kg,5
7+H-I:%l),I2HFZq=)]65a8,&R%:C7-Cp2gnlE\%h%7,586h-I1#']-sAUQ2.6K+KZ^1ORg"IXgW?-\Q
/:iUp\'@hcWfPg-3-pHX]]nl:e/8DB4Qs8?7OA&q>6Tf9rKd\#8+HF]I.$8,##:3q&VfYHBaVL6XQ_[a
0Vp@#h&?SCR;H=\#*VIe31hXeuKg/EOP5me,jk'5CW0PA0nfR1&S.rl0'1ran6Af:RNX9e3oD=2).2_K
eqUiJN:,46LY9?;p.I%(h!jW_KY0e#qU&Vr)dK9((`in*SPKk'-I,>!e5!=m\=i.r'[Ng&7DGapEFYYT
pV)1\R]2hT%/(fr=;Mn*FthKK:XTl9'8*FhoG'k5)'Q1HNd\bb![bDd#5LGkZQaB571/hqd$Z$+3fFQ?
)\je-2I*@AX[_k@?(uX1CgYY]f_ZAM:[^b.=X_<>'&Kat2fDh5L^`3annscffHk^['J-*o?j=qH;O7H$
=0W,h-%\>O!)r4<)KuI@a3D8%Vd_<.0h!]QWu;me<WLUQrA;oX."PbtkZ=4bM3rK/ogTdg:54\#1,2mQ
k<c]4\@R#AMljc&13?qV>L%U$a<(h<dSX4d8&NbV=C/::X044iq>\re\<`W2\c-FRS1KauePHhb)/SQ\
;rBjEJ'<X8@(WCbX2bGrk%Nm<1FXNr0Q;SPmqc?6nmrWiC9nS\LAUa+$a\I9/Y5^0@k7$*sXoSTM&1du
eu\T@7E@DETHAhsp>eFm%X0kOD23rN"dWTBp&V%o8W)f]BKPFc*?We,#S8c]srJeWj28*I$CDGQ-EO4F
XfP\)$@Abn^+_OXKXZ'CXNZ\h[(IF':_.C-(b;FM',emE21RcP=-llK=#q!P=kJa!U,r4K6ZKF1:.QFF
me:M@!<r;46[K?<$m*;eH5V3;K.?eX:VZT9F#8;I<o#:TSq>9X6.'KXE"ZMB%1s48l<Ve"(\TT;TogcJ
QMbSaV.E]A?5nf?,Y9AdJ=(F0o"megZ#BWT+XRIh.`b^'bQq^88!p]=K).rq9RY"BKT0p.<=dV9^T5I&
ac%C&@d"`>`9d'lU)elUniPo!jl*n?k42]A4*?mf*3N)Ns6bigch5nTU7:Ll!V=;Cg@s25b$fr1,XO7n
V(_hbU61Nk9F0gT05kT2t$W,MSLZRgn#nH.jJlkO'6dEk(FQbnKf^q`XHbh.LTTh_c(OShmcE;U4)UFF
X=I-Zu?UH1`+.AY0u(ce?OVD%9r:kA%];N4\E>rr*R,CJN[VcM(JYIQO'gKAOLLcIR;u)0aYoP//.R2(
.e)o6iNjhj$sm^OF((cIR;u)1/8e='9V=ri=pXhJ;"1H/JH,lSr*aV;>Qb[A;pRWTnfAp:pGejh:Aq;t
m?-Y`?&t<cYq=n$Fo%lJ7jqjnn;S\orO<Oq[Sh\$2/S[8-RhePT7[(>i7pn*1mmhb.&:l2H.#e+TZ:Ya
4mf<dMJ#2'qDSSV4K%MSH];5$-9t2CG+VBg6P)-1'P@m?*k)m^f:@g$2bAnjn6@XfO0mB"i<&*e&?\+(
5E;B>:6Y48M-\cB@$<GQ1t&Ds$>R'BeSGM)G>$XhBACS=L]Mg$\;,`&ZRTl_iW$l&E#b09]uth&C\F*L
rOHh:ZuEJ'+;Kr&qXFK@>8g-g[br4,Nc_WbZ5*D4Hk2S[iq<^N7\$^'duF<I7i5@<Z(Y<./ER3NGuAI6
o#a!b[0.;J)S3c;qR_G-1%XXNn&V5F&7_2=7QKc9A(sONQ87QaAd*4_n&9JWBDF%m0C;opsY)>4oSsF*
>O&m&T7j:?,%;Mck<(>LC"Lm\;#Ah;;EoVcDWEE5nni1Z^\PJ[<]J2+-u>k5DZ.?.hk`IN@<@rau!EgO
2"[ScbA();$T&8+WtJ/[]VI\!N?WG1X"b4*SHoS_)]/<n:N(*afn-^L)#Im_YT>^T4BdTD"J9hsQq6rp
>SkG0ItKR]:Js*P.[3rR*KE&,rrrp[Un!l+Jc(p\("3B8LiKmW/T'bkZ]$EchWdZsqpXfqnG[]_&jr.P
af7"*S8W?-Mtj;mLQ7X](crE\H9-03.nNI"P\+A^\2'=!l;5/FPGB@s?d5e[["#ibc#"[En.4a!\8g54
bh]JI^gdY=VlH;HIo;l)JetmR-iP=0(%fot07&[@Hfr=d]lgAnLe+P]c*dcC_5[/N*FtH*:8VcP:AY<@
c=nqr0c_m9\7^^/A>7?;doH/2cl&1LI+rTA=Fh'Dcn;^,VUmh.pKF=)+80T1!V?Cs(O7WS2"Zqs3VW3g
eU6->%\6^@_B"Wm!"WisBd6WG8%UoBLc,V(_%?B(qa_opm!Klt_luH[D45UjT)aI[-p]Y0O*F/X3i>K:
1P2C=[UpS?TJ&mdBgD),H\#.TQB$O]U^m-uhNX1V;9"XRF_#BoeONm!2%FWSTNT<VtR:f-fHXoe,N7J(
bk.<\_L>DK=<(CRqcW8h9M5rncJGGN)f.lMJ3en]B\Vmb-kcfJ+33]B">*7+8Jk>3iQo<d:q-h>cn\r?
nbuWkQ5h+&D';idsp;GH^76=4B<KcP<&<GPAka>Q9Oq[Ar\>n)I"l',PaF[sO[-F]H*gp\r*pIGXq3Q2
,V':3NbiG4fLGm[d.C"8ENc]@R?l=4TKRs%bc1B@jo3nomi7X6o2u:'nI[.V0+JGKKU1M,)-<7GSVu\E
h6X=8prMo<!?59O"Rb3_MO\jSGj?3Iq-qHtT#6PcRs94Z/.uT'l,_4r*lo^3q?1eZ-@@]oO\O,b=1a3I
kJ"n#I+mP4cu/Ve0tge,;GSVBXd;\'LkX>1NAZpMm$qV":*3#EXC9S`l<>=4]VrRnl3'gXBCWZ@.%S9O
4]!ID:+N=)(;fb:.MJ];=C`-TW^B*OS\gk7^Yc<KYIhCep[Whg)-mHJ?)p`uAm1PHs%Fs7Di\VIE?XBt
<n#jdjugD=^44Dm]I<b'J:1e+<FYP]p;'Xs_N1hfu'lHJ?)p_]*I-PHsW/_[3mP8]j,so'`Z%>5u?Y@W
*XemqqYc#&gmI:<L.h&(@l^PDXdYpfm`_e,'*8'72g?IrCf8qK\k'G?WSRHg(HX[7ThoKM52,r?o8,HG
+1Pkk"FpAe+8i/aJ'QS<DtE<V9F*OIkVAID<W\Xk2=iN?6qiI87pGBcfpS4Q2iSh=R:G2;t*,4g.HUHe
Z3<TD)L''CnnfRo<oZnM`EjbK9^sA(ll@e<8=r\'5k=4aEZf]3:Ei:7[m=1L4.%otHW2SCm-T\n>Qm)4
T-j\'5lhh"_C8F)+Lo4+1uncZWm%eU(':E*Am+g,UBRIlBQnB2\cd2K,\+l^VtNUqA)"cBLA>='9&+IZ
sAmeDgm9qlKR0W60Qes5#YPXL7)9n]Z[!Vp3MoH9\OBo']T.QXW:2.okuCqCVE:VFg`5gUsf:NjD06jL
hD9cEt0`CKn'iKYIFWH>fiIg#oM^g"#F:p$Zbh`YpAQ<7gqPGrMNiX`\sX;sI^e;q`9o9'tpo=8(<q#C
i3@V#J&EhPf%S*g7B6SW`f%IB9@pBn*00p2m/!HZd;QRaf*]bo:f:cXGhm\eF[1hp[HD')&_+;D37X^/
mDY25u(DRl>)(T?5U%2(*%-]!k\sTAHb%')K+ApKb?kgI_?j_n8jMqi%C)54aN!;tmfegF)X[;r'TAU&
495S`Q[HSN(Phf6q70(Z0R<`b@6:ns_$"m5np&r`tsh_l$BfA!ZO=S@\LLS+BA0HhDSXmG4D)3j3J541
ftm:<8N5h=I#Fpc#b_PaXti2g3^-ID2V]jF"R^pZBCfajN>5WJc8Io\YffH2;`/eD,JdVlcbBdrb?H%2
mWqHQH*%o)-e4q<Y&fqg;1DSb]/KmS-$_JTl+kI."rMGt3kM^Ot"dc?uPSmS-$_Jb-EfmQ3#0*VFRT%S
g4Y1S1b]2_"\0cK:.4mZd']eCa^]3,MZ-I%'K[V">TcTDR`\'=-@iBD:lQ[.P^)drkC3V;K'M\6#8kT&
G\j]71'`/\]fl)uTtaF/RNTRc091]71'`/\X+l5Q(ed\4c*\bAg_!]\B6oau^'2iXVqF.8.E!9JYkgj.
-BREd-$&OK%+K-COMonP01d\MMf-cIHh=PBcg%n0WVUzzzzzzzzzzzzzzzzzzzzmeK(XTN_6~>

%%EndBinary
grestore
np
340.485 254.307 mo
338.758 254.307 li
338.758 246.211 li
338.758 244.916 338.234 243.749 337.384 242.898 cv
336.533 242.048 335.367 241.525 334.071 241.524 cv
296.668 241.524 li
296.518 241.524 296.37 241.531 296.224 241.545 cv
296.224 240.695 li
337.344 240.695 li
337.886 241.018 338.376 241.417 338.8 241.879 cv
339.846 243.021 340.485 244.542 340.485 246.211 cv
340.485 254.307 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[25.5811 0 0 7.91702 84.6249 313.582 ]ct
snap_to_device
<<
/T 1
/W 643 
/H 199 
/M[643 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Q;6D1R&Hk?>e-GOnF<BD_0G]6D6+`SW-CIF\52pKfG?%\+e,0$WIf&MVzzzzzzzzzzzzzzzzzzzz
zzzzzzz*rF9uo/4="p)KaGs6es_9%S/@Zeu&U*Io2\G:3Da]%.hAT$t5k!4o\(H^FsqYic!Lr;XEf3H,
(E%R:Q^Jj%>/)q]4^0"qL9R)'f7S@PG;s62NEgqpb[@u&t)'/e(G6+[*gGm(X2HauLi#3kT:##2FAOR,
,Y*W\a_iBBp70(<Zml1a)0@FbmN]r01$^g"G+C['^[5+b20%C_GlS/du0!&2ksGFNri6c0>\h]4:Pk1q
01GPXG=%FY!ea`bhU%WlC+5Q0Ec6Itb6BUStWAqrJ-"M<d)>J6qLaZoa[d6cE*Z=qB&DQr_\Z)\mdgSN
2Z2<CJ0mV!a/H$Q34Bph-.jt,nfH[FT5HquX]s#9OAh]E;2k2&qPa?%ajD;5.//U_e[5>+(Mem-r]An9
fg4d"%_BuZ"@)erND8btA[LH?BfPs-_Ddb&iPesanW<&:ge0u'9&VKL3(C0?fnqKHV.q\[&04sSA%gt=
O7REkD'1U:@Bc^jd,mE@_mXeCJHFejM>RdX\[<r.2'=)2Et;I;K.;pEC4eP(2?S`W(RW2F?2g8&p/IO9
J$S?MTACT&bSiJD1-^2ff,lqY`,qmO4n)Fi5=rlo/hHf9tV\T#Q/ZV/l6cL+XfZ<ocDp)QbtZ+'B`eF9
o,oP[IQSI9A4GMP:FQsl_TFDa2;=b\_Q:X$.jLN_>?L:V![1ZPr[L"&l5ca<(`;_>Uqaj$@<p\(X-BB5
YQBB('#EYgU_2)Cl5)77orT5+1FfWDT*l.ebPmNeiFr+Yl2k*b)f`q.`.%lDf*D&nTlBWDA%dJ3UIF.I
/G\\3F[WENmql[:@sgifihmsp-2B's26T+*j_J(F8(2S7gff!ip"m5n+QgIrR3=j)(t4mUeo2UjF%-en
K6faISIjR63Np2o+PB(erBDr5]$p/sS)?eZWo>f4X/)etbNQ`GFLW<5>lqR<N%rcHt1X1fb6^?6ifF+!
hu`][(hU%FcQUumCMT%:1;]^;qinC6a\XgUFAFf2@_mEL[IUj\8!hUB'Rag70pl^uba:rAJXP36^N?0Q
cf5I?rOeU9:Kd[].[RG;QMrm,o28c,"$3gE]4%A25!Eq[rY#c!oo[gdPsc=UTFlE7ieiXDXW,I,"%CJ;
ur<DEu\Hs0%hfiu.F0ZscLS%],NQhY_HHNlr'[s<0fe=)tGgDQVDWu86GdJ(qu!IraMB2?%<dmiFUqQ<
"bqAbH=?@$O&o_is*ds6>i7mdac<(H6lgjM->cZ\4!'CP1n[i)<>60#&q4#h6bD:u)K^!sM[,+jT.IT=
FtF(i.?ReHp`D!-40jj$VJPL&Ol)e[u'dtk>lmNL-T\'Jg6jO8PrCA:dLhp,X'geQK2pcH+Ulm[.%g:,
`\no(%@920>;dEoet*IQ?5%XC2$WM,&Do2rEDVsFVXk+oV92i6>Ek1mClhq$7Ss6Q>lm<tlp54,DEL2X
ie53ZRs$r>Rf36>n/pF]@S\';IcSu8pjo\ZS@D=g"Ul$^T7hXn81S!mEMc-u@g:3,>7^4TDID0'TqkNQ
e$lYl'8f.9tb0e1KeZPYRG'DDT(Ep>gE/=Ce4S=B7j`c(M[<dhID@!3;11S$C];9q:G8)P(/hrUu'GrO
!YWKt#7C9'MRpBb!Hb+ZY1*(K"VSiPTko_Z9q3q&@pn$7!bIrh))^HGc%qCYuhAeo;@9[=\rjfJ1<SU>
o[%dA7%SQT1aM7ud-+o/hF1uI!Xpu^8=lj92tH+b`oQ8uG(Od]Q[J"ujXSR8,c<M%^P,*-[59@"MoGLP
B>erXtLr@L%RXSHLO\+f[+kFHp'ec,uKf%c]cHHq%^HX"e[pUAYVZL6Opom8nVLDALfbhm<RH(<RbE_b
65P/FBt8,ljnDgq<0m`_X(2Xa4`2LojqA'X<WddNf6qi&:,l-8\sS8;iP[s;?/Erg`/G43U6>t=bi1M`
W]pC7#aRrJ>_Znd!\TC[DB`lU8F171r9W;^#tnP.ZD4,qH'p?2A1RB^\H3HZ^@[:1N`WD;?(mk[bk[sF
[p2$<mAr-%1KqR9j:%O::75&]RI5,ljeiV2$'lW_&$l+2EfSDS\bD>tAFcgGN'Za*-iijX'4I+M+gm*f
cZJ'Mn,[]B!oeC9r+Lq9(Iqdp('ertQ4S'u[>;qR]uH[!2\RMp5a;01L`B7,>[gZPYAg@f&F(?t[YF%u
B2[rPfeE^%1>?2&/YXeYH#s5obQ?e`l%G,_=!e)q"7E(7GpDlRALD*./gds'6p3OYIRfek_VdAO[UlYD
nq\js8ao@]CU9-(A(gMtP?f)"XC:ATuSe]U]LQ*/HWi#^0T?96ijr--i#Q+qT?B5lSnmgf;TH;A&M1Zp
T(`p(4r7*];'A?P1m-hhH>\&W<kHC0t+H7l7AB(^4G)O5`g*.]3%6b_6+'m6nWhIL^MZSP;#BB@F?IST
cCR5*H<(2sWDO)K5N76Soo2gO/qb5>.Y>.lSiT@80WAtQbY0!I.p%_M3oK*L6,OiT11YJe/VIST4^BRC
?[KCbDP4^E\g(n3gL-bUes9>%n4SaC'+p"_=m*!!b9S7OKPf4#iAA^KG/H>1K>FWIH1=$NVI4=&gTc4+
sUCumHKf/$kXgA4A&d,=BhC!:L<9rWT2p28tpBKM8*pC2<)4S<6VY3YIM[.TR,@<Qh]Z`l+?p"?]bNH`
5(EsAO`QMN@4fCsGA>'`a#Y^6<9Z`l*Nn#m=k\).3:Z[e6"4.Ve;COE`5/NpHZSR(h<DVLLTI?+6NH!8
Bdhc?d5JWi)I]m9'EB58%&7d&>bMq`Dd<1fr#EB^@5k;,=a)`X*=d[t`!Xe5<NcFh]kgm[EQ^?_o-*W9
jHX'/9oI[ZZ:SB/8)cb$a=:]G8mpJs(jCX'SAhcj_Tj1AohFQTp89D8HC3?.pB\(CN%^ZG(BhE3UMgGf
#Z=Ef)"l0l4tk&tKHn<UE.TD&gQJ+IUS4L]E\X7tkSSk&IArl2QUHB2GLk@0LbgM;90n+eNDVpA!0o6.
%cHUuA(AmX`jXENhKJm"V%4n@I'mLaqiMJmigS(CF2m]u_jqHa&i[r])SH@K<<k@0LbGH(J/^J"=03jZ
:uT9SjuqnK/ge^#*fRp2\4#A.s.p;f=$pSYF6krIR,94"7gmARd6E8,i#l>os3T=e[b[o_#8op4GTQsm
on@=I(t\t@LOk3pb^-8PJlDc^J>r[gl:n&=STI.NpKG3,q+V=,(bU%tiRdI(/PX`_+%e![?;]9,1e]C]
F2Ia4.$h6\]sqZCGO55*&Z?2)hEB0TlbDu*c<G9cj*GNleCrL?m"^74cn!Ac_THfUa#qe6QcZUji&.^p
:F4#5^cDfJD@?HdZ>MOo!U^-?!@k@0Lbdrg/h_s1n%i(]iC^E'So]5-8]):)I5;q&9pf`OcY^)Kji6Im
sXhD'dgq5+)adsOZ6>OA;504m=Z78HWj\n)C[[H;i+7&OQYU[DEoR$$3o^OQ.[R<uTYoPUaZ:;afTe_3
tUN6lr"T'2E?B@ab3-DPp8oCm1\5BE08Qem_PcY;&+[T]0cKf@`S_\8T(p$CCVc=UUJDuP4Zqqpc3maA
_PqDf#^hH"Dj^$r/t]C839A\Fi3Sb!`HhsA*"oo+X,g?ME$7cSl?RbquZ`gqJ^mZVq-m^Kmrn=J2>h`b
O<*U0)cmR"M1<W0(LcDhbZF2)kT\<$*oI54UMrO/%5hq++QgLmUfUF!+0>$(@.qDkTgR*PZ]IH)ro"8B
o"?2'.]G("!rQ>`BMWg7a-:\Go:kGiuTSF')C]5?H8L[W$,1/HLbU6jBAdlEEQC"5"/5,VihdWIJ88)%
j(RbquZ`Z9F3mZVq-mLfDfq#8hBXEqmafs^(o;J4I-N-rpN)5_JiFl,15gM]?h^,G_-h';c1W1c5p:O<
uLS<5\rOBFrAX8:XlXujns[XI1@^'",P5$dcY?>c`RFrqs#1U<ku12Eh0<PJua*PJXNo=Jks30S9r]G'
jRgRD,b\aamX4j0DZID_)8Y[]W\)s;M<%;<6&cQZZTW'+mtX"E@oooAIP3QE.Q4gX&!c^AdmG+.<*qo2
dQq44nE\XB7/)mr3'oeg;DZI[Dd2eTYTS7hRXni:W<2a4?VVto/WDk(7d=_?H*dWLQ)UKqV/kPIj,WFs
J#?=MdUq6o\4Lu3qag$^c4g\-X*XZ44WSPctiOaEn\Yr.SihMD$VHhhd?krMo=4$'hc^EYhbn$[XSD_'
*d@qV(0A)n]1H[NLOTD*2^l++NrFh5jurJns6[+5%lhdFa?:#-sKn"1At[I0X`0(mPhWNF3_IOFgdUsJ
ZRr+Yjdc0r)h@o)>Fh]t@CSXkr>%XlR"Vl@Fcr(cN;IBUpU:HQhi[XDX=l*K4p4d-nWR!3mQ1[8Z;X)5
T83`l'fe(qXbr,17Jp5qQ5XjV:Dc,j+tp,;78]?b94Ct!O0k],4dG,P/lY]&kWI1N\WcXdnOjP8JLXEU
9jZdH*Rf/]V(;sr5-k',h!EJF,!cmh2F*Scm!gJ6"@k=K_fk1JP>.<fJn%6*_pB1UnnXjV9)G&tBW]oR
WgWO$q-cZG_aqE!U'9`J.`O<LED^/]J3NTAfa_l.d\W',RCGLN)N$0SQf3`GI1hYC4:\MTH5?CAHSmY[
I^kBf-^q52Kp%D.kMPl%8#^/]J3%HMeI4tCABTC:Ugc+A-JSLK(N/X'1-?7Tbas46UMA\RF-ZV1*fJNL
EgHEq>TV_PO,c-//\Dg(BXR/hSSO*,!#mbs?n>-b`]aGeUFeTgN9Ub`2BjUTIGR'-D:*n!()kY9(]I7i
toNma<sGB7uME(->^hqHn^GG85d2WbI=aM"uFa)nFZl;$]umF")DCo@3T)q^#EC0d.iqKB'/]Bs]Aq%a
*Vigs>;B=b7DZYut6HgUHBj]`;KNVhtc9`7_kPF]FiHj^!;E\H78X5>@LinFe?`q$_Kzzzzzzzzzzzzz
zzzzzzz!!'eArrk#WQ>u~>

%%EndBinary
grestore
np
.788083 .534234 0 0 cmyk
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /OFAAAA+CambriaMath
Type42DictBegin
[<00010000000c000c000c000c4f532f3288229f01000000cc000000606376
7420030315980000012c0000089e6670676db5b31812000009cc000010b3
676c79666a63f0a50000dd6000002a5c68656164fa71cec900001a800000
00366868656112c4257500001ab800000024686d747813b1108c00001adc
00005ff66c6f6361ce01c3db00007ad400003b7e6d61787027fd11b40000
b654000000206e616d65030148160000b674000015c370726570664ecf85
0000cc380000112867646972000000000000000000000000000304ec0190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204e00006ff420024ff02000000000000004d53202000c00000
d4670639fe39016118ef13b52000019f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200000590073104920556056403f203fa
05980000006c00780086008e0093007e000040718574737271706f6e6d6c
6b6a69686766656463625f5e5d5c5b5a595855545351504f4e524d4c4b4a
4948474644434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d
0c0b0a090807060504030201002c0118b0184358456ab0194360b00c2344
231020b00c4ef04d2fb000121b21231120332f592d2c0118b0184358b005
2bb000134bb0145058b100403859b0062b1b21231120332f592d2c0118b0
1843584eb0032510f221b000124d1b2045b00425b00425234a6164b02852
58212310d61bb0032510f221b0001259592d2cb01a435821211bb00225b0
022549b00325b003254a612064b01050582121211bb00325b0032549b000
5058b0005058b8ffe238211bb0003821591bb0005258b01e38211bb00038
21595959592d2c0118b0184358b0052bb000134bb0145058b90000ffc038
59b0062b1b21231120332f592d2c4e018a10b10c194344b00014b1000ce2
b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118b0002f
b00114f2b00113b001154db000122d2c0118b0184358b0052bb00013b900
00ffe038b0062b1b21231120332f592d2c0118b018435845646a23456469
b01943646060b00c2344231020b00cf02fb000121b2121208a208a525811
331b212159592d2c014bb0c85158b10b0a432343650a592d2c004bb0c851
5800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370b1020c45
3ab10200080d2d2cb0122bb0022545b00225456ab0408b60b00225234421
21212d2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d
2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c85158b00643
b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2cb1000325456854b01c4b505a58b0032545b003
2545606820b004252344b0042523441bb00325204568208a2344b0032545
6860b003252344592d2cb00325204568208a2344b003254564686560b004
25b0016023442d2cb00143588721c01bb01243588745b0112bb00d2344b0
0d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb00d2344b0
0d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c456a422d2c
01182f2d2c0118b0184358b00425b00425496423456469b0408b6120b080
626ab00225b00225618cb0194360b00c2344218a10b00cf6211b21212121
592d2c01b0184358b0022545b002254564606ab00325456a6120b0042545
6a208a8b65b0042523448cb00325234421211b20456a4420456a44592d2c
012045b00055b018435a584568234569b0408b6120b080626a208a236120
b003258b65b0042523448cb00325234421211b2121b0192b592d2c018a8a
45642345646164422d2cb00425b00425b0192bb0184358b00425b00425b0
0325b01b2b01b0022543b04054b0022543b000545a58b003252045b04061
4459b0022543b00054b0022543b040545a58b004252045b0406044595921
2121212d2cb0032520b0072587052e23208ab00425b00725b0142b1021c4
212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed592d2c4b
505845441b2121592d2c01184b52588a2fed1b212121592d2c4b53234b51
5a58b003254568b003254568b003256054582121211bb00225456860b003
2523442121591b212121592d2cb00243583dcd181bcd592d2cb002435c58
462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a1b212121212159
2d2c2045b0032546524bb013515b58b0022546206861b00325b003253f23
21381b2111592d2c2045b00325465058b0022546206861b00325b003253f
2321381b2111592d2c004bb0c8515800b00743b006430b592d2c8a10ec2d
2cb00e4358211b2046b0005258b8fff0381bb0103859592d2c20b0005558
b8100063b003254564b00325456461b0005358b0021bb04061b003592545
69535845441b2121591b21b0022545b00225456164b028515845441b2121
59592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2c184b5358b00425
b00425496423456469b0408b6120b080626ab00225b00225618cb00c2344
218a10b00cf6211b218a11231220392f592d2cb00225b002254964b0c054
58b8fff838b008381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320
d023b0102bb0044358c01b3c59201011b00012012d2cb0482b2d2c01b002
2510d023c901b00113b0001410b0013cb001162d2c01b00013b001b00325
49b0031738b001132d2c4b53234b515a5820458a60441b2121592d2c184b
5358b00425b004254964b00325b00325496468b0408b6120b080626ab002
25b00225618cb00c234421b004251023b00cf61bb00425b0042511122320
392f59cc21212d2c0118b0184358b0052546234564611b21b00425b00425
4a59b00e23442310b00eec2310b00eec2d2cb01b435820b0016045b00051
5820b0016020452068b0005558b0206044211b212121591b20b001602045
2068b0005558b8ffe06044b01c4b50582045b02060441b21591b21212159
591b21592d2cb0022546206861b00325b003253f2321382d2c462346608a
8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b0005058
b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c2035b001602d2cb0
024354584b53234b515a58381b2121591b21212121592d2c49b00e23442d
2cb0024354584b53234b515a5820458a60441b2121591b21212121592d2c
8a10b002435821b0301ac9181bb0401a18ed592d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb002435458b0462b1b21212121
592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b212121
21592d2cb002435458b0492b1b212121592d2c4b52587d1b7a592d2c2320
b000508a8a64b10003255458b0401bb10103255458b005438b59b04f2b59
23b0622b2321235865592d2cb108000c215460432d2c0146234660234661
23201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a23
53583c1b21592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b12601885158b94000020063b80400885458b2024002436042
59b94000040063b80800885458b202800243604259b12801885158b94000
080063b81000885458ba00020100000243604259595959595959b1000243
5458400a0540084009400c020d021bb10102435458b2054008ba01000009
0100b30c010d011bb18002435258b2054008b80180b109401bb901000002
435258b2054008ba0180000901401bb901800002435258b2054008b80200
b109401bb2054008ba010000090100595959b9400000808855b940000200
63b8040088555a58b30c000d011bb30c000d0159595942424242422d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d2cb0022563b0206066b00225b8200062602362
2d2c0020b200400325b0062649618b3812342d2c204569442d2c234ab102
4e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002256164b00343
525821206459b1024e2b23b000505865592d2c238a4a234564b0022564b0
02256164b00343525821206459b1014e2b23b000505865592d2c20b00325
4ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b00325
8ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003
254660b004252eb00425b00425b0042620b000505821b06a1bb06c592bb0
032546b00325466061b08062208a2010233a232010233a2d2cb0032547b0
03254760b0052547b0806361b00225b00625496323b005254ab080632058
621b2159b0042646608a468a4660b02063612d2cb00426b00425b00425b0
0426b06e2b208a2010233a232010233a2d2c2320b001545821b00225b102
4e2bb0805020605920606020b001515821211b20b005515821206661b040
2361b100032550b00325b00325505a5820b00325618a535821b000591b21
591bb00754582066616523211b2121b000595959b1024e2b2d2cb00225b0
04254ab0005358b0001b8a8a238ab00159b004254620666120b00526b006
2649b00526b00526b0702b236165b02060206661b02061652d2cb0022546
208a20b000505821b1024e2b1b452321596165b00225103b2d2cb0042620
b802006220b80200638a236120b05d602bb00525118a128a20398a58ba00
5d10000004266356602b23212010204620b1024e2b23611b2321208a2010
49b1024e2b593b2d2cba005d10000009256356602bb00525b00525b00526
b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba005d100000
08266356602b20b0005258b0502bb00525b00525b00725b00725b00525b0
712bb0021738b00052b00225b001525a58b00425b0062549b00325b00525
496020b0405258211bb000525820b0025458b00425b00425b00725b00725
49b00217381bb00425b00425b00425b0062549b002173859595959592121
2121212d2cb12501885058b94000020063b8040088545cb0164b525b1bb0
01592d00000100000006fd7161c046765f0f3cf5001b080000000000b9e6
983d00000000d630eee4f434ec4a16f118ef000000090002000000000000
00010000063bfe390161175af434fda416f1000100000000000000000000
00000000123d054400be0000000001c30000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000686007500000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004700069000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000034f
005300000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000004aa006a00000000000000000000
0000000000000000000000000000000000000000000005bb006500000000
000000000000000000000000046a00680000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000034e005d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000284004e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000fdc3
0000fdb40000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000024900c0000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000032500910000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004af005d000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004c600870000000000000000000000000000000005d3003900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000799006900000000
0000000000000000000000000000000003ae006904a3006903f800690000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000003ce001700000000000000000000
000000000000000000000442001e047a000703de00190000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000005d200a9000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000007310088000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000501008200000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003c6006b0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000004da008b00000000
000000000000000000000000060300420000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000007d8005c0000000000000000000000000000
000000000000040a0080051d008004570080000000000000000000000000
000000000000000000000000000000000000000005320029000000000000
000000000000043c00290000000000000000000000000000000000000000
04ba002105110019043c001d000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000005fa00a900000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000007af009900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000056c00990000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004210080000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000550009c0000
000000000000000000000000000006ac004b000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000008b7005a000000000000000000000000
0000000000000000044b0094057300940497009400000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000048b0039000000000000000000000000000000000000
0000051200210581002b047e002100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000005fa0095000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000033f0000000000000000000000000000033f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000025a00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000035200b403520026000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000>
<000000760076007600760076007600760076007600760076007600760076
007600760118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
011801180118011801180118011801180118011801180118011801180118
01b001b001b001b001b001b001b001b001b001b001b001b001b001b0023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b023b023b023b023b
023b023b023b023b023b023b023b023b023b023b023b0291029102910291
02910291029102910291030c030c030c030c030c03980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398039803980398039803980398039803980398039803980398
039803980398041704170417041704170417041704170417041704170417
041704170478047804780478047804780478047804780478047804780478
047804780478047804780478047804780478047804780478047804780478
04780478047804780478047804a604d904d904d904d904d904d904d904d9
04d904d904d904d904d904d904d904d904d904d904d904d904d904d904d9
04d904d904d904d904d904d904d904d904d904d904d904d904d904d904d9
04d904d904d904d904d904d904d904d904d9050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f050f050f
050f050f050f050f050f050f050f050f050f050f050f050f050f05390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
05c205c205c205c205c205c205c205c205c205c205c205c205c205c205c2
06040604060406040604067c067c067c067c067c067c067c067c067c067c
067c067c067c067c067c06d906d906d906d906d906d90717078807d307d3
07d307d307d307d307d307d307d307d307d307d307d3081e081e081e081e
081e081e08a7091209530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
095309530953095309530953095309530953095309530953095309530953
096409640964096409640964096409640964096409640964096409640964
09640964096409e609e609e609e609e609e609e609e609e609e609e609e6
09e609e609e609e609e60a6a0a6a0a6a0a6a0a6a0a6a0a6a0a6a0a6a0a6a
0a6a0a6a0a6a0a6a0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd
0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd
0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd
0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd
0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd0acd
0acd0acd0acd0acd0acd0b1e0b1e0b1e0b1e0b1e0bb00bb00bb00bb00bb0
0bb00bb00bb00bb00bb00bb00bb00bb00bb00bb00c300c300c300c300c30
0c300c7c0cfe0d540d540d540d540d540d540d540d540d540dd20dd20dd2
0dd20e260e260e260e260e260e260ec40f360f810f810f810f810f810f81
0f810f810f810f810f810f810f810f810f810f810f810f810f810f810f81
0f810f810f810f810f810f810f810f810f810f810f810f810f810f810f81
0f810f810f810f810f810f810f810f810f810f810f810f810f810f810f81
0f810f810f810f810f810f810f810f810f810f810f810f810f810f810f81
0f810f810f810f810f810f810f810f810f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f931006100610061006
100610061006100610061006100610061006100610061006100610751075
10751075107510751075107510751075107510751075107510cb10cb10cb
10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb
10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb
10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb
10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb
10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb10cb11121112
111211121112119211921192119211921192119211921192119211921192
11921192119211f811f811f811f811f811f8123612a812f012f012f012f0
12f012f012f012f012f012f012f012f012f0133813381338133813381338
13c214281468146814681468146814681468146814681468146814681468
146814681468146814681468146814681468146814681468146814681468
146814681468146814681468146814681468146814681468146814681468
146814681468146814681468146814681468146814681468146814681468
146814681468146814681468146814681468146814681468146814681468
146814681468146814681468146814681468146814681468146814681468
146814681468146814681468146814681468147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b147b147b147b147b147b147b
147b147b147b147b147b147b147b147b147b149c149c149c149c14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc
14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14bc14da14da
14da14da14da14da14da14da14da14da14da14da14da14da14da14da14da
14da14da14da14da14da14da14da14da14da14da14da14da14da14da14da
14da14da1504152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e152e152e152e152e152e
152e152e152e152e152e152e152e152e152e152e0000000100001dbe005b
00040000000000020010002f0086000009a41128000000000000002f023a
000000000000000d03880000000000000000000e006c0388000000030000
0000006403f400000003000000010018046e0000000300000002000e0486
0000000300000003002e045800000003000000040018046e000000030000
0005001804940000000300000006001604ac0000000300000007007604c2
0000000300000008002a0402000000030000000900460538000000030000
000a070a057e000000030000000b00560c88000000030000000c00280cde
000000030000000d03880000000000030000000e006c0388000100000000
000000320d060001000000000001000c0d43000100000000000200070d4f
000100000000000300170d380001000000000004000c0d43000100000000
0005000c0d560001000000000006000b0d620001000000000007003b0d6d
000100000000000800150d0d000100000000000900230da8000100000000
000a03850dcb000100000000000b002b1150000100000000000c0014117b
000100000000000d01c4118f000100000000000e00361353000300010409
0000006403f400030001040900010018046e0003000104090002000e0486
0003000104090003002e045800030001040900040018046e000300010409
0005001804940003000104090006001604ac0003000104090007007604c2
0003000104090008002a0402000300010409000900460538000300010409
000a070a057e000300010409000b00560c88000300010409000c00280cde
000300010409000d03880000000300010409000e006c0388004d00690063
0072006f0073006f0066007400200073007500700070006c006900650064
00200066006f006e0074002e00200059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200074
006f0020006300720065006100740065002c00200064006900730070006c
00610079002c00200061006e00640020007000720069006e007400200063
006f006e00740065006e00740020006100730020007000650072006d0069
007400740065006400200062007900200074006800650020006c00690063
0065006e007300650020007400650072006d00730020006f007200200074
00650072006d00730020006f00660020007500730065002c0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00700072006f0064007500630074002c0020007300650072007600690063
0065002c0020006f007200200063006f006e00740065006e007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e0074002000770061007300200069006e0063006c0075006400650064
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
00200041006e00790020006f007400680065007200200075007300650020
00690073002000700072006f0068006900620069007400650064002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e006100730070007800a9002000320030003100370020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020007200690067
006800740073002000720065007300650072007600650064002e004d0069
00630072006f0073006f00660074003a002000430061006d006200720069
00610020004d0061007400680052006500670075006c0061007200560065
007200730069006f006e00200036002e0039003900430061006d00620072
00690061004d00610074006800430061006d006200720069006100200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002e004d006f006e006f007400790070006500200049
006d006100670069006e006700200061006e00640020005400690072006f
002000540079007000650077006f0072006b007300430061006d00620072
0069006100200068006100730020006200650065006e0020006400650073
00690067006e0065006400200066006f00720020006f006e002d00730063
007200650065006e002000720065006100640069006e006700200061006e
006400200074006f0020006c006f006f006b00200067006f006f00640020
007700680065006e0020007000720069006e007400650064002000610074
00200073006d0061006c006c002000730069007a00650073002e00200049
00740020006800610073002000760065007200790020006500760065006e
002000730070006100630069006e006700200061006e0064002000700072
006f0070006f007200740069006f006e0073002e00200044006900610067
006f006e0061006c00200061006e00640020007600650072007400690063
0061006c00200068006100690072006c0069006e0065007300200061006e
006400200073006500720069006600730020006100720065002000720065
006c00610074006900760065006c00790020007300740072006f006e0067
002c0020007700680069006c006500200068006f00720069007a006f006e
00740061006c002000730065007200690066007300200061007200650020
0073006d0061006c006c00200061006e006400200069006e00740065006e
006400200074006f00200065006d00700068006100730069007a00650020
007300740072006f006b006500200065006e00640069006e006700730020
0072006100740068006500720020007400680061006e0020007300740061
006e00640020006f007500740020007400680065006d00730065006c0076
00650073002e002000540068006900730020007000720069006e00630069
0070006c00650020006900730020006d006f007300740020006e006f0074
00690063006500610062006c006500200069006e00200074006800650020
006900740061006c00690063007300200077006800650072006500200074
006800650020006c006f0077006500720063006100730065002000630068
006100720061006300740065007200730020006100720065002000730075
0062006400750065006400200069006e0020007300740079006c00650020
0074006f0020006200650020006100740020007400680065006900720020
006200650073007400200061007300200065006c0065006d0065006e0074
00730020006f006600200077006f00720064002d0069006d006100670065
0073002e0020005700680065006e002000430061006d0062007200690061
0020006900730020007500730065006400200066006f0072002000630061
007000740069006f006e0073002000610074002000730069007a00650073
0020006f00760065007200200032003000200070006f0069006e0074002c
0020007400680065002000200069006e007400650072002d006300680061
007200610063007400650072002000730070006100630069006e00670020
00730068006f0075006c006400200062006500200073006c006900670068
0074006c00790020007200650064007500630065006400200066006f0072
0020006200650073007400200072006500730075006c00740073002e0020
005400680065002000640065007300690067006e002000690073006e0027
00740020006a00750073007400200069006e00740065006e006400650064
00200066006f007200200062007500730069006e00650073007300200064
006f00630075006d0065006e00740073003a002000540068006500200072
006500670075006c00610072002000770065006900670068007400200068
006100730020006200650065006e00200065007800740065006e00640065
006400200077006900740068002000610020006c00610072006700650020
0073006500740020006f00660020006d00610074006800200061006e0064
00200073006300690065006e00630065002000730079006d0062006f006c
0073002e002000540068006500200047007200650065006b00200061006e
006400200043007900720069006c006c0069006300200068006100730020
006200650065006e002000640065007300690067006e0065006400200075
006e00640065007200200063006c006f0073006500200073007500700065
00720076006900730069006f006e0020006f006600200061006e00200069
006e007400650072006e006100740069006f006e0061006c002000740065
0061006d0020006f006600200065007800700065007200740073002c0020
00770068006f002000610069006d0065006400200074006f002000730065
00740020006100200068006900730074006f0072006900630061006c0020
006e006500770020007300740061006e006400610072006400200069006e
0020006d0075006c00740069002d00730063007200690070007400200074
007900700065002000640065007300690067006e002e0068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f007700770077002e0066006f006e00740073002e0063006f006da920
32303137204d6963726f736f667420436f72706f726174696f6e2e20416c
6c207269676874732072657365727665642e4d6963726f736f66743a2043
616d62726961204d617468526567756c617256657273696f6e20362e3939
43616d627269614d61746843616d6272696120697320612074726164656d
61726b206f6620746865204d6963726f736f66742067726f7570206f6620
636f6d70616e6965732e4d6f6e6f7479706520496d6167696e6720616e64
205469726f2054797065776f726b7343616d627269612068617320626565
6e2064657369676e656420666f72206f6e2d73637265656e207265616469
6e6720616e6420746f206c6f6f6b20676f6f64207768656e207072696e74
656420617420736d616c6c2073697a65732e204974206861732076657279
206576656e2073706163696e6720616e642070726f706f7274696f6e732e
20446961676f6e616c20616e6420766572746963616c20686169726c696e
657320616e6420736572696673206172652072656c61746976656c792073
74726f6e672c207768696c6520686f72697a6f6e74616c20736572696673
2061726520736d616c6c20616e6420696e74656e6420746f20656d706861
73697a65207374726f6b6520656e64696e67732072617468657220746861
6e207374616e64206f7574207468656d73656c7665732e20546869732070
72696e6369706c65206973206d6f7374206e6f7469636561626c6520696e
20746865206974616c69637320776865726520746865206c6f7765726361
7365206368617261637465727320617265207375626475656420696e2073
74796c6520746f206265206174207468656972206265737420617320656c
656d656e7473206f6620776f72642d696d616765732e205768656e204361
6d62726961206973207573656420666f722063617074696f6e7320617420
73697a6573206f76657220323020706f696e742c207468652020696e7465
722d6368617261637465722073706163696e672073686f756c6420626520
736c696768746c79207265647563656420666f7220626573742072657375
6c74732e205468652064657369676e2069736e2774206a75737420696e74
656e64656420666f7220627573696e65737320646f63756d656e74733a20
54686520726567756c61722077656967687420686173206265656e206578
74656e64656420776974682061206c6172676520736574206f66206d6174
6820616e6420736369656e63652073796d626f6c732e2054686520477265
656b20616e6420437972696c6c696320686173206265656e206465736967
6e656420756e64657220636c6f7365207375706572766973696f6e206f66
20616e20696e7465726e6174696f6e616c207465616d206f662065787065
7274732c2077686f2061696d656420746f20736574206120686973746f72
6963616c206e6577207374616e6461726420696e206d756c74692d736372
69707420747970652064657369676e2e687474703a2f2f7777772e6d6963
726f736f66742e636f6d2f7479706f6772617068792f6374666f6e747368
7474703a2f2f7777772e666f6e74732e636f6d4d6963726f736f66742073
7570706c69656420666f6e742e20596f75206d6179207573652074686973
20666f6e7420746f206372656174652c20646973706c61792c20616e6420
7072696e7420636f6e74656e74206173207065726d697474656420627920
746865206c6963656e7365207465726d73206f72207465726d73206f6620
7573652c206f6620746865204d6963726f736f66742070726f647563742c
20736572766963652c206f7220636f6e74656e7420696e20776869636820
7468697320666f6e742077617320696e636c756465642e20596f75206d61
79206f6e6c792028692920656d626564207468697320666f6e7420696e20
636f6e74656e74206173207065726d69747465642062792074686520656d
62656464696e67207265737472696374696f6e7320696e636c7564656420
696e207468697320666f6e743b20616e6420286969292074656d706f7261
72696c7920646f776e6c6f6164207468697320666f6e7420746f20612070
72696e746572206f72206f74686572206f75747075742064657669636520
746f2068656c70207072696e7420636f6e74656e742e20416e79206f7468
6572207573652069732070726f686962697465642e687474703a2f2f7777
772e6d6963726f736f66742e636f6d2f7479706f6772617068792f666f6e
74732f64656661756c742e6173707800b9002001feb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f0b40918014a20b801efb40918014a20
b801eeb40918014a20b801edb40918014a20b801ecb40918014a20b801eb
b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918
014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20
b801e0b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1
b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918
014a20b801ccb40918014a20b801a0b40918014a20b8018fb40918014a20
b8018eb40918014a20b8018ab40918014a20b80188b40918014a20b80187
b40918014a20b80186b40918014a20b8015bb40918014a20b8015ab40918
014a20b80159b40918014a20b80158b40918014a20b80154b40918014a20
b80150b40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80136b40918014a20b80130b40918014a20b8012fb40918
014a20b8012db40918014a20b8012cb40918014a20b80109b40918014a20
b80107b40918014a20b8010540ff0918014a20f40918014a20f20918014a
20f10918014a20f00918014a20ef0918014a20ed0918014a20ec0918014a
20ea0918014a20e50918014a20e40918014a20e30918014a20e10918014a
20de0918014a20da0918014a20d80918014a20d30918014a20cd0918014a
20cc0918014a20ca0918014a20c90918014a20c80918014a20c60918014a
20c40918014a20c20918014a20c00918014a20bf0918014a20bd0918014a
20b30918014a20b10918014a20af0918014a20a50918014a20a40918014a
20a00918014a208e0918014a208d0918014a208c0918014a208b0918014a
208a0918014a20890918014a20850918014a20840918014a208309180140
3e4a20800918014a207f0918014a207e0918014a207d0918014a20620918
014a20510918014a20500918014a20480918014a20420918014a200e0918
014a0f41630441001f0441002f0441003f0441004f0441005f0441006f04
41007f0441008f0441009f044100af044100bf044100cf0441000d005f03
ea0001008003f4009003f400a003f400b003f400c003f400d003f400e003
f400f003f40008002f0433003f0433004f0433005f0433006f0433007f04
33008f0433009f043300af043300bf0433000a001f0434002f0434003f04
34004f0434005f0434006f0434007f0434000700cf042300df042300ef04
230003000f0423001f0423003f0423005f0423009f0423402305f0e201b0
fdc0fd02c0fdd0fde0fdf0fd04d0fde0fdf0fd03c0ffd0ffe0fff0ff0470
410a0425000100c0042500d0042500e0042500f00425400c04e0bef0be02
e0bef0be020f41110421003f04210002001002580001000f025800e00258
0002000f040a0001000f0408b4010f26010f411b04070001000f04060001
007f02170001000f029c001f029c002f029c003f029c004f029c005f029c
000600df029c00ef029c00ff029c405303dfe016171cd4d516171c7b7c16
1b7b7c19d1d216171c767716171c6d7016171c6c6f16171c6b6e161b6b6e
7f721a747514151c676a14151c666914151c6568141b656885711a197316
7a431921794319211941310292009902920002001c0292002c0292000202
99029a029b000c028d028e028f000c028a028b028c000c001b0299008b02
990002000f0299009f029900bb029900db0299000402a5028b02a7000d02
9f029a02a1000d029c028e029e000dffe8028eb2142339b9ffe8029ab214
2339411a0282027d0008002b0281027c0005002b027e027a0004002b027d
027a0004002b027a02570005002b027702670005002b02670257b2052b20
b80270b21b2039bd027202570004002b026e0257b2042b20b80257b33133
3909414102710019027100aa025700b8025700040069027100da025700e8
02570003028402790006002b028002790004002b027f02790008002b027b
02790008002b027902560006002b027802660000002b027602660008002b
027502660008002b027302660008002b026602560006002b027402560000
002b027302560000002b026f0256b2072b29415002560001008602560001
025d025e025f000c025102520253000c024e024f0250000c000b024e000b
0251000a025d003b024e00590251007602510075025d009b024e00b5025d
00d9024e000a0269024f026b000d0263025e0265000d026002520262000d
0269003c0263003c0260003c025d003c0251003c024e003c0244023c0005
002b024302110002002b0240023c0005002b023e02110004002b023d0211
b2042b464115023c00010046023c00c6023c0002023b02110007002b0239
02110006002b023702110004002b02210211b2072b20b80233b213163941
16022f02110004002b022e02110004002b022d02110005002b022c021100
04002b022b02110004002b022a0211b2052b474142021100010005021100
a502110002003b0233004b02330064021100740211000402420210000700
2b024102100005002b023f02100002002b023a02100007002b0238021000
07002b023602100007002b023502100007002b022002100007002b023402
100005002b023102100005002b023002100007002b022902100007002b02
280210b2072b8a416e02100001001a021000b90232000202170218021900
0c020b020c020d000c02080209020a000c000b0208000b020b000a021700
3b02080059020b0076020b00750217009b020800b5021700d90208000a02
2302090225000d021d0218021f000d021a020c021c000d0223003c021d00
3c021a003c0217003c020b003c0208003c0153014d0002002b014e014d00
02002b0156015c0004002b0155015c0004002b0157015c0002002b01da01
d4000a002b01d801d4000a002b01e501e00005002b01e101e00005002b01
e001eb0005002b01ef01eb0002002b01ec01ebb2052b40b801ebb2090a39
b9ffc00104b2313139b9ffc00104b21b2039b8ffc0b4c71f203940b80103
b22c2c39ba010301000100b21f2223b901030100b3c01e1e23ba01030100
0100b21d1d23b901030100b3c01c1c23ba010301000100b21b1b23b90103
0100b3c0141a23b901030100b3800b1323b901030100b340090a23b90102
0101b340508b23b901010100b340508b23410a01020100004f001f010101
00004f001fffc00100b2505539b9ffc00100b323233940b80100b71d1e39
40e81b1b39b8ffc0b4e724253956b80108401301ddd8052b3bd64bd60240
b00b0d39c1c0052bb8ffc040379f131339409c2f30399c9a012b9b9a052b
9a91042ba999042b9992032b40c52c31399291032b889198910209631863
c7630320630d0f39b8fff0b4471f2539cbb8010a401c019895012b379e01
9695022b1897262a3917970110953f4039d99501bc0136012c0003002b01
30b2cd042bb8012fb2cc042bb8012db2cd032bb8012cb2cd042bbc014c01
4a0003002b014ab27f052bb9015b0154b2042b0f41190154001f01540002
018601880002002b018701880004002b018901880004002b0188018f0003
002b018e018f0004002b018fb385052b3f410c01a0000101ce01cc000300
2b01d201cc0006002b01d101ccb2062b40b80107b2323239b80107b2af03
2bb8ffc0b3de1e2039b8ffc04011dc181a39c9ca032bcac8042b40c82122
39b8ffc0b3c8151739b8ffc0b3c6242539b8ffc0b3c6161a39b8ffc04023
bf2d31395051032b40511b1b39e5cc042be4e3032b40e32a2a39cdcc052b
40cc424439b8ffc0b3cc272739b8ffc0b7cc171a39c2ea012bb80109b2da
032bb8ffc04033ea252539dfea0140c41b1d39b3b1052bb1c0052b40c03d
3d39c0af042bd3af052baf7d052b20da121639c5bd01208e01108e01b8ff
c0b38b363839b8ffc0b38b272b39b8ffc040328b171a398c8d052b8d8a04
2b898a052b8a7f052bf4ef032bf2ef052bf180022bf0a0042bef85052b40
ec32343940ec1b1d39b8ffc0b3a0515239b8ffc0b3a0454739b8ffc0b3a0
383c39b8ffc0400ba02c3139dfa001a080022bb8ffc0b394313139b8ffc0
40d480181a39817f012b7e7d052b7d7f052bed7f052bd87f017f85251f88
85012b8785012b8485052b8385052b298539854985036685014685013685
012685011b37151836151535151234150f33150c3215093115063015032f
15002e15f9fa0f20f930f90226270e28270f2a2b0e2c2b0f22230e24230f
1e1f0e201f0f00051005023c3d0e0b3c743c993c030f10110c090a0b0c06
07080c0304050c0001020c0603641f702a010f2a010b0f4b0f020b003b00
44037403ab00db0f060b000b030b0f3b003b0959035b0976039b009b0999
0fd9000cb9010b010c402a0f1b011d0d18071a0d1510170d1204140d2ff9
6ff99ff9a0f9cff9d0f9063ff940f9aff9b0f9e0f90500b8010bb22ff92f
ba010b003f010b403004fb3cf93cf73cf53c2c3c2a3c283c263c243c223c
203c1e3c1b3c183c153c123c0f3c093c063c033c003c035050335401b012
4b004b5442b013014b004b5342b0332b4bb8032052b0322b4bb009505b58
b101018e59b0332bb00288b8010054b00488b8020054b012435a5b58b801
19b101018e851bb900010100b04b60858d592b2b1d42b0644b5358b20380
801d4259b0324b5358b20390901d4259004bb03251b01b23422b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b73747573742b
2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c4560442b2b73
2b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b2b2b2b2b2b2b
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b2b2b2b2b2b2b
732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b
2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b2b74742b2b2b
2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b
0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b2b2b2b2b2b2b
2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b0173742b2b2b2b2b
2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73742b
2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b101322b4bb0505242b002435c4bb064524bb01e505b60b01a23424bb0c8
524bb036505bb00e23420073747373737373737374737374737573737475
7373747373737373b100024354b102024354b1060243545b5b58416301fe
006401fa006401f9006401f8006401f7006401f6006401f0006401ef0064
01ee006401ed006401ec006401eb006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401d3006401d2006401d1006401cf0064
01ce006401cd006401cc006401a00064018f0064018e0064018a00640188
00640187006401860064015b0064015a0064015900640158006401540064
01500064014c0064014b0064014a00640136006401300064012f0064012d
0064012c006401090064010700640105406964f464f264f164f064ef64ed
64ec64ea64e564e464e364e164de64da64d864d364cd64cc64ca64c964c8
64c664c464c264c064bf64bd64b364b164af64a564a464a0648e648d648c
648b648a64896485648464836480647f647e647d64626451645064486442
640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00>
[10845 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 2948 1829 <00010087fff004a80565001e001d400e10101402020591001c040c911413
003fed3f33ed322f11392f31300103232626232202021514163332363637
330306232226353412122433321604a83c60085b658aed8a6c704b706230
603dbbcdbcc469c001069d5b9b0532fef17b6dfeecfe3bc298902d6b60fe
e434d8d09301800122981600>OFAAAA+CambriaMath AddT42Char 
2 4644 1878 <00010019000003c503bc001b001f400f1b0e1b0e150608950f0f14159502
15003fed323fed321139392f2f3130010321270136372723220e02072313
21170106071733323e0237033d3dfd2c130223743606ea3430303722593b
02c713fe238b6606e23c403033260119fee73102768538070e2345400107
32fddc9f6f070d24494e>OFAAAA+CambriaMath AddT42Char 
2 10676 4666 <000100b4fe3c032c05a5000d0011b500070b0a0304002f332f33012fcd31
3001101217072400111000251706020161e1e718fedbfec8013901241bea
e101fafea2fe3a4d4d4d01fd016a016901ff4d4d4dfe4100>OFAAAA+CambriaMath AddT42Char 
2 10760 4667 <00010026fe3c029e05a5000d0011b507000b0a0304002f332f33012fcd31
30011002273704001110000527361201f1e0eb1b01240139fec8fedb18e7
e101fa015201bf4d4d4dfe01fe97fe96fe034d4d4d01c600>OFAAAA+CambriaMath AddT42Char 
2 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>OFAAAA+CambriaMath AddT42Char 
OFAAAA+CambriaMath /CharStrings get begin
/g1829 1829 def
/g1878 1878 def
/g4666 4666 def
/g4667 4667 def
end
OFAAAA+CambriaMath /Encoding get
dup 32 /g1829 put
dup 33 /g1878 put
dup 40 /g4666 put
dup 41 /g4667 put
pop
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath /OFAAAA+CambriaMath findfont ct_VMDictPut
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 6{/.notdef}rp /g4666 /g4667 214{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [13.8189 0 0 -13.8189 0 0 ]msf
302.334 267.354 mo
( )sh
311.258 267.354 mo
(\()sh
316.993 267.354 mo
(!)sh
323.972 267.354 mo
(\))sh
.770748 0 .91931 0 cmyk
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDBOTA+CambriaMath gcheck setglobal} if
2 3320 1849 <00010069fff3078a0555002d002440132926a627031b03041f0ea60c0319
06131f0013003f323f333fed12393f3fed32313005113437230123032e02
273721070e02151514171316150733013311140333013636353427372107
0606070103c4090afde99d2f041b2e2a0b01a10b2d3314010901010a0229
97090a01951733640b01990b2e5446fda70d02dcb2c1fbb1045853582806
3131032f514a221213fe792baad10472fd65a5fece030f2c772b54103131
065981fbaf00>ZDBOTA+CambriaMath AddT42Char 
ZDBOTA+CambriaMath /CharStrings get begin
/g1849 1849 def
end
ZDBOTA+CambriaMath /Encoding get
dup 34 /g1849 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 /g1849 5{/.notdef}rp /g4666 /g4667 214{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [13.8189 0 0 -13.8189 0 0 ]msf
126.528 296.979 mo
(")sh
140.139 296.979 mo
(\()sh
145.943 296.979 mo
(!)sh
152.853 296.979 mo
(\))sh
266.059 310.412 mo
256.869 310.412 li
256.869 296.8 li
275.248 296.8 li
266.059 296.8 li
266.059 310.412 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[10.6621 0 0 7.91702 61.9646 281.277 ]ct
snap_to_device
<<
/T 1
/W 268 
/H 199 
/M[268 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Q95Yb)$q3JNJ()NT$ZLTo-?W;lo[!`45TV1856(Z`zzzzzzzzzz!!!#7;#`.sr:40abl6M[^"?'@
:>5_p]GJ2ZgemruO8!*BQ2>=rn*s`N7PFU_06U7,X7lQ7n&8&oU6kU`-[O1`Ha/e"4gk=aGV=6F@ScCk
4l2*&kf)F[s-C%d,*uX69eYGVMB,FGJ%^AT4.<VXH3&>3Q!V8;rCksq^#3u_pG6[don(Xuh9goEMmlkQ
?SCWmID^ANDn]Q)V>G`7ir4>=TM,%XlG`_tH9mncqpgW%oC[\Fh7'F$cfXNs*P-/j0:pG?$bk2?[sIRl
^0^<:m^q#-kO\@u07CBpC&>(MS450'dgJqBjZ]R/^KtlBYP0bgs7Lu-I(bGPql^g+U15"gp0TI4KjMEi
(S%.6&(C5Z00"MheBeTOFm`Ykrp'_8d#/fg_+DAt^U3sk$VmK6cfbN[>J5Atql^g3]=NVBJ!FsJL0i6/
q\FDN.c9e+]qAU(/ai+.^?$;[6+?8dgu5;]b;]'FDV_e3_cQZ"Ds.A\\o2SDYOX:&cjRF-hr5,Qj]fHm
(NeuW`>u\8[sUOrkgk0?4+*<3q1`3pZF'S^$Wncns7HHE8_\a.J9B<6?S>fX[/JSa==7tco`E]9gOHne
Fjftj04:?XrRVEZ-Z/nV!nKrtJ%^ATde7$$@%F\'f*b>rFZ7d`eShmB^0]0[qel)dfmLK+6hfF%`O#Ad
6&4m?eVe)3on!\0GH2P+k3E0k]'iZQT$>jp3cs8]?9F^\(NelT>J58>?SCWiICFOmCqa6&iJX8nf`1Ad
?9MXKkb&abZh8oLH;Qn201_oUos==C<-hD+>;&OD(\P--JlI%n5?fd3V&/g2on$.h;*S8<8>R-qZh8oL
H;Qn201_oUos==C<-g9[?8.XNbbGtJV&/ae"]O[)4F4hCH81Ie0U5tgUDHV#(\?ho;sD7`HGNR,0ooWp
Q!V\0(JLYAoB6?Vl,>c2_,P_8O'XN*?Hf/\9ViQskQOoL`B8I_<-g9[?80q%?<mH`]AI-*^O])-HZA6;
o`E^mMg5qa".=>r`LRkQGF%e]aJ0RCV#1_nSCWT=,lJLam*^eRF*>=%[,462;gP^4`8:]!IGKgPV)Amf
9&BTWs$o-3hb7uhqYk76e4ICU]mr0.2kUs`kCaf$$E.s]*U![V38k@S!c"6G$T\=WST5B)!UlS")nH"L
zzzzzzzz!!!9"&&B[e1&~>

%%EndBinary
grestore
np
321.213 310.412 mo
266.059 310.412 li
275.248 310.412 li
275.248 296.8 li
275.559 296.8 li
275.748 296.872 275.945 296.905 276.138 296.905 cv
276.34 296.905 276.541 296.87 276.732 296.8 cv
321.213 296.8 li
321.213 310.412 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[31.8369 0 0 7.91702 67.2559 281.277 ]ct
snap_to_device
<<
/T 1
/W 800 
/H 199 
/M[800 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Rm;=2[$38G$s-MTC;/Wb/Uc\NP`Y^[*o"UT9R5,K;T76h@zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzz!!(qks8IL:rq=qI!!(5bCHbi\,M`0E1C4$]bd(_:0Rj'&!.R*m)n\6SQotF5W.P(D(Hm,XZ3NWbYL
H_J&:j2m*rp<;R6B%g!4pnW%J61pVR\a3W/pEdGm3@eHN:ud4aX,kn<f_toBj[p2#s!hCA(ISiHOi!cF
,MfeGs!?/+lZ>K_Llti*<m8ZYBr*rYoIgQiOm*Q.P:']Z543c?&"3EG>q:J&'ssj56u!Kt,"ce0d5:q;
Zb_&,;W@r4@bELb68/I=ee9jCIBM2h/V=mdPX%E=cK%Sf.dq3-FpSAY&VoE$BN$[`CFa0g&6kJhps!@W
qchrda[siS1):+NEmj2%&ncp:T)W]D2Q[F,+ZiJ%urO.*,un0Rm>Mi\R-7C2Bp+iE`0f+NEmj2%&nbpU
]%kqhk!;pe8;2a.V.T5WiqBNe&%bF4;VZOkhg)pOK=@`osp4W/K?tV;gc8/8gB+JJc:Ge0rD#SU9&ghl
<8&3d)8'@eP/J]Xe`.gS/1#`pas*$MHP)n$;i)<P;j`r$p48m.XD+FYs'ppLMe]i,<?ElubX5Phkf1lk
?/S=.q6Y^R#G2S&o;mA9Y-UISuqKO-=maeU(r[Np+/,eA^e2^&%#-qY>US&I\,_f;MOXn"cO'@fO[+&\
WCB\sV<g='f0h_0rBE+hmG,2%!f`ee:J7_o_(%rV'C7mbo\"Y/K7BX(!9]n/aFoi^EN.n,3'=>gKJld<
ernMqL7@e^^'I4E`#/iX4;9;%P65a'S`E]:NMFm>0W26=%h'j/]?.`8NHF$hD@bL_l=`YP_^;SnHW7ke
/Lr`U#e&ip'8iT&Y8c%_2^hXNn"N^P.f\Sln:PpT@=3:O8<8qSSrDid#,HfM=]I4tC^?PhG)bhiD=I5`
b](=?Q<Um,eeh3VADUafEm_%mKBP4a)6<bo^KE-iPA4p\f8aZNm$hoa7!'5WpXcl7;\7,Bkp714!jrkA
7jG[u&.$YF]+VW%P\0T=EfY=7>=/3Kokld<hoOBCfuM9hbOBrVXm)h2>'9d)h,)P*prncc0J/#IfPH(d
N9ED*\^$h"_udOdU]icc5F$#O\'$(HhhIaR6a>0BhE<SWD!UbT)Su>CAMuDo$kNihBM)T<e@_kmKOSES
mP^,;TS"pJtYHjBM,c.<3`c^jXo7p[eX>XhO8)F!EIGU\@ercK%(V]?[\/0>MY7qsWbWW]U0^B0KDhhP
\A@1>dW&3lX\)!3aN4^S```XMR-HI(&7P:QG<O^&a:;M3!)dhO!&J:L?q$KmTEeCsdU%*;><>s6!@AOZ
ifs3:UlfccbV"&'q1pa3>^mU9Ar>[2<K!*2f;I-E3T/eXmp)WH?2*+7,Z0HsVLdR5nZHlFC*sq;II$pH
.\&^S>_'c@>NK*;[nBSJnETl3FOpopi/`r:$3+G<>Dc+5K.LkJ-k6#/0/7:5RMX2$:ou4b'Ls5MQol\$
LF3aBg&Os4*GlkW<.8)6<*biVg[)WopTI6rstE41c;blm\\#?[^%opO(fbG\,J2miB^*+eLid!PXKghI
cKcOo7^jri7]_oV(`1N`UBUn?/IV%_:ES%.I9X[l:ohM!R!no3ZpfV&t+]k;i[oe03."S,kfBIttB-Ku
gtQ3rd`s4SmM#Xb^2)^3dWA98@o`E!H(OrB8Ho)^>0?kknLhEp-<&GpdL_q<a_>D]Nl5qX_V&*T-#G*[
7m+M66ko9FcL92;,OOUTOX*FJo3\c2_.ae!\Nrrog8#/t=,4L@FWjM;d.#S%j*F#p%=,Cn8;pjptLlS-
LF`Sgh=YGhMQ4En=[G-"\1C^g,^\>39lqmp5#qFAXn#:6XLTGusOAhl#Sm^S4BF3h1c3]%+44kD\90au
eg[EXnTd]BAa6iaol/9+JV/9?]GeJXJRM[ERfmhRgolW35^i5ET9Q^T;Wqaba)AM-$$b0Mg<3QMI&uHW
PIteQ'?`-dlAp\+:VEo&GT[n`k-)ApL:d<Oq"TcPaE?Q$6&mDu+d+Wr@26cB_^<ThE&0S:`iYX]\ZlGN
Ns9mp5#q<98HJ6P%`)mQT?f47DGIY:f!GL+Dqsb5KV5cKMsB]Ru)hbN%fSqTJ<-/\1M4:9j)+(4*SrX.
o%VlJKk1_s"eaQoMhAEQ#9"h0lZ,B"as<X?)o+^/ia_W;F:)G;JhEH>bYfL@9@<EU>ESQaYDG=*9C#Vm
Fb)e[l`B^K:GQAfaG1Xi@I*)]hdkqoe?*/c#'uDR&JK(AbX`:S[@PlJKk1_s"eaR'h=ZpCQ*Y14*b/IQ
aH1S@Y8HhQGY]W;F:)G;JhEH>bZQ*T-=6`4%u"mp,GL6ao,+kq(%dreP(`W57i*QP]gm3nF.&B46gEmV
%s_A&[/EQJK;?60.q+2R*E@Ff[mbcGL(Zge[Nsq4kMAGCZ=((!+h2[WaeDF1cfXboc)/b')VDr[+L-QE
GADgNf1HeU)$00Rm&eE>SD2GQM$Zet7t8Jm6G@k)YBTmfOZM'$/G-Q?PG)ggg=;IoNc7/r9I9iWs)Y>'
miP$Z7\KQp3(R3I?S^n&,diX`OI/H7l_Hr*fT',%L?9%djup@(4Fh]Bd#c(A!=WUOj6LeI8aLfE"'VYM
#Jm#2aQk59cL[EikiLbTQ5-)mE98HJS7!E/XN:IrDaW^5,q.%'kVT!P;%(e"+ehhjH_"pJu'IMjtC'+P
2GdYfh\<h>(mVSbXL[Dme`**OC;7j;P9)G*l*q]:TVJ1OnKSXk*Dek=f7fH(R%sdAGFTmcT5kbTHY-X#
9q!RK^nXY7i-'g6A&]rI"+*q'1B-[H:Zm^FD_+qc>"+5bpuZGet?W/+Z:1hU?8b$+%[0B:25*J1/l]n<
A"2-hBk-hNMa"8[HHpB:;4nJ1/n3mt<L6=6>SA]r0GN'5*@@cSgKE!"gR/h'qN?:Zd`9]r0DMX)l=aR%
4/'fu*tpD.:b\E_cDPr/nbgUj>sNp/pjth2)<>g;I/Vl)aBrr/nbgP^68Fp@qVSH$9i*@&9h[G1q6#&+
`<jhVIMBMRarf%TT,_RMZ%*9WkSJc3o,h5P"R:>]2+<*FEqK_eRZH&$.M!Y"h)8Qp90j]qX\m?>hlr^!
g+bR!a'bNTp+XigJa9o1.$]PNS"PkO*SlG>14ZY_H=Bo??]Zq'0M?M=\cP1Nu%;.jgi*=@3Pr0_O4/re
T=@HQW7;PhG*GKJPeImC^4Qdqe-Ea_(kM8)2r7HLY]ja&ga8qq\XN!nU/LRGU_'5I6bB*rfQtr,K$-F3
!NXrQWi5s"Wc>^ibk,jXl\B%TDMN.s::&hApD!eSe!DF$=C)q'V^J\7TKH]P%*:+mR@VrnV490<-D6Eg
BICG%H%s53G!S`a[A!UPK9k9WX;9L]Psnh>,U9]=R`bjnZ'LV*f*VNc,^Ij"^)Jmgp#,nu_[Y$m=upn*
&H"f8?n6(*2"eVT$N&p`L(92`YlI35C<JHQUeMmTe-o3`U8a4.@"\>rfDnG.iIlWoc\0F&e,%6p!-T:0
Gt!3mE[e:,"8#fm2:_5mNZr+hIrK'FT_?jmHdEjfZ8b>T_J@(mEsFSYoa/<7W?+ZKo;?nUN%VhYlf2gm
RIKl[ubdDc6M=o<uPgW]K6,Fr`Os-4o.l]:YXX4*.uKI5iCYh+`c<G"u+G:ef"-T3V[sN!Vn^ErWIeF'
&?aXq@SN\t_jebg,t*$S(CepTs2$M(sPe=)oEF5Bl4'pAWGh]S#Jr`A>+I<*`<pa*XFa#>U6dXEGlpVW
?d:ca?ZYG>c\mQtCi[.k[d!gO3-.@#qA!0Hp0?54^k9^SfOTN,/-r][DDS]%hEc!;<pk%hnN8dod`[FO
gkaA"2<3T=CPX%X25"J3C't`IsbM<]_Xu0pDB]aR9$"'X1oqHr)%qXVLFtG8"a_kHeacIWngI5<rLp$2
BKun7,qGC@2PXSN7#2UUP\GMuWic%DDFE@KZZ2CZqlB'-dJW=@7$*Ql#i(^`%Oba2A5`!8,9g!<<*"zz
zzzzzzzzzzzzzzzzzzzzzzzzPjgok[#*W~>

%%EndBinary
grestore
np
276.138 296.905 mo
275.945 296.905 275.748 296.872 275.559 296.8 cv
276.732 296.8 li
276.541 296.87 276.34 296.905 276.138 296.905 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[.756125 0 0 .159136 72.7079 289.035 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 4 
/M[19 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!~>
<~TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0R~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
275.248 310.412 mo
266.059 310.412 li
266.059 296.8 li
275.248 296.8 li
275.248 310.412 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[5.37084 0 0 7.91702 67.2559 281.277 ]ct
snap_to_device
<<
/T 1
/W 135 
/H 199 
/M[135 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0O99'rQ$jBJrJ($%Vn-4lfDO2VHUoM]@1e[V+DO4]`zzzzz!!%Nbrql_+f)BqS_n3C9I(rJMje]F,
mj8ud])$<ND^Q?6b0Iss%sj?IhV"$LOZrC[(OWOSc",ic]=o.-]r8Cr(K^KV1icA0B=Eo3OGt<*+rf,s
.2s"CFh<8<:WZ)X>]_tHkMMtJT'EqQNSda];gl-\nX3Y'7`8W`rMr`7*AUU?:jo7RZE^EV2QHXu3AZ#`
gANq[\JUm2bF.$ne^!oG\<#H%F?).hXP32.;0T9\QH4B?:=$po\WDe6ofM8EA=gl2R82!rFtTNHE->UA
aJg3U-;h+Nc64-Hok/W1eB?"RQ.hY+h_)e6p\;53D"Oh/>G&u?'tLhP5LWoE&QL4DABg>&0%p$Q/##Lg
DoS%`RI6B#ec4OkRrN#:9R"Y!Wc#AW1/k&3ml"Y;]k*s_r?s2RJ]uq\UK5>%K5C1\^M;o?j@[*ko4=)E
\6NR+N>gVonTm!LD!W;a[Cs3/q['h.9/cLTRL@f1NKr0dEn:'1m'`ou2PRr&eScoV0imaX[:\SXZeHt_
39/6L[]2tY,46qTDV$\NgStb:Lq9Xcg)\M`DQBeD&U@H?ot-c_h,_Y;)/!Qj<L)6n^8pH=S^,GsX/`If
EE<l9s(un^5LWOhHM$(->NRlQJo&AfNH9F7gasulZE^>%Y2(:C+WGcSn(;L>h.<@qGBJ>ekhA2*rlT/5
Ct/4)WkX^Tb.4P<Fm>MpIl/$FF(NjdNVL*BHH8R(n'(X7\]C:62L<k[W@](^]drDMbU"3Vl@8(r2:q84
7%@Ppm&pAk8*+!]&[tu/d<`+gXDE!G9/bdQX!/LgZ$S+VLtf%hCrjWa\RZq&[jn[,)nY:eSW-=K+WFFp
AOAAUl?A^j2Ytql2OA7PWS_PFg#uALgK_&3Vgc+cA>;s!DKEohTDIC+P)VZu]?MW@IHl$G9/cXrml$MK
oVp_b0%oGe^Y<#!dAMH&\Xo=NDuY:Y<0<01hQjDiY&*GP)gT+mcGf+o/@#l>>;l3)c+Lr4or>;pm4$^j
H'afQZB8Mg9"icidk9>;i\&o?5#Jq^QA;(nAn-#p^<Lo^]1/aA`X+$iNk1D`g%])hn*7BGNEif:=2.s_
*[:%9FAL0$N]T;Xb21\;)kDQ54n%YGfuR4M^WK.$W7#gkCo_p?jo'[Mili"7Z>l$hm4okA)g<GEo@^W8
fm)*),G'3O:YgB9;t&qLH]NF:*BeQ6&Pp*8VsZ_-WH\!a]goRW5*69Szzzz\<0!j3/ad~>

%%EndBinary
grestore
np
1 /4 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDBOTA+CambriaMath gcheck setglobal} if
2 10616 4632 <00010000042d025a056500070015b601020203000605b80433003f33cd39
331133313001170727230727370176e439ee0bf038f00565fe3ab9b93afe
>ZDBOTA+CambriaMath AddT42Char 
ZDBOTA+CambriaMath /CharStrings get begin
/g4632 4632 def
end
ZDBOTA+CambriaMath /Encoding get
dup 35 /g4632 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 /g1849 /g4632 4{/.notdef}rp /g4666 /g4667 
214{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [16.0991 0 0 -16.0991 0 0 ]msf
45.4797 348.65 mo
(#)sh
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDBOTA+CambriaMath gcheck setglobal} if
2 3630 1856 <00020069fff0045d0596002a003e002c40182a2221211e9e2516180115a7
16000d30950a100037970316003fed323fed323fed3f3fed322f33333130
250606232226353412363332161737363635342626273737330306151416
3332363717060623222635343713363534262322060215141633323e0437
02bc60ac606e7987ec913d673634080c1629350cfb3bf9161a1c1e443e39
5c7e493e4a17360f424d66a25d39431f404543383011ff8c82a696ac013d
b7191fe721501e1e1f0e033409fbad6232282431453861505244373e0166
48404e47a5fee88b68671b3c56577754>ZDBOTA+CambriaMath AddT42Char 
ZDBOTA+CambriaMath /CharStrings get begin
/g1856 1856 def
end
ZDBOTA+CambriaMath /Encoding get
dup 36 /g1856 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 /g1849 /g4632 /g1856 3{/.notdef}rp /g4666 
/g4667 214{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [16.0991 0 0 -16.0991 0 0 ]msf
41.5413 352.243 mo
($)sh
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDBOTA+CambriaMath gcheck setglobal} if
2 6824 3041 <00010029ffee050d03fd004b002db5403f3f3abe45b80406b7331e161515
10be1bb80409b22bbe03b80406003fed3fed3211333f3fed321133313001
363633321615140e0415141633323e0237170e0323222e02353436373e03
35342623220e04070323133636353423220e0207273e0333321615140607
020561bd656a69121c201c121c1f132528301e4531524d4c2b243d2c1811
11121f170d2f341e454643382b0a70c4960d0c3b122529301e4532534b4a
294a51070902f4858472671f6e828974520a26220e1e2f214232482f171c
314328286b404177654f1a3e3a1f374b555d2efe0a028c34521a490f1e2e
1f4133492f16614f142c1400>ZDBOTA+CambriaMath AddT42Char 
ZDBOTA+CambriaMath /CharStrings get begin
/g3041 3041 def
end
ZDBOTA+CambriaMath /Encoding get
dup 37 /g3041 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 /g1849 /g4632 /g1856 /g3041 2{/.notdef}rp 
/g4666 /g4667 214{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [11.7461 0 0 -11.7461 0 0 ]msf
50.9382 355.559 mo
(%)sh
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDBOTA+CambriaMath gcheck setglobal} if
2 3856 1857 <00020069fff0039903cd0019002300284015001000471911961a191a191a
1621950b1016970316003fed3fed1239392f2f10ed10ed38313025060623
222635343e02333216151404210615141633323637253e02353426232206
034561c784919f4d9cda7b7979fec1fec60c525d5c9553fe2a8dca6c3938
65bbc76b6cb19e6bf5c36b6268aaaa3c46695f5053fc01316b5b3d45cc00
>ZDBOTA+CambriaMath AddT42Char 
ZDBOTA+CambriaMath /CharStrings get begin
/g1857 1857 def
end
ZDBOTA+CambriaMath /Encoding get
dup 38 /g1857 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 /g1849 /g4632 /g1856 /g3041 /g1857 
/.notdef /g4666 /g4667 214{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [16.0991 0 0 -16.0991 0 0 ]msf
340.151 348.333 mo
(&)sh
ZDBOTA+CambriaMath*1 [11.7461 0 0 -11.7461 0 0 ]msf
347.683 351.65 mo
(%)sh
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDBOTA+CambriaMath gcheck setglobal} if
2 4430 1877 <00010007fe4c045c03cc0036002cb619000020313134b8010a400d2d1b20
a7210f0c0b0b089e0f10003fed322f333fed3fed322f1139113331300526
270227262726232206072736363332171e03171612173612363534262737
21170607060706070607062322262737331433323601e91d32351115170e
152038294145784a291d14281f170e182d1061873b28300a01071b4c8280
a59e694944363d15370f2b4f2c3a9a02aff701083f4c150d34402b67550b
082542524d81fee37a8c010cc63e2f22033132d0ede8e6db62431d160706
c2409100>ZDBOTA+CambriaMath AddT42Char 
ZDBOTA+CambriaMath /CharStrings get begin
/g1877 1877 def
end
ZDBOTA+CambriaMath /Encoding get
dup 39 /g1877 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 /g1849 /g4632 /g1856 /g3041 /g1857 
/g1877 /g4666 /g4667 214{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [16.1129 0 0 -16.1129 0 0 ]msf
241.64 278.104 mo
(')sh
1 /4 /CSD get_res sepcs
1 sep
ZDBOTA+CambriaMath*1 [11.7599 0 0 -11.7599 0 0 ]msf
249.24 281.421 mo
(%)sh
.836362 .49546 .0448005 0 cmyk
true set_gvm
%ADOBeginSubsetFont: OFAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZDBOTA+CambriaMath gcheck setglobal} if
2 10486 3548 <00010000042e033f05a200070015b600030102020605b80423003f333311
33d6cd3130010107252305270101eb015436fe9f0bfe9936016505a2fec5
39f3f339013b>ZDBOTA+CambriaMath AddT42Char 
ZDBOTA+CambriaMath /CharStrings get begin
/g3548 3548 def
end
ZDBOTA+CambriaMath /Encoding get
dup 42 /g3548 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/ZDBOTA+CambriaMath*1 
[32{/.notdef}rp /g1829 /g1878 /g1849 /g4632 /g1856 /g3041 /g1857 
/g1877 /g4666 /g4667 /g3548 213{/.notdef}rp]
ZDBOTA+CambriaMath nf
ZDBOTA+CambriaMath*1 [16.0991 0 0 -16.0991 0 0 ]msf
305.811 199.267 mo
($)sh
ZDBOTA+CambriaMath*1 [11.7461 0 0 -11.7461 0 0 ]msf
315.139 202.584 mo
(%)sh
ZDBOTA+CambriaMath*1 [16.0991 0 0 -16.0991 0 0 ]msf
348.627 249.39 mo
(*)sh
346.485 249.39 mo
(')sh
ZDBOTA+CambriaMath*1 [11.7461 0 0 -11.7461 0 0 ]msf
354.086 252.706 mo
(%)sh
77.5511 335.315 mo
74.678 335.315 li
74.678 321.703 li
77.5511 321.703 li
77.5511 335.315 li
72.0524 335.315 mo
31.6031 335.315 li
31.6031 321.703 li
72.0524 321.703 li
72.0524 335.315 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[26.5359 0 0 7.91702 -67.7412 266.938 ]ct
snap_to_device
<<
/T 1
/W 667 
/H 199 
/M[667 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0QiGRG\%L1:os%DfLZ+&r*aWtA#&jK7V!;tB(9i@^erqHKozzzzzzzzzzzzzzzzzzzzzzzzzzzzK_
Xa1;>KY&*!"X/hqsAo!T^2Lds'+Gk6:oN\SK'2.VI>#!PfGa)mGZQB6Mkm3\pcG_KQ+UZ-,;ZR0!5-ou
u,5\5$sN+4]PJo)e'S^.40sIoYZ3;)9<Y.I85:%'4nBFB<m?)L_(ScE"6oIa^s2QZ2XY.q$*VHdh3U<c
q`6[I]ko6FN,"YPS3:K'I^3kkeD'?<).>-iJ^'.Hb%1qr&7>GGii4Y3N["lK1n=$(6t%]S%8"<W+L40e
-2T5.YCWH$.pj]?sQuPB>q5jD_Ein*,[+WOhfN4fcl/lTX!]SjJaMo.D>M;cS<C:Q.or[?'`YF^Ent8T
i9%Dbn/KC&>JfDA-Nfl?Z6b9%C=NodjY`de?<*3fD41!UiY9f@=r3(opZgHX]sCO]uS6M0YrdOm:U2RJ
R'BOgq<iB/VVJX0238W&,a.[!G[&+Z6J'Wh'Z^]/SXuWVa5PAlE3Il?Z6b8i(K\X>auJ]'Kr))iuIj03
?J8Ei`;ImtjnU7W+(UVQE?d/mkTL%?\=gi,?a7\9_JFA$tTJ:Q.n%E_EMnAN`r^GXqFCM#9C;^Ei:,l<
-glQtaS>9A\.JF19oj=.asdIuhB@anrPn:3Qu2Bu^-FhU@ar\)Z7FT7:=2IDWPCpMOG8E1.ZNQTi_qB9
+k;[4ZT+92:Y!cb,\k0ZT#oc(A%/5L-mu]%1eJ3Ji)0n1Jq0q<*k2mYi24Irf%oDYHir#]lP_fDK@%=l
c[]Xa;_4f*=Cm0n2d@%o.0>m&5_nqGX!!X00.?eoXu5DVtD>o*AL!muIe<_2LKSC.m$`-XH%iT;p1QB.
rmRI=FpN'1V,I<*,fSIBhXN=)kBKI=Bmo"o)0lrA!P1(m.Tt9o6ISVcu=R9$0<gebblOOK&*UR!()EaX
OKd<1S>GbrNbc4aqOVWkV?O!S+2_+DkFGeWR",YI`3amom!:YKg/@[jaJ5>4i<"c:aKbP',uTFlu.Kp\
*.*\pFW_J'V."<3)UAjE]ud6aGPFB'hV3XF7eI>>kD_>8^7S`ZFNSn'1_l]D$4;r8EJMqg.A;X8;h)18
*?[4kac1S+V&Mm@UeAYu]bmWpbEf"00VuUE0*B3M0g5544juUmc^EI.G#-"00VuUYYXW=eB?I*q#CO,T
AI:=9#/@loKpSJ\1&[rdVJuDS<C50[@abEnB*Y(A`('r+O(jF133lZr>k*aq`@L3&fanRkF<u/7JkPR_
Pu7A+%d'Q$2HE::W]sfk9DjJ(%tXSOMo'oXe_SrGm\-XL:KWX<ig(4\o?qfQkCF:;(G'^*C415-mUpX<
EObE$far@HS4a39dS+nilhO*M]6VdM];orRMDF8N?mbS@uW]m%F5]Zf:sCj.2HJY1PNQ:!t*N1-a<;KQ
kYmUXf6*iVU=;4ehdJ,kC[8N0(DrX5?-668.:Ze_e8AB2@f:4/"S^3Jt3F8^d<NomAe.3(`cOgmsefAi
0<gWErYgYn(6.`4]A<TA@eEl5E+bSuJmUDXE^;T)#i1H_Ymm7Flp<O](pkomCpE$`[tVfmBU-SgUpIol
nA2<pkn2FVSs!W[7,ilM9di(0&m6ZM.%84\ojskip1O-1$QTFVSs!.])UilM9di(0&m6ZM.%84\ojski
8aW=7(k0FVSs!WpHs6X66hD=\rD!aPJ`'oo,htFoN*2;=Q9D=$VIFp29PNFup)3CD>HKVRi?r[3tW`jn
f$UUjhLpjLU7TqC2,qd:U%0FU`i8F1-u&5'o4RMWF6]SU>Xd90^C%1"qT\Xfc*?me$TcOoCo`POgDMl)
3/a7[rq^eMXGZ]fpsjmI6[YPP6\Ql)3/a7[rq^eMXGZ]fpsjm.-^ZPPZt1qO(fj4a,9M\8,F&]fpu8bd
qGag]M_^da&'.mBMl+a'J;Jme$U.jiJMujkH8d_[%^i9]3(Ab?a_Nme$Uno&QD<mbb40OM_>QrCl.PRB
,(JoBnWK>6(`]lF]_Lh\'rH+f1e;d_;DH\Q#'GK?Co/hZ6d^^a^STWg*+Wq@*,3(b`!=8\%fid=]TU<m
S.Z"6a463L+X!<M/6a(ZV@b,;#N[1O;mNfBSbfrTpKN98A$CU\AcN$rkQ`1M+5+I\c((BgrU_qcZ/3Vk
5![IH_<)B&k".R=XW`GG^=cerR1c.TOg1kdd\</YNE7Wr(3f+O/"+Rkb)rF7)^>0<H=1q,FAcJ^O'fS^
Zh97s/0""=+nnG>i+HHHr'1@jUgn/Y>Yc1GF-(WcL6"m&9>FLO`>Kp2.q\<6r*2AZWh!UubOSH3Qjbc\
aUInr=TfpI'de<$V,'XtsI?ZR)bM>!A4O^T4-EaXbrLb<'=7h@gn2P!.X)]?Ys&c'Gk'M)eS8riV:\-E
gP#0(51$H;AVg8G7.tmPk=22dbS@,j&(&qR\fbS%N3)]=_X.l93N<+Pi60]%[X\h*!$d;.<:#WkYU0^W
A"W[*(OC0O(aF%I?"Uju2,GHUDp^e8j0rDf;)HfCT:@RXrsM%"ClTVo5,#aB`l%]kOo]di6qP##anCI$
D3CM)k*g]B4Qhdql^p2mC=2Uu#DP>j>Lhk/EtJ2>>jpB'V=fJN[V\XR7BW]i+I]:[X\Km7jq[Rbg=/%(
n["a`3L)^80n6P'?bLB77AH"*`RjB'V=fJa=8Q^*AYu'.!;s26RZul1(>;=g=i0hD'Z9H;/<#G6Y)9Ke
oL1j;oT0f%$<4hcZQdCYIkj1RP;roEI'`T_^9#41\&Q6#pinc)UHe1U$NJcMFVEdk:*V_/-f^2ios#eb
?l4d91c;P&jiAADQ]:kN_s4XA/@mT727UT)VK1"'IEVI?'rrSJWZd&*`nlno!9YIWOVA?iB]![Afbbe'
F-3o:JTm+CbVUcgT>t'-lkjL\1LFH+33cHaD^UhlTWGCnH02m%45NH3<grYktuC;m%qDY\r_$Xn$AS.t
76eDssjRloSNGUtS!3RIg\uB41J?GF(EnfV'*CjL=D;n'o#0GCTYdmb3W6e"oO6lFq?GkcA4t3m;8`IO
jg6Mt@uj^&QoWhsJaT5(<7\]5(>n:KS@2Wr(3fTX30)cs][Jo;])h5LOUXQ,f/Yhu2r+hu3/d^Yd/>A#
--m98A&C<mEsc=\[,>dS@JHcZ;N==5WQ9DkB5bT5X_rmPDIDWp7<?#j?*D$p:)oP^.CpI'cg:ddsQ1`@
J]QqV89'S%:LB505*"[q^-5G[^VkL=n@:C@8*7f"(=uDEUS;F%'tJT=as/WGD+cP?a8kX*46-(\SAPQo
+t%B!,ldSJe'SXXEADY/kIubg$!$o%O$:,aY=^W]`B2L&FAgUM!us]N*1YoAXgQp*DlR'tIUum`OE6YK
`,(EZ(9LF_so;4nf-P2JNFsc.]2nF]Nm,a1eA4]-=_bc[GZE424QrRie9`nhdh_qOZ>JrMo&jN1GM]hi
9d>2Z*BYgGa)Z?$hd,mu#o'54_Af=**58c;pI!]@p]lWosoAhpl?$IHOnJIK*@&\Mrb5cd(q'1U$f&PM
^i^^?W-%nOY?7F%bD?:NWc,.D::X1U(>sY24N.INtBo+77jUjIB<4G3>8<k3/l'^AGWtrA5_-j?<9+f=
FGu)ji\h.qWP7*HB"R:9](pP4N"Bf:D)2rL9^1-a(]IUN0#aLNdmBBb\73q(o6aT'kGMT>YG)oHuZn'm
\V`mZkPTI1NA8._"6skVM&[)+eaSh)B5*R<Qi<c\*o69$Vk8*8Yu/Q+qU-HfDX7f?!lQpYm4Ll5<03T\
g0f@uf*=:W`FYcKiSnYPsNnk*Y>.eGYD&[>^tAcuTEH1WS_1VrSbrm[AA"G3&,,b;!RHc,_P`:L;GFNZ
%HnqTaUQjte%TQ!?\s]B6%3;teeDr)3:M(!3d^9lH]^%#hc-mTTVr?2Kjka3;2f5''_b'%c6[.drf4om
`f*%C>7-oU17JGKa?>EEDnKUt.:_06bYqB',Gk2rD#ir\NdJlobHOm[$$.jK9/BO]p)tS=Voc<KGSZj_
lC7l[&!cT)VK1"8g?YXLhu_oD]gYeXfsnba_-bF&d_<f&^i#k=eJi5-o=uZfqqc0a#s=qsN?m=&,dgVo
7;$kEAa&4"AgWqQ/m;He&)Y&C=SF%'5o`'@2]a[='@'`n@oh[!ne8T7(UQ7%3CiF9q(]@0RA,q1Q)M9-
$f-Ins,<HablFRW%kf,Xdg\???J:XC;Bsk;Y?&-[*XT[d*>'lFu_kNd#hH]e0VRU:LjU!]lf2"$=iscF
M9"To82YXlt30>2JX4osuD:MX!BI#j?*C$rkR:baGT9j_?s/mn[#uQIU=Bc'(=jYKcEVhJ#0Sqq!!aZV
`O*I85!dWVZSXWqU8[rib`Wp%kala'JC1FcSTeF>e.D:79@4C9)f5ZKgmNa#-uTL[+P8Ysp0fI&D923W
sO_EX#:.a7ME:n*b)Chj0;gYd,(CXMGCW<mOEoJBgX1^r\C"=DtYiO&l4-l*_)&qf,6#dqe7&pC[$%`m
92(mD"g!n)!Am7c0J+g$c\WmS!;'rfY!N:>G1(dMnQ0""/S6?`EJ4M*5K7p[<BjHXpDhdi2D9fAo^Xqd
U(;`>s#[j;qI]fCT:0h),3mKDQ>_zzzzzzzzzzzzzzzzzzzzzE30'?dflrB~>

%%EndBinary
grestore
np
74.678 335.315 mo
72.0524 335.315 li
72.0524 321.703 li
74.678 321.703 li
74.678 335.315 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[1.59136 0 0 7.91702 -44.4676 266.938 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 199 
/M[40 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=5n*eo$j33pDeulEU+]'9/lbnO<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%Anc;4>/J.~>

%%EndBinary
grestore
np
374.371 337.347 mo
370.334 337.347 li
370.334 323.736 li
374.371 323.736 li
374.371 337.347 li
367.709 337.347 mo
328.405 337.347 li
328.405 323.736 li
367.709 323.736 li
367.709 337.347 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[26.5459 0 0 7.91702 103.154 265.768 ]ct
snap_to_device
<<
/T 1
/W 667 
/H 199 
/M[667 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Sd>m%k%L(5Ys%iB`."\>0R>HtVCQm7O!+4'.PXr.F++F7jzzzzzzzzzzzzzzzzzzzzzzzzzzz5P[
*`!!!#=qXYL(!5Lhc8GE$sca7lt!)H;D,O@tq>hM!b&cfFNl4.60\kh\nR-s7KY!R4e26WXCE0"p607_
a(HW-3u836cG[JJD6gjYW>LMp@!ZZL,S#6=cW4X[;SbB3`SC3>=0HKY$geMU"oVKq[EFKMDDFHQ!V.Qs
!@^Jh9&R%3%?p\1!(2,!\@H18LhXel8DOm\Ja4d41+;m#JVRcDo1hY'Fpd_0?9HnSd+B`VM8H_j?\V"=
%SX!ae+3A$kohPaYi2pI!DV/%q?TSmoq<9]fmrgdfs`3`bsjg*V[F\DJ+H18LhXel8DOm\Ja4d41+;lu
X[P3\>p'&KWm\i7ldn"jeW/YJ#DY>jbSFT.hG[DITE-fgB[<o)3;Bc_XT?)qZ?oMVN`:RNllk@s\^-`P
k2d_"2>!.(WmdjND,Xu!KO\Z8Q=F/=)eB`YkbAKOt;l-ncfa-kZObZ1Utg"cTbl3)7^2>c_5hsfII>E.
@-c2D"E:/H^OF,!G2[F89Z;*2FACX`[UY\VO'FfqT_mr6:he.6KU)KgWmm$daVLjX:u/KaEN#-LfNW+0
B\<pAj@o-M(;M-BB,M+P6sT6G763^Fc:qli[g=.1f,*D4h-%sLajKkJ&NCX`[U=P8I0HFhOP8afKMepF
o:8fk(m/R5&GFHuhH^@;Y<fnWRR]$bsthnQ,_*q#DW"7(1Bf;K?gV8%e(Hp_!/@?mFe1ge]*05A1U:T_
\]?/)?@;Z1uCW"WI5BA4BsE+L+ll01h3-%5ffepI2AMY!`]4#Kp9T<ATEU9!p&HXe,"m)(;9?"q$KmpF
Rj&"csHrcE"T7S<@F<M<00Q(Di2beo]o=J_oGc'S)$Md#T.Wg.3mf61o)<'O_)l9n_<g%NEJ>hOm4HJ3
aL_lV/:g#M'uUf9Qc($\1gl.PdM4C$Qp<I3AH=i7>d=M=1!B@,.!WIDQ2e;:?VZgE`t\?ZXGoX+G"L0:
(PHJ_<?TW+&OrHqVD'@a:m&$,?0q6G`X^#'e+:3n:W)Ca4_=+r\$*@q#k8l(p0CREY!FkV&\nM[OI-`F
qca]H^O^$M1miGDhp:/H^OPHUA(qqTj\ec&8!`\m#aFmRm@.g<\cQ@!ksI)=XJ7\-1^]-^l^b<<LJ5*;
G-dfOdOb!&MF%.e$^[="TjbbrmqF'8S4>M4erR:3h2V3^T@Nk$At4/W8O^6O,6Sf+*]903(dUQUHoYt)
BdV?QJ'Q$o$k)4fn_3r]kgP)23(8%ObY"a#joPG`i8o(USCGFC2Lr(i8$-K`61krtOOcp>6=T(^FOhb3
.hBtgD75;=XTQkOhCqe0.u#O+Etg,CO30:dHfq3'&'`(93U;u2M(7!7bj9FL&,h'Z"q7NZ6<hoU_;e0V
$b*E@p\de0"Dcp>6=T(\.-bXfL4'-j>P:?aj?&-17VkMjrNC$oT/hoU_;EqcYlSC2U\+TSN6cc)f'dbN
)<^QT<UiQ4(n3Ml2C63'uKSr6D-Uq+ZMI%-aRg:rKuVrq-8!+7C"Q`p0Bhm[(8Z"r&N!@BLEq20+^4f`
`G];AjI?ikD9YP:#*DWQ>Bp&IeE>K0b2R\*a]mq?GH^]_A_I)W8aRFV>P<p]pTi9nA!F:1:1[\'mA!l2
RIG<icP?#'8IQ#BRfB1^E7nQl4Q9D>Af:m]nmZ`7VP5>-;,MY@2I?FiYOK"BJ*SlPG]qcV?':qRU[pX2
3>(=]1hpT:BZg<YqRJ`=@n\#&!Wdl3m_Dq2FH.\331ok%8&hV2[RYOm/Wmfg?UrPkJDq=Js5f&]ipr'\
4WoCVd#S<86Jmod:>n@%s.J,8<VkH.pS:SmXrp"mpAhqE'>p.<#3nQs#cdVo'JRnoZcC0a#gc;2r;1J`
HInZL=uY7PVDk9]u<)>GBR`h1!@mQFN\(8UD)XH0a,):LIH&8t/'-2P:mp`]UUT>(-h4]Gu.V!hTjO0l
hCdl"<?PFS!r9U)-,:M3/k),t15VXIflO0lhCdl"<?;k0429U23-:M3/k),t15VXIflO0lhCdl"<?;k0
42:fI*+<+VAm^Q2iPUa=<RY'G_gij=)a]"64]e)onOhoo$P2=6iVSX(qERnfHN^*2[DCYCZ73\=]h2k;
j&:WrKCm[:]2$%R.nS#N=IHSY?>*WAbH@',W)Wc,s]gbX/A'*)g=1fI2m'mIncG"mLp:7A.0jbg\4F7r
:XohLpU^*2ZZf6k`2!*J]S\`t,S*d>jV5+*!L&(+%]:JUAJ;sJBqT)?KSo83+KVe\O&krq,@Dbd7Sh>:
!_`JW'b[![+"]!o6TFHGpS.t*UF;n&^fmb-'3X;IL%bD5hfql4^&#O+F_dPpDHFc1#&Si^5uMUBPQI!A
GuY;uo1ORA;_I?Qin\#AB0\^P]&(nL$;-[dYuU768<\d!8=mZf<9P<MpSW8u(2drh`/Sa=QJI4s-FPB<
of#BZ*rPq0P35#\qh`4aL1gY^\P:\nCt747>'FUmUZh()QQ-[hk0;2'@hHad)CbU7fleY7tDS[o&JZ26
-1q0V@TmM8eb4`e2p'r-t`q5!JU>')JRV\R^7Bm.8Q4+AnH\%>'4/'aWeA&[YBB0PR,W>8c5bipQ6@A;
Rrq9Ikjcg>UI_:8'sh9L>DH`gOo0J/nse:ia&^Lb)7?cQ=&mCXJ+XCljgWtl^Lb@_PI@A;TH=oZ^tnJf
pD]H-@?k:--a--qF[o."Ll7!;:*lMCJCGin;XRd3\iZg4.66!]lAe6Q"V^8(!QUuRlDZYQ^&+jWqr7.j
ec;\u;lH.Pa_m*o1cq&@cPbgkB(f:/#fUg-sb3^;SI:>@^*Is_%)kWC6)T"?bik'AE93@0_J::OZVFP<
mcki6d14*9=8s3g`0<S97]4!i3O\R23pD=?2h'6W3I51)OFc=a?'Y.<C<H(N1W1=\t.jsU&Qe+;r(>A4
akm!eqkm$d72P37ZKbYe/X.D'2$pH)g@S<@7Ro2fJS>jmn>:GcL?_H0Lb23U,ZoR1dQ?5%@XVIH0?G=n
GSEjn_#IFkR)lW#p^)^aZ'+bsh!Rd6N-kD@tGP?$ALG5o6]I6;B(S<V3(VW:U2?$!\XniY0m=UMoAD>2
f\[s%Lc[I`02-'+ZmaeKK\k'ErdH(%=2'RjWYY$#lhWd:gDF?ff/9Zj1=]B4F;jE[2.o+_1>iiZF4T<!
FTmrU_emnCp&!k[T@VrW+ApW@U,G0MXd>aKO2XQ,_PR[-_QG0T\Tan$bkk:->\Ug:=]0%B-uS^)Q%`15
9BRd6N-k=MPr<;>.2?*iiLeD\VWC\rsfGpV-$f/k;)PIOOdE+b5V1NqkV8`d;I]Z6hIGpV-$f/k;);bW
d^n?_b)q6Zcklp2A-3+^G6bN.GVm$d72P349kcW0``]j'@\VhoasV-G@upH-jq9;o@9SeBQ94ul2\-Jn
!dan)u.:2eZArO,IW8p6db?2&)"D=3V:UhA\b4Z.Z]VK8e_GG=7^hg+(#h5^^%\PGtbSr'*3e1#GtQ/C
?R[e/<8+Y)aIFsdLGm&lhijAbB3GdX_MS%60&h!nZC^TA0DP+Cc1f=b@,?2C_Z,pu7XdI6qsj<!->n'3
q\ITn0f,s0GBY'[S7](B:=7nunVXm=AYoA2V8drYD>W+>(:drhi0HmX8KmZ?\5^3;a:[iN$JWc<?.T+I
:S4E%h!eUl,Cn&l_,?01g`5QA0e#!6RiT%tb^,s0H-Ys*B%P36`I^3+p!=8gD0c+iYE6\XD6F1tL5ceG
]gGFXh/6FqBs*KtVkpDqQSVOdI'Eh-@RY.<C<Gp]>29_ZP;S_ehgo=]!Rrhn>7FmPR_SW[W;*>A5,o\S
@`T2)OFce12-4!i2U4!sI7l2>mRrq'XN>jmn>!<<*"zzzzzzzzzzzzzzzzzzzz!!#Lc+3REJjo~>

%%EndBinary
grestore
np
370.334 337.347 mo
367.709 337.347 li
367.709 323.736 li
370.334 323.736 li
370.334 337.347 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[1.59196 0 0 7.91702 125.8 265.768 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 199 
/M[40 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=5n*eo$j33pDeulEU+]'9/lbnO<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%Anc;4>/J.~>

%%EndBinary
grestore
np
275.467 267.032 mo
229.519 267.032 li
229.519 253.42 li
275.467 253.42 li
275.467 267.032 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[26.5359 0 0 7.91702 46.2168 306.255 ]ct
snap_to_device
<<
/T 1
/W 667 
/H 199 
/M[667 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0P6*`$h%KJcOs3dM.@`#hRI]p>EO:[flm(*3(60YSfzzzzzzzzzzzzzzzzzzzzzzzzzzz!.YT0=)S
'=J?f+Q_Z0]3^Wc[B+#;TCcI[=Dn;SgQ'&Sn&SX-JGrLK5b^>jSA=QNcXSWiWPA$79AKC:g-J3-36n%L
+*3@S<2p\K'J-fosK3F@;`kniWTP-=49o:%Ts;rmb';iai]^r[eX3Uc*S:<Ai/P82JX>M]&<21JYtX(_
Y_Lob`Ck;t'PCY,&#68!L1qJ<4IrVDMG<Te,NJC?s=\\%I(mePT0*d5j3mq(!Fos\;Cn[%Lc9cJ&_kW3
p3^=,5P]Csi>&%n6K[aj8arPm0`F#@gMl([M!h>'h/I-l:h46M/P)/!1PmFQ:SX?'G3#+R<W`nd3SFNr
G*GHbQeT(!3c=]QNmH$@h(X3T8&!@Q'hEHgS-*V6]9%IBI7VgO,GQ5)o4hOX>cWcL%7^r\?HI+mDuNhp
7"G/&SKF7>E4d!qMr"7K4HMeN8gQ;Q\kmS7pVh==S9rcO+u>J<E'D*eZD;gg<r%6.K[I8@I:fs,YA=2i
oqrJ%Mqgi6+1SA'L(3<*XPM<V>2HeR;tNhoC_Wqr4M?>VRfNdL'Lo_l,9q*-*"9UAc:e*]tS/04:]g##
d'C9)>ugf(VEpJ),Sn;KIa>ukf<]0"]N<9L<f\#JfE,%C#NVeRUJSJZ,")0o\sbhAY3GHt_XbZApo;r+
??`8>Q1Ptp0tER_c[o#,(hhoCqp`S#$+]f">'9m'`0eP^PgF]2:9oV)heOXDKVrao7+#LU*)Sj28;fpT
b.ot-/AENH0"S%#D5ME]P+1\/I`e_f[&rBYP>ZKI9tCHD(jeTDI(9@`^e7>I>+&%1nc4>Bk/pUW_A&=p
#kq'4dch>)u]6^R<iQ;n[_o1!:Sd>rTu7\6!IqKq%l5D[TdpADP^f_)sIY?gs!=.`\%&N*Se:.u[.]'l
g1H"*N5GONJZ2LCE(EHM%HAZT87:06%S#8(TPrD$$,<P%Y&$[H3Ul?D^8[l/Smlo;S)T/-,e3M,[1YDT
?\l??_&W7$*D?-!].<53^V^9uX0AB'b&Y;a5BLpcfEY-,N3O`a\&:.u[.]'lg1H"*6-2t,8*2LCGM3&5
RJmJhCtA*5pZ?%8+`CTI<&Qo_6hhd72j`$@G1H.q)rNb(_pZKD1!^<APeCFso#Y4j?Uht^kJ,POAjke=
eajG?HOf(68\P9%iLHpuB[mIr4hcH9=k4LYuMM5P^uAj.I65"4\L^FnT(8Tr\U[(DMBbKbK(cMPl#ZX^
)<[Ht:_hP6$YkM&"VgcMpDqu40g-`5O%bL>lSFt>`H'fBX5mp]k1AZsqW*hCgL:e,@b,>V"<]8ifFSOp
NWkB[_]4PB=dq"1$PkV[WPD*0%=9MeU,e*]tRT9R`=Y5UXqAF:nq9tb/XflAFInVfRbJR3D'Fe@/8?et
S&-[Wum3OWl"d:&+.Tf/L)-Vd`C_pe%6?LqNBq?suKn+iaPd:&+.Yu36042a.ZC3\Igac>JYI')`m1Tn
mUAZsp`/po&B<cr==D*UUVofMR/AB/^_^*<9='j"u7ZIc7^$f=P4W:%p-%HsglI])"mlr[$(=7ht!*E-
P;ZIeLagBk8\NU#A:g48U7fC$#XP9%gQq<G]7b'dj)h)Vq3F[;S`hJCnr;s^O?Bm1pdQL=S6^;%G^Ya:
o-b?he12W%),<;1"R#+VRegO%Z1ac<3E^:Ne%Y<VAbkMEMrY)(>HP#^&GfsCc#<Sr]J7V",QFFJ!dn*O
'8rj(/4*F%W2X5)`LUV#gh9H2>Uot<=n7-8MYf=0n<GHc+;fk^&8Xno2#n+3@&?$1Un%Hsbe?CW\nF1J
%2>8+QNlEed;RI#"L<>Q\D>)0e_1'"=S^OmnmaBYn3phd"Oi<eO=Co_a0`S5c>e8BCLF;P#.Wo(W+7V"
,QFSiLGjm[rn-FQo9l=)%U't%7O#9="6[H_u*KFsWq(#?SU<B30M]SUK*p&)S,=])f]FjOOs<3(HQ:Df
5)>g_fj;OPE9`gbU]Ff<!GeuPb*l8n,_!30&6K-uW!>d!;]D5kh>$0+`rX0UlKb!AJ`<nBWm!Doop*B[
auk&NnGDbGj*ShT$>[OPedSag@E/cbY1coX\=Nho+W,(#Blq7DVFZ)rnT5PhI^CDVNuFQf8>A]I]>YNX
gnHAt\[9l-l)kDqgi8Tu2*1K=*DdB[8]bZ@:&<M=H*VtHKSk1"/Jd+N,]b&=0NR]CjKV_ch<`m4D)r$U
#$^Pd=QN1L+uR9'(8YuKe"g=oW<cg8'Gk)VR\PNmhY<VJjMhLJ1peU;Tl(&=<lG#drdHgRp1UZO_=:AA
+;5@igaQt0CVB?.;>?PD>"b'dm*>u>s2qs.3/r3!UQ1@bWC19KuNA(d9RWGbl"5-rkt?$jurlVo80Y.>
]1nchcCXmWN*fp/a"n'WXt=LlcCF,QVSH@MLNK\of(6Uop_8Z($dFt>`Gp%DZPjU<[6RD&=>q(q`rWD<
4oF['Et%@C[0h.OckSZe;;l'+!*gh6?74(?C9Y@uJDljb75F^2q32$4SjeU;TlRJC$7O0[c*T!u#VZIe
MnO"0RDof'M#aAO%FEF-mTKkY\%*D9GI,2T&q\9Gu^.=:IMpSd)S=+@P<N(IoG)()D5+&@9N43[_JNR]
"[`>q*[jYnZ9mE4(QaM&a7f:5%%\1qT_Y53Q/nQkQ:s2l61F'%b.HG3-i=2sr%pAK6Jk4CCINA8=meaM
OTmrF3Z=4UKA\)X''m^'gbQ*EK7I6ZSk3IOS@>J+p-lM'heGIbWhR;8nj/Rq"`k,nPVAZsqg)k:3GDqC
LC-FbX6\4-)fGiH?j@K)(lp<B+1H]"E(ZA'jS/TUhj4)4N7Ra]:[\&A`aW.#gaI$Zq=+7[prR4i>OdIU
Did-bt5Sq#:Ng1@-eD]c2b7A&1?AEPLjri#SbgUXW`'KpAG%:u0dNk/>tX*0nBfD?$D=4QV:O6iBJcQD
i:IQL?VStbDMXJ,!%gJJb;G1A4Om!?Etr@7]Xb)r7$m.m^=gT3P,cWaO>g#pqk/j=E[?$b8uIKTK7\C2
2]7s-JP4hk<ED*GXFT!#Io?i!H`9s5F![pHCi?G0sAY-go0H;0c$Y8KR6?F,)e]k3h<[7a:Wmcq^k-eV
AC'mD$HXmB.N^GT/@MOq<JXj92?NcjlkC[KR!Nk7>l^e&_!F2ctW>Uqn%c>QG.StbDMb['qr*UD]`f@m
(!lCRCm!@QPtcP:XOF04e23kmOTH]"E(13_DeGH?]u?#,dUWr'2f#Fo<p4]gF0bdF`dl29+Cm4!A<b1p
R3h6ARrFfesGWUAA5*cR8_oiuK\1=s[/V=RoT[AW56.s%&jG/q2h['OqV^\?R(Br^cIl@@@MW9K3:PIX
_;/=k[fX?B"u>FE+i[6)sYVk(5"rQXdh:/[X`P6[Ui7nm(?T?O^KA*NpJAF1glhTFVbYMHH954,H-l>M
-\EK]TlSNPge4)2@dra`0s*D>Si->QE)o2b!+HgQi9nS)Y'<e'_QNDig>l1>"Sfhp35pEt$alrZ<`2d(
KbT!pJ!fkYf5MbcEM\,)TOD4G'E9G-?=WHQd5`VhgmY',84ZM"tqDe8@BfBu`WT6Ae'<mPsS35rh'<lk
Z3mAT9,qfD=6mJPgOm4!A<b1pR3h6ARrmB#-&IdQ39JnaaCOV]A!;:?9SkN'8/q7Xo(;tR_f\]\<k@pO
K9=h>RMg<&@Xe)H3.-VUtDXt/qeanN47S!17Xk]n\"Qb@R_](iY=G!"TH85nOGVU%@JSk*n=A9uLL3km
\$c2+h0f#9#MB"TR4l8/I0]J,a[Z_,N]NaB&@m>c>Z8Zs"M6Ccs*RGDA0-8/&jfBfF,S"nT:?b9fRI*u
fMRhY%]=JG":R80s=:ZjZ,Y8P+K2rC%+Fn'2/*`'o"WZ0rf'#tqMS1f*@;;2i[ki=h[q;'0H;tR_f\U1
Z+<1hj;[Wh00Panhd--f^T?`):fp=&ind;.mGXk1d$X$]W_h%JnQS1i@U2>cY9mcZP"et16$r^3k,n!5
qOFP?\J2tWR;FFJH+RX&]7207@6P*Zom`-J-,mPhePfBfF,];+!UID31+YOn3QC3o&L:Wq!e\&<P:B?L
bVRf.>WHZ&(*=8KRp[D-"V\fUi]k?^s-c!.ZqGp?tF%<g6F`EbP#hKF?pZM"tqn!!QJqRW<m[h?mLg)]
P8o;ObHeh(muk2^k!hq1f`'mJp'He\A`akB\c]ISEjC;74j9BWX2C?PRDjQhY,ik3Oj2[3$`UV88Hd`M
6lo@oJ:V]G_=p5"N9Jt9=(q6!,s--k8XH!fJt46h1S/nOb\*HdAcCJS*r]Q7WHkS-*o\+<m^FA&.5EN\
)+7ua_/Vp)lJUWtT)m4#XXgbH*UFGcWsg\J!?\g>Xk9_i#2'0BrVofcs\"W_`G@:`6&I9q[@OeW5+eo'
Z_''Y]AD_gF$"]+K`nVI(,d1^WP3KCRqg<o4dN5uu5Z*SU8hj$aA`-E#/b"['/H,Q8rmLMAC*66esmHX
YU`f;$5Z*SU8hj$aA`-I84h^`q\8"E0*WJ[:@9'9;;S71Q9d.,n7g0)%Ymn0B[ik37;D\i8J_mfC)=rm
Hq*BM6IZDZN,@o_Bcf<;XS%'"*BgRpdoac1JnHITX>jULVte&n8"q<iF^f.K/2Ap6sl+8"\X+]$V$]&A
*]Itr3<@HSX.k/9DQg3ISd]j8*5?d9=*9tj]<I90JDFAf2Y9oA%lS`a/3gN=GtZTE*N'(Sc3>;pt/<qk
-!VJ'8]DO6pe>M\%V)a%2M<mD=e9tsmk]gJjt3r,;<l?[Wcm&]+0I\>HR\a$MANY$"&rOV5FlFO/oDU6
_UqQ9/l\dcAPI9t21inSLnDL%.$n#_N&F0r9.X8@KdKC;d3QSX:S2r(ZBhP/;Blf.UXmB#7[mS&:<inU
ZIYB54)kD">,b?NJEIi[=9,J@^%>N2_\h-W3)LiLUD]AXbkAY56*c]MNihCW_JW9uC2)oT8J^>88_S[R
D_\*$;c)=NkN/*J]rL0O):2hun<Ib&hiGdkUo6&u<PB@1M7]-U2PzzzzzzzzzzzzzzzzzzzzzJC4?$^!
<_/~>

%%EndBinary
grestore
np
266.14 381.234 mo
368.929 381.234 li
369.655 381.234 370.242 381.821 370.242 382.547 cv
370.242 383.272 369.655 383.859 368.929 383.859 cv
266.14 383.859 li
265.414 383.859 264.827 383.272 264.827 382.547 cv
264.827 381.821 265.414 381.234 266.14 381.234 cv
267.452 386.485 mo
259.575 382.547 li
267.452 378.608 li
267.452 386.485 li
1 /4 /CSD get_res sepcs
.651 sep
f
151.344 415.229 mo
78.7948 415.229 li
78.7948 399.889 li
151.344 399.889 li
151.344 415.229 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[41.8528 0 0 8.91162 -40.5687 220.925 ]ct
snap_to_device
<<
/T 1
/W 1052 
/H 224 
/M[1052 0 0 -224 0 224 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0U6#Ir,$jG!/En&l#7nYNA##6pj]=M4H0Bp4VE:5,&(+%3&p)<u3zzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!#'X$?XZlh=I*rO2k/!!$g*h>dNU!0$'R!<<*"(sRC0!
!!!QR^WJ$G3A`ZQ<XIkUNg\W?t\s+><UqL%r_TVRoS--!8(HN?@HXblO(Ebju4fsK)i-^oY(1P8CnT,C
Wp`uAd8?EBBad=WKF>6!8fTU=e-Q9J=WP*jekSZXoNjo4D+nB&--m>^6bH1l+-rc3HL`skZ%V+QG/]X)
X4g7n<hnS:@ot84%nJS:Q9I%@;!k!Z^C4J7ZV^`n#aJ&Jm$N7p=)Xb'm>m,^Z*J*-7A.NDg"[tGi=%d/
Ens;C8C/&4%l2QESaBQ(NuW.4/?N%E5#_GoU.j"dWL87V9c>)GG`Ik]?uf_dPG2h?NAFs]h=1QpFH&J(
](C(HH$?U$NOA+G6u[%?c`sCd"`Xi1L<%J!72q'98K2<9!29e*peu[n\Y)'J/7BT6M0YHo#7X$?\e94(
X<fsZq0WuU3")41KL=G3i$E$E4u=F7=(:3^&+)MYo5dW+[+k>o*#+Gd^t1rhQQ"$Q0>[eknu.E0*#[Jh
BdjRl3B=["a[:<HH$?U$NOA+G6q]mqFM`"dq9]N3(NB;!60#.H&afgP4Vi]29q>2!.](E?_6H*JJA(56
&fsH*WTRfpQsKWGMmB8We25Qa?9O=3:8Hgn`DN\>Wem]3iI%Yg]IP8j8SU5D[tgL_diPBK,Wpo4TN8Wm
Or'pEu7Ok*n*b&e2Ttd!<C,ZIi6:r_\ht63ITCCNH=/%!+6f@Qa+1`]MB#$Vh[=3EK8fV!0#t;15@fDf
>te[oM5]LcB3GRJ8s@Ok4.U']_:7_*PKofNH=/%!+6f@Qasah>hAuPYL#3Ke2Ttd!<C,ZJ!nWP__o]Rr
@0tZ6&fsH*WTRfpQp5OC\X><>bc3uW,[jQ!s";?rc0*!%?JWKFaBs<)X#1)>j"e^6QL\W\\Hom^4.FNf
6ORbTY<F,&(eMk9bR1g\j$1D0Yd$'f,oB-T4@obTVa_i&(dZHe&%UVen8l3aKtnRnd7HL#Be7QHak\VN
tu=BYWainX#\57REr3tFATRh\VKM!GA-MoUjE=0@oh\Kk1@*52>3.BlBNUgE*`>./7+6VhZ-s+WAQNoe
i3/Bp6#o#PU#pA?2ED/Sr\!>!.E(k2)OFF2tD+bPRcuA,PQ._qO8b%O*&\JIEX2/j;[odoU_cmpJ?nj\
VKM!h]cK8!UDPF\;P:dqpN*6g>#%)Eo\:E97MGEGm1:q]](QXOmbs3.dD*dH-_V"\1[a)&`sh454aXnp
ca_#hGr(m*cderpMaF74!Vs!@!uW&ZhZeFPMTBjn/cV?Z[;+As8.&$>4RJf0sD<IMj`@#a%F)eW96>)2
.u[=VpDl?([9dc%Jg=^NL@a:G,t/]ql[X.*qG`*Hg]?q>Ki"IDm9M["74%_@MX=@GjjcM]e?GZ20,(jH
g]AG=j2eGDm9M["74%_@Kq20*$]NmhOW3pF)mVRHg]AG=Nl\FDm9M["74%_@Pg0s4L=UHhP9bZJ&td;m
^Z,c>qn"\]g\O,!Hr!s0p6s"Y1Yg0n'h-l+7bZ&Hg]?q<m6JDDipr9J/t%`N+/-Bn'8SCGO+DjOIMcrF
.YXo@U>jWM`cCim)\O&"M</H;L)"*fkl-]-TSg%5(,W6]L_c4=o&?TQ.a-glr!LKk;L"l\+GVajQrK8o
XP\-,2HI6ko!l1jqmKj6euOSr2+],PP[i[Ed#cWqE0X\OmXfAoF.r[o8@hFTC0+%Nmi@MC&QQX]2u4`m
aGfFb_pR]OeZ96SXEp!b5QLteT78;a%ts#[bn][h/f2PHX^<WH]&mB!pn,>itZa8N1KO0hT^94Z'O:XU
>9m_5'(1>UjJ".r;u?2%-(LaVOSZJD+B(^_f&f1m^Z^#DrWjYpDWd>q<e:H1<4W/lht`:]B@pQ__j$\F
%(*[XJ5+:#FrmUj/V8=h^VCC\bCi^[J\;baZZkcVXGRF0!gKeRdY\U3A'^V)]iejSL]kM?j1E)4lBRW)
..*mpT<T=gj<i3d.COD,PSt\g:hpL\]cinj6jCJL>;)TGMXUU#LXO*Hbd291EQ);Ybn;q2tpS3mp1e*"
%fWP4lBRW)ZT!&@9njMn=.c(]do4l+N_>$SAn7_hn1hJXgnp9^U^bl/!,*#`P)MGaB[aQD[l#2Msk_Kr
qf/uYAo`\""ACGi'c]G5BptrK6ho)q=gn/Nna^CFtV]PAm;a,mgOMP4uN/dM8*&MF6"CPS%T1hRG$07>
Jkp>j`;gJ<]/0bHf/f80&U:&>:4=uHW$=CC7HOC^n'gt_!0(Q/u.;AoY\AlVh5oNa?=JY],/i0N9fGn@
=RRl6&fsH*k6k$$YWtoFn!t$#.<`h`]8&Mb[q(^R[A//)u\'Tr`SO:6&fsH*gk1^"uJ(#cK21e4DNG5N
H=/%R)ogBZn_$p1ZP#lh:J<;*Rm&=mX\O-?pGqmmk!<6cDGb*e2TtdJJmf_5V"YZ%,Mj_W*oogcB3H]1
qOUObhUt-XEOkk?B[En:u`P+#=c"W!U\+F4jA@e:uc\tAHt*<OaCIM],6(qbDs4moMX!FC7HOC^q8rB!
$BG#I<]Bi>s#!)Nnaa*Y`f+cQPm<Ig$]>a\du49TZ0!4&%p%[#4O-aE*_<<pcgY(TZ0!4&%obc#4S!_\
=Pe=):WY%lJ+[bF6"BeL:n#RCZaS:]JK$tp$SKm3H>X8AN'_dSsbsgf,K@rSO(L^W,[jQ"5gAQ_&8c\H
^K^/hALQlg36BR*4Z<g@R#KdgjL7XB&ao]Mg)+LL\-NAc55t#o)m:$hB@RJ3/TaOME^6cT(0\n!^;tjE
2N7;+jA&PW"1]JLCWPd0:X\'c7D`j-K%7;LCe(ZZdNtnS+Gm$%d>ttS1ePf?9j;<%O''>/(1h%P:h0V6
[G=0k6i2r(!n8?6O5L>1[4h<75$gP+[&n[o*%k4$0[W1+b[E%;``fN^e]9Q6[HHPk6i2q&'uoA6\sUpR
Ef_lmeN<Cl&_Jm_YJeIR16qBkoE*4bg:Ga)fs<joM126]FiF*SB+q8r[kfNLpQ5W3bM0tAfa+b+[(%&o
*)$G%tN!%G6i364AG">+iiA*06Kh3+5qU`cHH@JMY%B%cC1`sS=Q0Sm\?[@V!!hY^0im3!:VOPp`</92
8,?JQ;?qH^H/<5NnhN9ltughCRVNmGD/ud8<,n"TZ0!4&*ljVD9b;[o@i?.D\P:^Euiai8+'dpl$^g%#
8j4UhYKF@/,e'cNH=/%erbDgE6\L@f/Ru&S(O!4m%D?YEXusUc2b)Xf(nXD`/aJ$#;sehHWZ>Q#(V+Zc
XG]VG,%PhW,[jQ_j\4o!:6\1-F`tlp8)C`W,[jQ_n*K8!3dF"+a.:dlCkpPEXusWc2bXtI!aLs]aB:5^
4cOej4U[;^qW5<!#Wt-!s&8:G7OZR!1:V"!WW3#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zz^iTJZ:O)&Y~>

%%EndBinary
grestore
np
250.939 366.062 mo
250.939 288.854 li
250.939 288.129 250.351 287.541 249.626 287.541 cv
248.9 287.541 248.313 288.129 248.313 288.854 cv
248.313 366.062 li
248.313 366.787 248.9 367.375 249.626 367.375 cv
250.351 367.375 250.939 366.787 250.939 366.062 cv
245.687 364.749 mo
249.626 372.626 li
253.564 364.749 li
245.687 364.749 li
1 /4 /CSD get_res sepcs
.651 sep
f
278.951 403.496 mo
261.263 403.496 li
261.263 398.259 li
269.94 398.259 li
269.94 383.859 li
278.951 383.859 li
278.951 403.496 li
278.951 381.234 mo
269.94 381.234 li
269.94 379.645 li
278.951 379.645 li
278.951 381.234 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[10.2643 0 0 13.8131 64.4942 227.68 ]ct
snap_to_device
<<
/T 1
/W 258 
/H 347 
/M[258 0 0 -347 0 347 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Nd0Tdr$jAroDd#64T*UA1%(m(5>mgW4zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzi"u*+_#&3RciHB
:!$)&]!71a3#65bEF9'Yg5R.90!-A4f!C-ki*<:0]ciHB:!$)&]!71a3#65bEF9'Yg5R.90!-A4f!C-k
i*<:0]ciHB:!$)&]!71a3#65bEF9'Yg5R.90!-A4f!C-ki*<:0]ciLXdqFfBJDQ<0YFF[\Gc_^g:l?bE
0TNC$WklAEnSkTIReb<l@5d.n7dfFdf4dur.X7+_`J6mZMV??JUHSun;=5U@K!586#9a>(C0*+*6kQ%7
XJ.;Q?!9aEU"+Uj]3WS@DTEB]S!'1,D!2'FE%KJNikQ%7XJ.;Q?!9aEU"+Uj]3WS@DTEB]S!'1,D!2'F
E%KJNikQ%7XJ.;Q?!9aEU"+Uj]3WS@DTEB]S!'1,D!2'FE%KJNikPtS_zzzzzzzzzzzzzzzzzzzzzzzz
z!!%C+4VV!q~>

%%EndBinary
grestore
np
278.951 383.859 mo
269.94 383.859 li
269.94 381.234 li
278.951 381.234 li
278.951 383.859 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[5.25149 0 0 1.59228 69.507 238.985 ]ct
snap_to_device
<<
/T 1
/W 132 
/H 40 
/M[132 0 0 -40 0 40 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=!=8`+$j<9i?Ym.$j&*%l<)lpu<E3%!<E3%!<E3%!<E3%!Sc+2F#uL~>

%%EndBinary
grestore
np
273.009 369.545 mo
269.94 369.545 li
269.94 364.181 li
256.84 364.181 li
256.84 357.592 li
273.009 357.592 li
273.009 369.545 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[9.38937 0 0 6.9622 61.9479 247.229 ]ct
snap_to_device
<<
/T 1
/W 235 
/H 175 
/M[235 0 0 -175 0 175 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0L_$PWg&48b\Du/3U"=%L_hL/OI>lXj)zzzzzzzzzzzzzzzzzz!!!"HaCu_M`34IGkg^g+hX4R/C2
\;J8@>q=(8T[=>mjQtmB-Vlp3,&><-u5m6)qWS[/^1,zzzzzzzzzzzzzzzzz!;NN4"-Ye8~>

%%EndBinary
grestore
np
240.056 382.443 mo
240.056 377.1 244.386 372.77 249.73 372.77 cv
255.073 372.77 259.403 377.1 259.403 382.443 cv
259.403 387.786 255.073 392.116 249.73 392.116 cv
244.386 392.116 240.056 387.786 240.056 382.443 cv
1 /4 /CSD get_res sepcs
0 sep
ef
240.056 382.443 mo
239.607 382.443 li
239.607 376.852 244.138 372.321 249.73 372.321 cv
255.321 372.321 259.852 376.852 259.852 382.443 cv
259.852 388.035 255.321 392.565 249.73 392.565 cv
244.138 392.565 239.607 388.035 239.607 382.443 cv
240.056 382.443 li
240.505 382.443 li
240.506 384.992 241.537 387.295 243.207 388.966 cv
244.877 390.636 247.18 391.667 249.73 391.667 cv
252.279 391.667 254.582 390.636 256.252 388.966 cv
257.922 387.295 258.953 384.992 258.954 382.443 cv
258.953 379.894 257.922 377.591 256.252 375.92 cv
254.582 374.25 252.279 373.219 249.73 373.219 cv
247.18 373.219 244.877 374.25 243.207 375.92 cv
241.537 377.591 240.506 379.894 240.505 382.443 cv
240.056 382.443 li
1 /4 /CSD get_res sepcs
.749 sep
f
261.263 398.259 mo
242.855 398.259 li
242.855 389.873 li
244.66 391.544 247.075 392.565 249.73 392.565 cv
255.24 392.565 259.721 388.164 259.849 382.683 cv
261.263 383.39 li
261.263 398.259 li
259.852 382.408 mo
259.833 376.849 255.336 372.347 249.778 372.321 cv
253.564 364.749 li
250.939 364.749 li
250.939 364.181 li
256.84 364.181 li
256.84 369.545 li
269.94 369.545 li
269.94 379.645 li
267.452 379.645 li
267.452 378.608 li
265.379 379.645 li
261.263 379.645 li
261.263 381.703 li
259.852 382.408 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[15.6751 0 0 19.7011 53.895 230.696 ]ct
snap_to_device
<<
/T 1
/W 393 
/H 495 
/M[393 0 0 -495 0 495 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0O_$pK3%)]=;^N@(S?7-O3!KW?+o)Sgkzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzL4%#G^lGu4)?I(CDLt=Xm&HPJ&HKH.->3OtY.=oX!O/VBJjob,WgfXn!5%M
CBEZ,R\d98UYcDYn7KDeTS"L>n]BU_V"Mh1O#oWiKX)<MY!:6_TTFh19l6^0I^ok6T)?I(CDLt=Xm&HP
J&HKH.->3OtY.=oX!O/VBJjob,WgfXn!5%MCBEZ,R\d98UYcDYn7KDeTS"L>n]BU_V"Mh1O#oWiKX)<M
Y!:6_TTFh19l6^0I^ok6T)?I(CDLt=Xm&HPJ&HKH.->3OtY.=oX!O/VBJjob,WgfXn!5%MCBEZ,R\d98
UYcDYn7KDeTS"L>n]BU_V"Mh1O#oWiKX)<MY!:6_TTFh19l6^0I^ok6T)?I(CDLt=Xm&HPJ&HKH.->3O
tY.=oX!O/VBJjob,WgfXn!5%MCBEZ,R\d98UYcDYn7KDeTS"L>n]BU_V"Mh1O#oWiKX)<MY!:6_TTFh1
9l6^0I^ok6T)?I(CDLt=Xm&HPJ&HKH.->3OtY.=oX!O/VBJjo`Ul9As**UmB`pL`"Xn'uW#Frg'YIJ7@
*!UnQ_Dg!/j?@DQ[f)b?jGAhXFn6UP;B%I(PeTYqT*UmB`pL`"Xn'uW#Frg'YIJ7@*!UnQ_Dg!/j?@DQ
[f)b?jGAhXFn6UP;B%I(PeTYqT*UmB`pL`"Xn'uW#Frg'YIJ7@*!UnQ_Dg!/j?@DQ[f)b?jGAhXFn6UP
;B%I(PeTYqT*UmB`pL`"Xn'uW#Frg'YIJ7@*!UnQ_Dg!/j?@DQ[f)b?jGAhXFn6UP;B%I(PeTYqT*UmB
`pL`"XPj0@S-N`Y7S"L>n]BU_V"Mh1O#oWiKX)<MY!:6_TTFh19l6^0I^ok6T)?I(CDLt=Xm&HPJ&HKH
.->3OtY.=oX!O/VBJjob,WgfXn!5%MCBEZ,R\d98UYcDYn7KDeTS"L>n]BU_V"Mh1O#oWiKX)<MY!:6_
TTFh19l6^0I^ok6T)?I(CDLt=Xm&HPJ&HKH.->3OtY.=oX!O/VBJjob,WgfXn!5%MCBEZ,R\d98UYcDY
n7KDeTS"L>n]BU_V"Mh1O#oWiKX)<MY!:6_TTFh19l6^0I^ok6T)?I(CDLt=Xm&HPJ&HKH.->3OtY.=o
X!O/VBJjob,WgfXn!5%MCBEZ,R\d98UYcDYn7KDeTS"L>n]BU_V"Mh1O#oWiKX)<MY!:6_TTFh19l6^0
I^ok6T)?I(CDLt=Xm&HPJ&HKH.->3OtY.=oX!O/VBJjob,WgfXn!5%MCBEZ,R\d98UYcDYn7KDeTS"L>
n]BU_V"Mh1O#oWiKX)<MY!:6_TTFh19l6^0Izzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzz!!!#7+8Z)EYD('~>

%%EndBinary
grestore
np
261.263 383.39 mo
259.849 382.683 li
259.851 382.603 259.852 382.524 259.852 382.443 cv
259.852 382.431 259.852 382.42 259.852 382.408 cv
261.263 381.703 li
261.263 383.39 li
267.452 379.645 mo
265.379 379.645 li
267.452 378.608 li
267.452 379.645 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[4.46721 0 0 2.82581 63.667 239.253 ]ct
snap_to_device
<<
/T 1
/W 112 
/H 71 
/M[112 0 0 -71 0 71 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=5n*eo$j33pDeujoU/+=Y/lbnO<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%Anc93R-J8~>

%%EndBinary
grestore
np
242.855 375.013 mo
242.855 364.181 li
248.313 364.181 li
248.313 364.749 li
245.687 364.749 li
249.475 372.324 li
246.921 372.387 244.602 373.395 242.855 375.013 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[3.90881 0 0 6.32822 53.895 244.069 ]ct
snap_to_device
<<
/T 1
/W 98 
/H 159 
/M[98 0 0 -159 0 159 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0;0`_7S!5bE%:MgOOTE"rlzzzzzzzzzzzzzz!-g?lGQ7a~>

%%EndBinary
grestore
np
249.475 372.324 mo
245.687 364.749 li
248.313 364.749 li
248.313 364.181 li
250.939 364.181 li
250.939 364.749 li
253.564 364.749 li
249.778 372.321 li
249.762 372.321 249.746 372.321 249.73 372.321 cv
249.645 372.321 249.559 372.322 249.475 372.324 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[4.62675 0 0 4.77602 55.5303 245.621 ]ct
snap_to_device
<<
/T 1
/W 116 
/H 120 
/M[116 0 0 -120 0 120 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=!=8`+$j<9i?Ym.$j&*%l<)lpu<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!<E3%!<Rn&Zn+K6f~>

%%EndBinary
grestore
np
269.94 398.259 mo
261.263 398.259 li
261.263 383.39 li
267.452 386.485 li
267.452 383.859 li
269.94 383.859 li
269.94 398.259 li
261.263 381.703 mo
261.263 379.645 li
265.379 379.645 li
261.263 381.703 li
269.94 381.234 mo
267.452 381.234 li
267.452 379.645 li
269.94 379.645 li
269.94 381.234 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[5.09235 0 0 10.7877 64.4942 230.705 ]ct
snap_to_device
<<
/T 1
/W 128 
/H 271 
/M[128 0 0 -271 0 271 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0KJI0+G$j<j%^N;Pj"2UK15Ce1Fzzzzzzzzzzzzzzz!!!"pI)E4Yrb_M@l//@fS,R:$\*;eIJ"-FS
qR>_HVLP*7D>La+hkkmmrb_M@l//@fS,R:$\*;eIJ"-FSqR>_HVLP*7D>La+hkkmmrb_M@l//@fS,R:$
\*;eIJ"-FSqR>_HVLP*7D>La+hkkmmrb_MX9n-hpG0B259RkOKoJc_CJ(*<I2uQI#e)0dVrU"M&c2=e?
s#0i1oP`3n:&d-Mg[oF5^J4_drS-s_e%\WW2Z;D&DpuHqs#0i1oP`3n:&d-Mg[oF5^J4_drS-s_e%\WW
2Z;D&DpuHqs#0i1oP`3n:&d-Mg[oF5^J4_drS-s_e%\WW2Z;D&DpuHqs#0fVzzzJ2MeIVcZd~>

%%EndBinary
grestore
np
267.452 386.485 mo
261.263 383.39 li
261.263 381.703 li
265.379 379.645 li
267.452 379.645 li
267.452 381.234 li
269.94 381.234 li
269.94 383.859 li
267.452 383.859 li
267.452 386.485 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[5.09235 0 0 4.02052 64.4942 237.473 ]ct
snap_to_device
<<
/T 1
/W 128 
/H 101 
/M[128 0 0 -101 0 101 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=5n*eo$j33pDeulEU+]'9/lbnO<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!<E7T.#@r$Gao~>

%%EndBinary
grestore
np
269.94 369.545 mo
256.84 369.545 li
256.84 364.181 li
269.94 364.181 li
269.94 369.545 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[7.61818 0 0 3.18401 61.9519 247.213 ]ct
snap_to_device
<<
/T 1
/W 191 
/H 80 
/M[191 0 0 -80 0 80 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=YmCC1#Qq=1s0Vc%`$p6_Q16^3zzzzzzzzzzzzzz!,u<H846[Y~>

%%EndBinary
grestore
np
249.73 391.667 mo
247.18 391.667 244.877 390.636 243.207 388.966 cv
243.086 388.845 242.968 388.721 242.855 388.594 cv
242.855 376.293 li
242.968 376.165 243.086 376.041 243.207 375.92 cv
244.877 374.25 247.18 373.219 249.73 373.219 cv
252.279 373.219 254.582 374.25 256.252 375.92 cv
257.922 377.591 258.953 379.894 258.954 382.443 cv
258.953 384.992 257.922 387.295 256.252 388.966 cv
254.582 390.636 252.279 391.667 249.73 391.667 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[9.33327 0 0 10.7062 53.895 234.477 ]ct
snap_to_device
<<
/T 1
/W 234 
/H 269 
/M[234 0 0 -269 0 269 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0M5tV,B$j8lrs(THYaQ1pp<l'/+Ud%$Czzzzzzzzz!!!"jnG1*/r)@m>;qU@fFUD@/V+tI"]@89GF
dG.CXmT)bYgm%E'XkSGS\eEOWDhI7/p.M*h5*kTX1Qk1Ciu(*Krsc@Vm+]Wl4g\<9:`q#GH"Nnl7R2d>
MZ,N@B7#i.;X-n3ea^(;Q$bL?0W-4\kAU2<d1NAf]k)3$<u>_:1:38e1#3VQTBi&mS]seeQqGS[^o,&_
H(l[;qU@fFUD@/V+tI"]@89GFdG.CXmT)bYgm%E'XkSGS\eEOWDhI7/p.M*h5*kTX1Qk1Ciu(*Krsc@V
m+]Wl4g\<9:`q#GH"Nnl7R2d>MZ,N@B7#i.;X-n3ea^(;Q$bL?0W-4\kAU2<d1NAf]k)3$<u>_:1:38e
1#3VQTBi&mS]seeQqGS[^o,&_H(l[;qU@fFUD@/V+tI"]@89GFdG.CXmT)br20H^Zg1puhqm_2QdrQ(]
C'8'mEMe\=abY'lX!WLhX%h?e[IKLmUc(Yc)uCrI=&<d?<5t?m(/P6[l:qeAbGH8Y'X<"HaE$E<o;d#\
sLsV2nSKhp$L#,HWbcDZg1puhqm_2QdrQ(]C'8'mEMe\=abY'lX!WLhX%h?e[IKLmUc(Yc)uCrI=&<d?
<5t?m(/P6[l:qeAbGH8Y'X<"HaE$E<o;d#\sLsV2nSKhp$L#,HWbcDZg1puhqm]\pf@Eg^P&`W;Q$bL?
0W-4\kAU2<d1NAf]k)3$<u>_:1:38e1#3VQTBi&mS]seeQqGS[^o,&_H(l[;qU@fFUD@/V+tI"]@89GF
dG.CXmT)bYgm%E'XkSGS\eEOWDhI7/p.M*h5*kTX1Qk1Ciu(*Krsc@Vm+]Wl4g\<9:`q#GH"Nnl7R2d>
MZ,N@B7#i.;X-n3ea^(;Q$bL?0W-4\kAU2<d1NAf]k)3$<u>_:1:38e1#3VQTBi&mS]seeQqGS[^o,&_
H(l[;qU@fFUD@/V+tI"]@89GFdG.CXmT)bYgm%E'XkSGS\eEOWDhI7/p.M*h5*kTX1Qk1Ciu(*Krsc@V
m+]Wl4g\<9:`q#GH"Nnl7R2d>MZ,N@B7#i.;X-n3ea^(;Q$bL?0W-4\kAU2<d1NAf]k)3$<u>_:&t=pz
zzzzzzzzz!8nso!p@:OaT~>

%%EndBinary
grestore
np
249.73 392.565 mo
247.075 392.565 244.66 391.544 242.855 389.873 cv
242.855 388.594 li
242.968 388.721 243.086 388.845 243.207 388.966 cv
244.877 390.636 247.18 391.667 249.73 391.667 cv
252.279 391.667 254.582 390.636 256.252 388.966 cv
257.922 387.295 258.953 384.992 258.954 382.443 cv
258.953 379.894 257.922 377.591 256.252 375.92 cv
254.582 374.25 252.279 373.219 249.73 373.219 cv
247.18 373.219 244.877 374.25 243.207 375.92 cv
243.086 376.041 242.968 376.165 242.855 376.293 cv
242.855 375.013 li
244.602 373.395 246.921 372.387 249.475 372.324 cv
249.559 372.322 249.645 372.321 249.73 372.321 cv
249.746 372.321 249.762 372.321 249.778 372.321 cv
255.336 372.347 259.833 376.849 259.852 382.408 cv
259.852 382.42 259.852 382.431 259.852 382.443 cv
259.852 382.524 259.851 382.603 259.849 382.683 cv
259.721 388.164 255.24 392.565 249.73 392.565 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[9.85179 0 0 11.741 53.895 233.959 ]ct
snap_to_device
<<
/T 1
/W 247 
/H 295 
/M[247 0 0 -295 0 295 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0M5u@e^$j=E8?R&mm64Rf@O6T(OaC[W.cdrC%zzzzzzzzzzzzz!;J(Ys-WX(n6aZsCE#1sQF./@Fj
&KnNOi\<_a`If[UGqK=kg/X\#aH!W*@h2Ct(%P)`HuI[1+'tbM%]1\n,`r7btAY@A@^CgTXPaXDQUg>L
k]Ke1GGT2X6U9%3'H5g4kTuASo=Sh6OItUMa5hYYhm2D:kdkei%?o/Sc:`lB\ge)g0?XL5icUD8Sj!ZF
42:DHY_u;7EWDfVi$*2JgkpCE#1sQF./@Fj&KnNOi\<_a`If[UGqK=kg/X\#aH!W*@h2Ct(%P)`HuI[1
+'tbM%]1\n,`r7btAY@A@^CgTXPaXDQUg>Lk]Ke1GGT2X6U9%3'H5g4kTuASo=Sh6OItUMa5hYYhm2D:
kdkei%?o/Sc:`lB\ge)g0?XL5icUD8Sj!ZF42:DHY_u;7EWDfVi$*2JgkpCE#1sQF./@Fj&KnNOi\<_a
`If[UGqK=kikOqL@J(DWNbK?>roRnsXkX\>ibY9t_?JeZHK]h@$LO<aJ_n"]ogsYGq8JX1FSJe9f#3h9
'Nu^#5o.jYc^;E)jC<RX-WsW`saC]bar(Xh:Of$a/bq?;p:r=*6$sWV;"F\s:msHbi_<b%p:Ui2U\V2>
(9p<O_OfH7ue.>BrrV(L5Lm]VaNnY3K%o;sslkFXsYppO]HWQ.ON4_,]=6C[/UkWc$oUoj2T;\+5u60=
\#dGtksg>h,shVVV]`l;h4imfcd8/$GrHJucJJf@5/`<Sbf5lFl,UDWNbK?>roR_Ro*joujR:\#aH!W*
@h2Ct(%P)`HuI[1+'tbM%]1\n,`r7btAY@A@^CgTXPaXDQUg>Lk]Ke1GGT2X6U9%3'H5g4kTuASo=Sh6
OItUMa5hYYhm2D:kdkei%?o/Sc:`lB\ge)g0?XL5icUD8Sj!ZF42:DHY_u;7EWDfVi$*2JgkpCE#1sQF
./@Fj&KnNOi\<_a`If[UGqK=kg/X\#aH!W*@h2Ct(%P)`HuI[1+'tbM%]1\n,`r7btAY@A@^CgTXPaXD
QUg>Lk]Ke1GGT2X6U9%3'H5g4kTuASo=Sh6OItUMa5hYYhm2D:kdkei%?o/Sc:`lB\ge)g0?XL5icUD8
Sj!ZF42:DHY_u;7EWDfVi$*2JgkpCE#1sQF./@Fj&KnNOi\<_a`If[UGqK=kg/X\#aH!W*@h2Ct(%P)`
HuI[1+'tbM%]1\n,^\zzzzzzzzzzzzzz!!#:N#@T66bl~>

%%EndBinary
grestore
np
212.971 353.7 mo
286.833 353.7 li
286.833 317.909 li
212.971 317.909 li
212.971 353.7 li
1 /4 /CSD get_res sepcs
0 sep
ef
212.971 353.7 mo
212.971 352.836 li
285.97 352.836 li
285.97 318.772 li
213.835 318.772 li
213.835 353.7 li
212.971 353.7 li
212.971 352.836 li
212.971 353.7 li
212.107 353.7 li
212.107 317.045 li
287.697 317.045 li
287.697 354.563 li
212.107 354.563 li
212.107 353.7 li
212.971 353.7 li
.770748 0 .91931 0 cmyk
f
291.29 332.465 mo
287.697 332.465 li
287.697 318.853 li
291.29 318.853 li
291.29 332.465 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[2.14834 0 0 7.91702 79.7149 268.579 ]ct
snap_to_device
<<
/T 1
/W 54 
/H 199 
/M[54 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0;0`_7S!5bE%:MgOOTE"rlzzzzzzzzz!!(s/!2o#\!<~>

%%EndBinary
grestore
np
285.97 332.465 mo
217.773 332.465 li
217.773 318.853 li
285.97 318.853 li
285.97 332.465 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[39.3464 0 0 7.91702 39.4535 268.579 ]ct
snap_to_device
<<
/T 1
/W 989 
/H 199 
/M[989 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0V;6J`bNWmdus1EY74c)Wh#c]A>j<!'?\1+TbkVLi?-8"Pr#Lm+1!<<*"zzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzSEGD$qVV<[!!!!aN?>pCrT4<7\U;;?"*4rGo(-d:^UjNV_Y5:5?LS0E*FOI`r
RQ.@!V!'a^F-`EHcVf-3HK^BS5fPOjmJU*06dS?%]&mlXDqhQE0pU>.>pCZ#0n3]gRY[j\HTbhIWO]!#
N!7d".c$R3R05WmdQ]-LE=+GQ$9BPFmgEF;Ur><quYe+pYQr(IKuFRG3e"'G:q^t#MuHNgi8&LE/"1-L
@-+)s1V-.]6*MJ1QSnL!:Ng.r]%pu1/'ZG]C4YTXh+ho^[I?:C>JdQbTWef^jB(P6-_69?;o/)me\s#-
03t^q^uU)H;+l@4TO?>l3q^!!VDe%m^iF18E`A6n%4gl6h_Y6Z:O6]n8;6=OY[IASaLjVaX6+`"u<"8h
u3F)A]]7((.gXhW&fj6T4nVhLW!BSWX3mS'26Sf>.ph+aaa!P[jau$CU-LR+5iWg1MQ^=f):#A;@@T8H
nUt(@W#-04BYS]]?cJT-0o]!FRLNPpTU+>rjT):W&c"IT/13EAPt,L/++rOVWO1Nh]#PXs.j#Xk=<DC-
)$?iH$&d<E<]g9mWU()h9DuMpLHkYA5Y#K:Yf[9gZO&qB$%Ho`JX#+pFUf";Wg09QCXFcJ!24La\\i2h
+:pK198P]<RU]1<""*&I<KlHrbYP>WHGnrMX5QZDplk*c?V`.]/&XM%S\pDY=c!:W`*s*IWpt,PK]V/5
=*`nQrFI^epV.U(Og9pAkBDCd>I:7oQ/I9UqLhNC.kM!WfHLc;"?Vo=*HR#Y#BH*R(T$QFs[0&P2;J">
'R7=o4l6)GFJ0:;X/M5("r'@l'0jmT(@V]P%H"WV<cFie9-Z:*0]"'lqWl=XsDQ7qfJH/43kFdUumq=_
jddLI:kblbYH<mG.52=)Ck%9roU#I]iDZ83H^me43-D^Okm""hNam?GaIhSC?KkdR`)l2Wn3-pGP<qBL
:Z9IVtD@cn?e5DDb\ZJ>HKu^;qEJ0F%fn?q4/qu>tM&MpZVUZF?]R98\+*9*l#m;7ID2p9V.pa1S.Fpl
?lW[]6:7^\hcBiSYA3djRk@EP9mmm8[\$tC#>)L>,Fm59qU#:[qYl,j,2X(qO'<5;pM+j\lRsWeq:>US
uVRW=>P=(M=)@IfA-km+R*0'WeL$jIm9*39@o_=p\-:WXmiscXJdL`TAAs_@SM(39W6of*JlpMX66JMF
7[n(MXDIJf@:;e,jAT+WeIcRq//m*1JLqgh;>fn<G?Xth="Lpqqg$#l<4j9=?2RZqb3B6/%X'N;]!)Ld
^tZA$g3uPc'VIGP)__Mhe1Bh[%8VWB.<<HmU!*"2kbtk1RY\tPe$QgpK;e,Ji?>K=-@=W9U!4+;sWkYo
7#&7Q^P5/H[4^u4!_K-#rPtM:h/Znmb2GK*S%aIaAWnf=jjpF<"%lWrgfE]H`(.nK^QIrUm9`UX3]Oso
:=ddheEHT<bJi3I9TP^?]uk-/*["-WeIeG]W85X_B(c)aR.*.]kO>;n]Gorl?_?3p:!pdSX"JC^3:<7n
X5'%!c''phat4pSs2=Z;b?_cBi\g=oKN2M[BkX4T9oCLm=+5BpU3sdX]:dc]R*H>i\N?DF!\NW8[WN7'
BUh(Xu4mibc:*LDcf)J\?_H,G%KL[gF<N;<b7ThmbOk!ccHpIQ1TMQe\\jlR'#fReo[0[<S`GfY]fa0m
^(C"V&btJpU3CT]bS)S^4VV^,FMfq>Y4C.;D"DUqHTS1-gk$#;tZ^VjL)%DGFq+]4^+8#6=25geGM/8e
9>m.Ca>2rS1Ek&:9'$>9qSBum`""RB!f/TM7r>K_9*gpAc!i*B(,$B9ZlC.$$AJSmqs51cCs=p80qJ"=
46u:<"&.KH(IdA)g?XlcgL]EH_!u3`OjL1LH@!3J?+/M23T*pl@+oRh&`ZcgBk3K9YPJKV"ZsM(>`Qd4
IpLOmWLOYNr0Q;SPmqc?6nmrWiIrNAFC3&pnrf!GP.`r\J>"00H8,E%-L6/^QWD`#u8&V:XbGQ>+a8Um
qt9;p"sc^%(NY<8U:5q;#d(+X89&pLF:>:.N-.7P2>Z'>$us2m`ACLjdt&d[!Jn)oV8RrqX:pTO&u$=0
op8@mVV]E;KKhV=6.JOEe\W]^#)Dh^]Z%APpbe<4KZqDoj"K\[.e1O^8GT5c)s1/nm'S#Wd^O!+/rc[k
=U'8PA5XT:;&;.lc_JjccL60nQT\d4&`\.=mT:8CTYgR1/"4$24Q2]rD'?r-91hHS>nC6Ucp0Vnta"<g
7P=rpBb!(art2qaIseJSs)+'/*["-WWa_/rSF'A47ACt:RSba^MT,rh=h49<+h;u<bCkY6_9K#S1Ek&:
9"IEE$sA?46r+pVpt6nS\K$)4T0+U4bp'9Y?k:G?(&Zqr2:c[3*4Q*SQ#tji*Ncd6ImT6:9!8Pe\+W1h
sXh+GA@0GGe3WTlUniPo!jl*FlX%q8p\79C4Q]JFGK:MOE:0fYLJXjD\__4qAt-0FjH9Fp5+\*moZ45S
=0blA.RiqHG>YYJI1+mp.3<9qtVZugi9gkBm]NblFRckm)X?]ramCIm,;2@n$]P,53Hgj7oIXg25K;Pf
A2lClug;9WO+g3k^M,arEV4A8cE\3Uj(Qr".sX!g*8'0mM`[/s2:,4e+[,C4">NJ*BN)cQ%.O.AC?)nj
>YEWSu'-TC%X_HGGOo[1@D<?qtX#MXZ:CI'u-=;k5)D_F3seXqQNcYq.[P2lq,rE>!7u4D.ck(`/HeD8
BKeMMOKb&hL4iamrtU,pTNJBoO=H\ZdX6Pq3/85[!EkFS'IucM&CNgP*Ej!Pr3dS^\[BX0(cQ8pT;beo
O=H8o?Z-s-;3*+>!7u4:$5K2e8IWS/SR4mWk.&irNErA\.ehtWVb6'9R<s>jgf$k=d,]L1T_]hoX8gU\
)_qKl:K1X;_..hRD[>IMS%9>S[_J/c(tsJ<1eHeqDDF051AeJ6uP,]G"_i>FOZPD`E-*j]/k`8HV4&(e
"!j*4jBi/qlDdCXL2iL[!eh%")6V87dZM5Db!NY3IGC\]ds)2dN)n!/ST:sM3IZ)p0R_sl5nfFs&XC1D
riulX]^jam5(jc8Fs8GW_7*8]BbnHB<,gMas6k&ZEh3ORJEBep@->]qtRMJZYegM<VQKo]U;kND4bP85
a&UI:C32imHFGc3SRR&h<.JEPH:oIEK5L8=S'kqg:KT&2:GUo9QfgMb+"6Qde9)0%jZGTq33'LgYKQ83
+k<grUa5?h*lMSA^X8KHXkAcYqm1HF.Tu;BB@CV8nn/rWs;P8m;,DESS_I.Vp&<<?/SN3S9>.*Yb.rY,
j,-+Y*kiRqeWL^R%k@9c'R"V[!EjGmo>Cn>eBktjkGm*<pa<qL>@9W;Y?R9mob@ElkB6*9)#l(c(C[TE
m9s%UU5=iJSu:\Us)*ES9<`fWpYk;pX#1TImmC6<BY-O=^.GF8jBA!T*s6:q+2g_HtiO61[o=s;uD_8#
J4WNqu0Z:GO2thmWqps*j=(uqsWmU.f67A:XXY<=>T+eQ!CXAp*[*lki+\C%q]8D*Vo+e3qD&(]N'#Vo
uma2=Oh5b4D0H;1VoM=1We^H/[7Ns2*hK)W#hoURYU]_j=>TAbcg'[aj3Y1a*+'aQ1%#:mdn5_1Fj-[2
-XO>&o3(/^/=bRk@bq!hiY\-91jZFle(m#]?flilY]uYCT`+.3cpu!<rS%O,1gXfrCO'sG4U.900)[LQ
LDERJ(=;6h>Kp8R?c+!g1SHBXK8BnfA<QC:R.LlRESC6`;V%5FB*?ujI:703CS7k'CW:Y<8I(GAXD6]o
5\cA8TU2B(@6Lr:+&!'1,J_=H^%X]<U'1=bFN4Z$+[XnI^`eDQ.`#._S"[YkL91/,4kF_?tU7QP8./eR
='iS9!%97#rRmf*G)u7ft,)(;k7370A\T?<Vq1?r]SANjkm5L/!JH(Lo\`n[ab;Pf(Fk+23Q.rA?RF"]
>(LKSQg+fhDQlaqlG)KYLG?'SR7r4l"%\3AgU_sIo>V/b*4s/j=[aiUoZe[/%PY$e[["#+aqqB<UKDGq
0_@QWW%6M<b?G7R;eFZad1YQe@N@LWE-=7J*]$AlcQh#^U>>qeEkZI]irrMn".oI/'Y'j>"L>OAS/6Ep
*[8N5FGJ$=kl=:R[3Q1qU5,$C.2a6Gu'h'8lbb9E_c(.a\L[D$F8V?1QsDu5H/f(cEqo>i=<0F`14$\3
+5%.hNZ]X\Z\o=cR3A5omFH4Cq.X3j@VW);X8X4CJ)i^E<"R+@b+WH9A`OFb089iShTo(WqNtYY:&4Z2
lns$%p,-bCruWIY3g+t.5d=*rF<%1=l62u_S0']]=4\`:!.\&lrU1?kN]^OHkT7]D^?X20JD+Bqib:>S
Ji1,-&;B<?;n2E>N^[QX`AX#Dp!=Ir)]lOkDm3HHlGgcD^Hj70JBubcb8DnY1D31.p:Xlp6qNEh)ZqNZ
-nh!YK/`SgZG8GT=a[jj;Cb-,H:!1H[E(\g$rD2-.gtZ0X8@Qg<;PV<,j#=F-EqZ>3hE$<a(nmp%.VN]
bB"4<R9R1O&,auGL'=9_2c&sQh1cM/a^dDhpQk8>$o7XKQjH-Mt!/!=[0$2g3tP7g$e?YGIRPbf4n=3h
mnfGF#S+/DmJD%AgQ&^F"jj_h\,?44*s]J\t\%qH`ljK^UsO%h>0oPX&V<tHQQ=(RCN#Ng$pMtP&%opQ
r]jJ#^;]-]hZY[WnrSZJ)\R6n,D(aI%QoDPLjQ]qQj+EcR-rR1pZ.?AgPoj1GGdth[o324+!N[F_/f2p
]&0qI<PSD.t?a3[G%e_m$*UtVc)YbR\Y.`>\W@QJ"+lUPT#bS&S*[ZH_$8kMRk1tE7^::Y5Gc$k545`R
(QJSoe,WrOR&fBk$XXRGDKMd,Zi^/YbKEr)H(T#KA"rDPcRs94Z/.uT'l,_4r*lW3B&:geZ,4u]oO\O,
e_YUF"g>:4%(]BOt#c[=B0/2o943iT@qo`PcRs;4Z/ERT'l&]2AOn/3BJRkeZ,4u]oO\O,e_MQF"g>:4
%,sQZ^/@#l:k?Nl$!AQR@X:Oaa/*sPI()7e%IohV'=ZlB?8T1>1N5VpMm$qUj"h1%]2gDLWG^'f(.Y(^
3%knIW$?qg"GhiXEW/X3M0)0h,d#t;mJQ7(4K;lc_S3#p$Zbh<b;,ONO;Nkqj_?Z]l\J#G;;e5M`t`c^
QYt[<WD]]rhO"!'q%b;p!c"sSZ7)bjYa#eDk"3c-_K'SGJa=A6kf$dM>,BHXQX/;p,a_hh=XRilZXiP;
j#+b>Ygl@5H3@L;I5R`pU5@JEp@qpF!oam:3<ls.D=D3n""8-Z_E6.g$b`<48*V[DSK)SQ`;S`A9qGZ^
N*e%-hZqFo2atkZ^Mf1I`nY$g6\&\XK;.k-E0#Q_sH`6;V%CcR%E-;<:$A0M[>fCf)MqDf\9!rHeZ253
Us35\J+Br-^oEI>ugKe9N![@L\]Wl[&gn6d/ElW'mln%@7$h=p&5W:HFqY%rk31*Wgn6-o@uq3TTe0q9
2]].CVH9.C-LusIX7NMFi#1pamtp,hh]FD\t.4B/#r<2Ph2`1]kuW+S8q(tkG5`:8Z)6YZL0eWV!#X%k
,6Ns=XWS]WKnp3C9QEBHC!$,IT=o^=6<LGY=\\>gUpNHiI%NJ8U$klSC!U[g@+)V,p2h848hpq4)Jk1R
H:H;/,,X,jlCmJ0l9B0C.[^JgZGW\$0O*%:AJ4gk"]7rHh4',],=;aL4.9@NlcREcHZ!LY,o*YhoRlRm
.D%J1U?!\S(,3^c!-ITB/=\uI&G6,H7/CI:AoD25:IEB0gBq1k++[pP@qM5f'5CGB/m$>:[O[7?$D?$r
Hm;3<LJ4m;e+o,_L8K2pY@=5>Gl&L*p+j%UqA)"cBLA><`rr*IZsAmeDgm9qb4SR9^:Nik,le%D[?#:S
f^(9>$lH%gSSMuHKHU4KY45-cEqm^Xh"#k<Rd@E6@ULcm5*uJ19#bAS$u!'cXrbQH$8]$M1+(QD4?Ull
^=G,P4P8+44EJtY&2-A'DhPUl+O4mA=jldO\`9TeA&K;>G]kkP[\C`/%hS5;k;X/[-nrH>;8@SBD>3i6
#*ONF.ZA1MOMue\5I'K=1PW_mPFXelmMJpD=^f-A%!$8IOgiJ3k70uh_i]gCXsg`mQ2`d$2[h%:X]5C9
C1n8h<4'\pM!P*hDT;;]&tbir_FfC>c7>943_Nrhiu'uFXQ=B^8D]g,j]<5UgEK9IBIb;CJt2h2K.-WB
61re0V,js]qI+9AQJ*qStn!A3B?ET]rcV[oR:).d)X\JcdL@s:?p^Uk&%NoH(FYX9HgHADsE8TR$G7t-
`N$M]HQIf4g',)#sJ/bG7Rd=5!*t$3N7KUcJ*6mo/lo!8L13=DsN>UQ^,.s-`N$-]d`!KR9KF1PPXtfZ
TA+;9rR#L.@Eo^4jtdl5Fl>Lm;9Q,m]p$jpEXnOHZ.1gEUVH(3OO(GEpC<Ol0Rd9<h,917,:!]#LCI>g
DbKL-<[JJS!(AX0=cOuRR>U]G1>CIISX1iq0))lc&%i`dG60kE1LfWH!>dB,V+"e;c4E]PNdQCBCb]`m
\m\nrLUH\nkIThRl=lJY.J''i+mA$lYZTGgO@hRqjWb[n;[@gWVPnZ[JToo[Q="SfA2pLIe-ihhoroda
lFF[lHbsn$M<k:r7m/'M&eHshdr^fSbZ%0h4'(Ho3^<:I/=o)j%OCVc^XV8m,RtfheBXgW3?(N4)M+DG
e3>"V"C.[l0!LN4O]ero9Oe+HamEFG=m$?C@&P/:0j,&T;K4Z.K,!#hM!c!WBY=T/$PVWic?JX\"h7:h
_`g5PDi;hh4'XX6Se*2!;t(^n[[m%m\mJh2pJ_Kmre@o^Ys7r*rs#r5HHRs_]?..s/)3mpq98pkr8BU;
ZXZEmY,e\jZ'AKhJL\DjYo,GBBB61rsi=O;O2bB0Zg-JY^UZ2^R99GhTe9ghLnT$*ak.&^L@*'"p!Rom
XK!tkN_dAPP>Rp!!#^PpBps$zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!$tqrrWS8f1c~>

%%EndBinary
grestore
np
287.697 332.465 mo
285.97 332.465 li
285.97 318.853 li
287.697 318.853 li
287.697 332.465 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[1.07417 0 0 7.91702 78.7203 268.579 ]ct
snap_to_device
<<
/T 1
/W 27 
/H 199 
/M[27 0 0 -199 0 199 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0=0b"*_$j31!pJj(,;%l#7Tt+-&<E3%!<E3%!<E3%!<E3%!<E3%I4/6J*rV~>

%%EndBinary
grestore
np
.770748 0 .91931 0 cmyk
ZDBOTA+CambriaMath*1 [13.8189 0 0 -13.8189 0 0 ]msf
240.287 344.049 mo
(#)sh
236.486 346.813 mo
( )sh
245.4 346.813 mo
(\()sh
251.146 346.813 mo
(!)sh
258.124 346.813 mo
(\))sh
311.12 201.824 mo
280.027 201.824 li
280.027 186.471 li
311.12 186.471 li
311.12 188.026 li
306.636 188.026 li
306.636 199.393 li
311.12 199.393 li
311.12 201.824 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[17.9824 0 0 8.91965 75.2989 343.801 ]ct
snap_to_device
<<
/T 1
/W 452 
/H 224 
/M[452 0 0 -224 0 224 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0Q=cOat%L#*<J$(]=)@-F2BW8$^,CJH^"q]-OAq^K=af#-u%fcS0zzzzzzzzzzzzzzzzzzzz!!!#_
j1kWi]E"TTGmFE@&-2\T%fnp:!l1Gh+]-jU*S.&H_f#N<7ITSIq`jpn=o6'WH4N/-mqR-8UHa-$c_79#
*A%eCoS:cW3V4$!UZGp3Dg4b/Tr7*;/J$lg___-!4[ngRGo5EXT$_cG.=+e56WmNNhEt)d]369$aM[3_
W1N_jG)Dlj>Or_\[Z!A[.Cp%in(iS$U1YtAHtJuIME<?bDQ*L;h42.PeRkhu3NMSKkhWB7(Na`hhH-)D
9(QD8?UaF$[D/B(PP;f.9N@P]8n\+#khWB7(Na`hhH-,E$9OpWY);)lC4AN.-guJKRB!IrZCgS5dCWWM
0BhQZ]rs7kR<LsZZ[F<LGH:ZGh42.PQ"DN30$&@AVkSCEg0`4Oaa7B3VR#TAD!.dnHXH^MYb+&U<L+'a
s6J!)l]!t,qoQ`_A]^VSB?4n0J)8u.DEWL`jPdjBn!`J'=#%*QmK]7*%t?6IkLapLS(]66"O<*a?b=!q
m();VoueA,F5G,BVTRP\>L-bbceK0n-T]R/kM]$_:-XBG:$J3q!bXsb=nXs_l-ZKFc*+#:cWu+.U@YHQ
*j5/"p>;C?HOnpG3%m>=WoW,2YBKW0hs9,hG6Q9McEg,g\D",,hredGqq:f$+H,GGX-SN<4l^0\Hg8>\
*RT.52('``@mqF8lFt%Sd<SbQ/%WK&7G[h+cG2RjkA.s$b/.DposicR5\BS+SLi!]9<Yt?#?2iWpQ1#Q
FQn(;pOFaSi?%u8Qq)p\GBa@k7NS_cR=j=A'<-#Eh%b_h&)TC8K3`d;WH+%MT,fDFLX4c"_<S^k<404'
"iQOY5E!b$b'f1I[?p:^`0#g^MpB!#rJT7#B7>3;7iqZpFDc6F`p!FM;#(GJ3dJ1bc->Y3ctORjmp;9_
TV@Wo47h6<fa1g,Yp+MgWdFsbS\3_1jsKCHW4o=,GH].j:f6l?S=[>dB?>8H%d-l<$S%%*RpC+0f7/"3
rTIQg3NpS0:f6l?m$t[]1Oo"77.7>C4.u-Z<"qJS]B:fiX@N2jW8/2:#?8EhMPB:r`8"pkmh:10lgBYE
""IYD7F?0t@dZ"qFdBdl@rFfn!L9j]U?K-J20[HSI-Xq_mg7?0FIm'c_l1:=4B!!sr*+97S]\iGhCV*%
URi"3Y>4NP%0'(Zb(/\<r9cZIr*/nXN05b'!Vi6K4@:.ke05FLOG<hDaMTgp+[@XMn-jRJ:l@Fu6QQ<Y
1*mGqc)9t5_!fC_=TuV0ahq6b_!fC_=]J%8Y9k!'G#gBC@J%:U;O'ZEC/P(FB-l"H7dlft<Cq;9-5@(V
LUZD,qHR1'P3?4H.Nj0MDp<Fs\[#0\dCkuJ5l;VYRd90YAZ8:rHSqdQpc5uEf=,rj`#e3PpS.-)U]TQ=
nCCk%h?ad@W8$0e^.XXsLnDRhF+&B_7-pUbHS>4J9e%97%WBVbm@=fnLUuldkdr[NJG;.;2:o<]6Gsr1
[eK.[pZ*J[(S+q(nEr(_Z-V<kLX;MQ>^p?3pA'(+&:0Oqld)ZN5(??L6>uF6rL&r'kO6M[kY3,$5I2""
r&o<2]ue1bB3&K6^F'Pc2gMq4bY%6npZ*LIo]]&l_t@YC@\:C_&##"B1FWjdT37#!rgl6*)W&c94C!AJ
-2..]ndn!/@iiA]gF)Q2jh((;+8bt!GmL$(0cNpfhOE]#cGKrg8_<^JU%>sJh4Dp3C<ir1p89^i_gZs9
l[.I7q-LjS:M/Wd`]]kgGpj1b][mU`mfi'D+V12mIW_N_F!s[]de1:kk^5$k\(c2<qK[?7&!_JB-TmfV
V_`GSo;aYf]l12U-.0Dp<&!"Sfm#8>:M9*Zc`bW9oY/FFPsk@];Sc=NAn/ko^RMj-5/0/-dJG7`<>+,g
8Hi&+R>n+c[/9Hq1EF/IZ;`-t]p_nSeXP6:3_-eGs4;Ipc*TX@/ik4('hn:42P/4AS%8Fa44Rrs*a0AN
&X*R!H8?AL56(<oeRmMV=r3_AP7"2@SQ.V_;f/CMSiPQ;mh20'P7"151DaulB]jT>c1HuOB79M[WrD]0
<1Y,?8KOIIo#qj*Itt&=I0PsL#B"fK(V@"jjbspdqS\f&ojCeMh`c\8ZNI\<bXKHo5!=+uRGPK0VXCmL
n%?in3s/8Xaht%>c8O.`pX$k72Y!>^Ob`G4Q'o.ILJQ6eELotmTkXC@gAC:`&)h.9o<@4:T@uYrG2/m;
h+\s-pJtp9B-'7)_2@iS+V-C&jbYGTH,?A(!cLKfiQCmY4a4nk5.QHGm("S6H%J/3n&`Io:@Fk_]5GJI
Sg"^(H^XGDkIECoo8Po_IG]0s^Q[_%Hu6ndXQ8?^ZY,e@H+:$SqjeuCiG4R$\>nONhqCGgG@'HV4&$d5
fAtmr2tp/#^";qjDNKYCHb3l5@[=%>o8.NQh/O2+oUW/RF[P>=!A!6iI64b#<)q?9SSm\<-X]C9=f?B?
k`"i;s.XisWF1>CEtC@Td5u+>rep3lUk8"qbe_SKLu(/F._FpD9If8/qAcT\EqFg[;OKuJAl?GZ<G,]N
QD=1IQ-(Yh2j4TGWAF^XEu_l#.TKNsI@4%g<VH=)@ud>Y98;8'I2>BIEDcgM7F#oFI`\h#WpdjhISVHO
]Z<*nhD#oA;=sH]7/nTt$90\ZL8/rdL-8K"XT'"5gJ'0U]Z:u!6iO:SqfM`fDWuJ6Tt70RRZMZaW;>@N
c^ho5q[T#_rO^;/s/k9E[*RWnLQGG&(@lCoqWV>!B<E@))43e!T"608R5'5qfm<]!zzzzzzzzzzzzzzz
!!!#7Vu?pg>uu[~>

%%EndBinary
grestore
np
gsave
311.12 199.393 mo
306.636 199.393 li
306.636 188.026 li
311.12 188.026 li
311.12 199.393 li
clp
306.636 188.026 mo
311.12 188.026 li
311.12 199.393 li
306.636 199.393 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1.73675 0 0 -1.73675 149.183 798.988 ]ct
[2.66553 0 0 6.64992 90.6157 345.195 ]ct
snap_to_device
<<
/T 1
/W 67 
/H 167 
/M[67 0 0 -167 0 167 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"0;0`_7S!5bE%:MgL^TE"rlzzzzzzzzzzGT![6!!*~>

%%EndBinary
grestore
np
1 dict begin
.835294 .494118 .0470588 0 cmyk
ZDBOTA+CambriaMath*1 [16.0991 0 0 -16.0991 0 0 ]msf
305.811 199.267 mo
($)sh
end
grestore
grestore
grestore
grestore
pgrs
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 /3 /4 ]]
] del_res
true set_gvm
/ZDBOTA+CambriaMath*1 uf
/ZDBOTA+CambriaMath uf
/OFAAAA+CambriaMath uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
grestore

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
LH
%%PageTrailer

%%Trailer

Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
